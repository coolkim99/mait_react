{"version":3,"sources":["lib/style/palette.js","components/common/Button.js","video/backgroundVideo.mp4","pages/HomePage.js","components/auth/AuthTemplate.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/auth.js","components/auth/AuthForm.js","modules/user.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","components/common/Responsive.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/Navbar.js","components/common/SubInfo.js","components/posts/PostList.js","modules/posts.js","lib/api/posts.js","containers/posts/SearchPostContainer.js","containers/posts/PostListContainer.js","components/posts/Pagination.js","containers/posts/PaginationContainer.js","components/common/Footer.js","containers/common/FooterContainer.js","pages/PostListPage.js","components/write/Editor.js","modules/write.js","containers/write/EditorContainer.js","components/write/WriteActionButtons.js","containers/write/WriteActionButtonsContainer.js","pages/WritePage.js","img/exercise19.jpg","img/exercise18.jpg","img/exercise20.jpg","img/exercise15.jpg","components/common/MainPhoto.js","components/common/MainCard.js","components/common/MainAbout.js","components/common/Main.js","pages/MainPage.js","components/exercises/Test.js","components/common/LoadingBar.js","img/squatIcon.png","img/lungeIcon.png","img/pressIcon.png","img/treeIcon.png","components/exercises/ExerciseResult.js","components/exercises/Check.js","img/squat.gif","img/lunge.gif","img/shoulderpress.gif","img/tree.png","components/exercises/FirstExer.js","containers/exercise/First.js","modules/exercise.js","containers/exercise/ExerciseContainer.js","pages/TodayTr.js","components/chart/MyPageChart.js","components/chart/MonthExer.js","pages/MyPage.js","components/auth/ModifyAuthForm.js","containers/auth/ModifyForm.js","pages/Modify.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/level.js","containers/post/PostViewerContainer.js","components/common/Comment.js","components/comments/ShowComments.js","containers/comments/CommentContainer.js","pages/PostPage.js","components/exercises/Calendar.js","pages/CalendarPage.js","App.js","serviceWorker.js","modules/index.js","components/common/ScrollToTop.js","index.js"],"names":["palette","gray","cyan","blue","indigo","buttonStyle","css","_templateObject","_taggedTemplateLiteral","props","fullWidth","_templateObject2","_templateObject3","_templateObject4","StyledButton","styled","button","_templateObject5","StyledLink","Link","_templateObject6","Button","to","_jsx","_objectSpread","ButtonHome","VideoDiv","div","Video","video","BgColor","BtnDiv","Title","PostListPage","_ref","history","className","children","_jsxs","_Fragment","Fade","bottom","delay","onClick","push","loop","autoPlay","muted","src","backgroundVideo","type","AuthTemplateBlock","WhiteBox","LinkTo","AuthTemplate","style","textDecoration","fontSize","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","_handleActions","_defineProperty","state","action","payload","createRequestActionTypes","concat","createRequestSaga","request","SUCCESS","FAILURE","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","put","call","sent","data","meta","t0","error","stop","client","axios","create","withCredentials","headers","logout","post","authSaga","CHANGE_FIELD","INITIALIZE_FORM","_createRequestActionT","_createRequestActionT2","_slicedToArray","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","_createRequestActionT3","_createRequestActionT4","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","_createRequestActionT5","_createRequestActionT6","MODIFY","MODIFY_SUCCESS","MODIFY_FAILURE","_createRequestActionT7","_createRequestActionT8","UPDATETOTALTIME","UPDATETOTALTIME_SUCCESS","UPDATETOTALTIME_FAILURE","changeField","form","key","value","initializeForm","register","_ref2","username","password","login","_ref3","modify","_ref4","updateTotalTime","_ref5","totalTime","registerSaga","_ref6","loginSaga","modifySaga","id","patch","updateTotalTimeSaga","takeLatest","_marked","initialState","passwordConfirm","auth","authError","_ref7","_ref7$payload","produce","draft","_ref8","_objectSpread2","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","AuthFormBlock","StyledInput","input","Footer","ButtonWithMarginTop","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","logoutSaga","_marked2","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","_context2","checkError","withRouter","_useState","useState","_useState2","setError","dispatch","useDispatch","_useSelector","useSelector","useEffect","setItem","JSON","stringify","_e$target","target","preventDefault","LoginPage","LoginForm","status","includes","RegisterPage","RegisterForm","ResponsiveBlock","Responsive","rest","_objectWithoutProperties","_excluded","HeaderBlock","Wrapper","Spacer","UserInfo","LevelInfo","Ai","span","_templateObject7","Header","onLogout","level","HeaderContainer","NavBlock","Navbar","SubInfoBlock","hasMarginTop","SubInfo","userlevel","publishedDate","color","Date","toLocaleDateString","PostListBlock","WritePostButtonWrapper","PostItemBlock","PostItem","usrlevel","title","body","_id","PostList","posts","showWriteButton","_useState3","_useState4","setCheck","length","fontWeight","padding","map","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","SEARCH_POSTS","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","listPosts","page","searchPosts","option","content","listPostsSaga","queryString","qs","searchPostsSaga","lastPage","parseInt","Cbutton","location","setValue","options","setOptions","parse","search","ignoreQueryPrefix","method","currentTarget","_qs$parse","SearchPostContainer","PaginationBlock","PageNumber","buildLink","query","Pagination","disabled","undefined","match","params","_qs$parse$page","fontStyle","class","href","FooterContainer","Helmet","NavContainer","PostListContainer","PaginationContainer","EditorBlock","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillInstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","writeSaga","INITIALIZE","SET_ORIGINAL_POST","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","writePost","setOriginalPost","updatePost","writePostSaga","updatePostSaga","tags","postError","write","_ref4$payload","originalPostId","EditorContainer","useCallback","WriteActionButtonsBlock","WriteActionButtons","onCancel","onPublish","isEdit","goBack","WritePage","WriteActionButtonsContainer","Wrap","Text","H","MainPhoto","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","cascade","Slider","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","fade","centerPadding","autoplay","autoplaySpeed","useCss","exercise2","width","height","exercise3","exercise4","exercise5","React","Component","InDiv","useStyles","makeStyles","maxWidth","margin","boxShadow","marginBottom","bullet","display","transform","pos","About","MainCard","classes","Card","CardContent","Typography","gutterBottom","variant","component","CardActions","size","startIcon","NavigateNextIcon","Paragraph","MainAbout","Spacer1","Tutorial","Main","main","LabelBlock","Test","brain","pose","skeleton","timer","timeover","getData","squatCount","lungeCount","shoulderCount","seconds","minutes","hours","squat","lungeL","lungeR","press","tree","ck","squatCk","lungeLCk","lungeRCk","pressCk","treeCk","poseLabel","ww","window","innerWidth","wh","innerHeight","analysis","exname","x","y","myCustomRedrawAccordingToNewPropsHandler","gotPoses","poses","i","keypoints","position","brainLoaded","classifyPose","detectPose","inputs","classify","gotResult","setTimeout","nose","score","ankleR","err","results","confidence","la","label","clearInterval","clearTimeout","document","getElementById","inputLabel","save","index","isTree","sec","setInterval","Animated","animationIn","Sketch","setup","p5","canvasParentRef","createCanvas","parent","createCapture","VIDEO","hide","ml5","poseNet","neuralNetwork","outputs","task","debug","load","model","metadata","weights","draw","translate","scale","image","a","b","strokeWeight","stroke","line","fill","ellipse","windowResized","resizeCanvas","Progress","Done","LoadingBar","done","setStyle","newStyle","opacity","Ex","MtDiv","Mait","Mt","ExLabel","Pose","ScoreDiv","_templateObject8","Score","_templateObject9","Grade","_templateObject10","ExerciseResult","squatMt","lungeLMt","lungeRMt","pressMt","treeMt","mistakes","grade","mtNum","fail","paddingTop","paddingBottom","backgroundColor","squatIcon","KeyboardArrowDownIcon","lungeIcon","pressIcon","treeIcon","Wrapper1","Wrapper2","Loading","Check","showResults","setShowResults","trainerAngle","setTrainer","_useState5","_useState6","result","setResult","_useState7","_useState8","setLoading","userAngle","angle","calculateAngle","s","cmp","str","squatms","lungeLms","lungeRms","pressms","treems","parseFloat","fetch","then","json","exer","idx","inputX","inputY","Math","abs","atan2","PI","ExerCard","FirstExer","arrow","marginLeft","marginRight","ArrowForwardIosIcon","Hello","StyledButtonPre","StyledButtonNext","Order","First","setSquatCount","setLungeCount","setShoulderCount","setTimeover","visible1","setVisible1","visible2","setVisible2","exerciseEx","setExerciseEx","_useState9","_useState10","setPose","styleExplain","textAlign","menuList","menu","animationInDelay","animationOut","animationOutDelay","isVisible","image1","image2","image3","image4","NavigateBeforeIcon","exerciseSaga","UNLOAD_EXERCISE","WRITE_EXERCISE","WRITE_EXERCISE_SUCCESS","WRITE_EXERCISE_FAILIRE","writeExercise","writeExerciseSaga","exercise","ButtonWrapper","StyledButton2","Ec","lunge","shoulder","ExerciseContainer","time","mtime","first","setFirst","total","msec","videoOn","visibility","tracks","querySelector","srcObject","getTracks","forEach","track","t","Number","toFixed","totaltime","Background","TodayTr","overflowX","MyDiv","Level","MyPageChart","datasets","borderColor","borderWidth","weight","val","lefttime","num","floor","Doughnut","MonthExer","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","exercises","date","len","exerDate","slice","labels","lineTension","Line","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","ChartDiv","InterDiv","pc","minWidth","minHeight","mobile","useStyles2","MyPage","setStr","charclasses","matches","useMediaQuery","imgKey","space","monthspace","lv","Grid","container","spacing","item","xs","float","ModifyAuthForm","alert","Modify","ModifyForm","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","WRITE_COMMENT","WRITE_COMMENT_SUCCESS","WRITE_COMMENT_FAILURE","UNLOAD_POST","readPost","unloadPost","writeComment","readPostSaga","writeCommentSaga","PostViewerBlock","PostHead","PostContent","PostViewer","levels","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","AskModalBlock","AskModal","visible","description","_ref$confirmText","confirmText","_ref$cancelText","cancelText","onConfirm","AskRemoveModal","PostActionButtonsBlock","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","levelSaga","UNLOAD_LEVEL","FIND_LEVEL","FIND_LEVEL_SUCCESS","FIND_LEVEL_FAILIRE","findLevel","unloadLevel","findLevelSaga","levelInfo","_match$params","postId","_asyncToGenerator","delete","ownPost","Div","Comment","comments","ShowComments","arr","setArr","CoDiv","Input","CommentValue","setCommentValue","newPost","setNew","arrSize","PostPage","PostViewerContainer","CommentContainer","MyCal","Spacer2","Calendar","FullCalendar","plugins","dayGridPlugin","interaction","initialView","events","dayMaxEvents","moreLinkClick","contentHeight","eventDisplay","eventBackgroundColor","calender","CalendarContainer","App","Route","HomePage","path","exact","MainPage","CalendarPage","Boolean","hostname","rootSaga","all","rootReducer","combineReducers","ScrollToTop","pathname","useLocation","scrollTo","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","Provider","BrowserRouter","HelmetProvider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4gBAoDiBA,EAnDD,CACZC,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,OC3CAC,EAAcC,YAAGC,MAAAC,YAAA,sYASPR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,IAI3B,SAAAQ,GAAK,OACLA,EAAMC,WACNJ,YAAGK,MAAAH,YAAA,0HAKF,IACD,SAAAC,GAAK,OACLA,EAAMP,MACNI,YAAGM,MAAAJ,YAAA,yFACaR,EAAQE,KAAK,GAEXF,EAAQE,KAAK,GAE9B,IACD,SAAAO,GAAK,OACLA,EAAMN,MACNG,YAAGO,MAAAL,YAAA,yFACaR,EAAQG,KAAK,GAEXH,EAAQG,KAAK,GAE9B,GAEaH,EAAQC,KAAK,GAClBD,EAAQC,KAAK,IAMpBa,EAAeC,IAAOC,OAAMC,MAAAT,YAAA,gBAC9BH,GAGEa,EAAaH,YAAOI,IAAPJ,CAAYK,MAAAZ,YAAA,gBAC3BH,GAYWgB,EATA,SAAAZ,GACb,OAAOA,EAAMa,GACXC,cAACL,EAAUM,wBAAA,GAAKf,GAAK,IAAEN,KAAMM,EAAMN,KAAO,EAAI,KAE9CoB,cAACT,EAAYU,YAAA,GAAKf,GAEtB,E,0BClEe,MAA0B,4CCUnCgB,G,OAAaV,YAAOM,EAAPN,CAAcR,MAAAC,YAAA,sPAMjBR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,KAQzByB,EAAWX,IAAOY,IAAGhB,MAAAH,YAAA,0OAWrBoB,EAAQb,IAAOc,MAAKjB,MAAAJ,YAAA,sJASpBsB,EAAUf,IAAOY,IAAGd,MAAAL,YAAA,yJASpBuB,EAAShB,IAAOY,IAAGV,MAAAT,YAAA,wMAanBwB,EAAQjB,IAAOY,IAAGP,MAAAZ,YAAA,ucA6DTyB,EAhCM,SAAHC,GAAuB,IAAhBC,EAAOD,EAAPC,QACrB,OACEZ,cAAA,OAAKa,UAAU,MAAKC,SAClBC,eAAAC,WAAA,CAAAF,SAAA,CACAC,eAACN,EAAK,CAAAK,SAAA,CACJC,eAAA,MAAAD,SAAA,CAAId,cAAA,QAAAc,SAAM,MAAQ,OAClBd,cAAA,MAAAc,SAAId,cAAA,QAAAc,SAAM,SACVC,eAAA,MAAAD,SAAA,CAAId,cAAA,QAAAc,SAAM,MAAQ,eAEpBd,cAACQ,EAAM,CAAAM,SACPC,eAACE,IAAI,CAACC,QAAM,EAACC,MAAS,IAAKL,SAAA,CACzBd,cAACE,EAAU,CAACf,WAAS,EAACiC,QAAW,WAC9BR,EAAQS,KAAK,SAAS,EAAEP,SAAC,WAC5Bd,cAACE,EAAU,CAACf,WAAS,EAACiC,QAAW,WAC9BR,EAAQS,KAAK,YAAY,EAAEP,SAAC,gBAIjCd,cAACO,EAAO,IACRP,cAACG,EAAQ,CAAAW,SACTd,cAACK,EAAK,CACJiB,MAAQ,EACRC,UAAY,EACZC,OAAS,EAAKV,SACdd,cAAA,UAAQyB,IAAKC,EAAiBC,KAAK,sBAM7C,ECtHMC,EAAoBpC,IAAOY,IAAGpB,MAAAC,YAAA,+QAMpBR,EAAQC,KAAK,IAQvBmD,EAAWrC,IAAOY,IAAGhB,MAAAH,YAAA,uRAcrB6C,EAAStC,YAAOI,IAAPJ,CAAYH,MAAAJ,YAAA,4DAGdR,EAAQC,KAAK,IAiBXqD,EAbM,SAAHpB,GAAsB,IAAhBG,EAAQH,EAARG,SACpB,OACEd,cAAC4B,EAAiB,CAAAd,SAChBC,eAACc,EAAQ,CAAAf,SAAA,CACPd,cAAA,OAAKa,UAAU,YAAWC,SACxBd,cAAC8B,EAAM,CAAC/B,GAAG,IAAIiC,MAAO,CAACC,eAAe,OAAQC,SAAW,UAAUpB,SAAE,WAEtEA,MAIT,E,qECrDIqB,GAAgB,wBAChBC,GAAiB,yBAMVC,GAAeC,YAC1BH,IACA,SAAAI,GAAW,OAAIA,CAAW,IAGfC,GAAgBF,YAC3BF,IACA,SAAAG,GAAW,OAAIA,CAAW,IAmBbE,GAdCC,aAAaC,EAAA,GAAAC,YAAAD,EAExBR,IAAgB,SAACU,EAAOC,GAAM,OAAA7C,wBAAA,GAC1B4C,GAAK,GAAAD,YAAA,GACPE,EAAOC,SAAU,GAAI,IACtBH,YAAAD,EACDP,IAAiB,SAACS,EAAOC,GAAM,OAAA7C,wBAAA,GAC3B4C,GAAK,GAAAD,YAAA,GACPE,EAAOC,SAAU,GAAK,IACvBJ,GAXe,CAAC,GChBTK,GAA2B,SAAArB,GAGtC,MAAO,CAACA,EAFK,GAAAsB,OAAMtB,EAAI,YACV,GAAAsB,OAAMtB,EAAI,YAEzB,EAEe,SAASuB,GAAkBvB,EAAMwB,GAC9C,IAAMC,EAAO,GAAAH,OAAMtB,EAAI,YACjB0B,EAAO,GAAAJ,OAAMtB,EAAI,YAEvB,OAAA2B,cAAAC,MAAO,SAAAC,EAAUV,GAAM,IAAAW,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB,OADqBF,EAAAE,KAAA,EACfC,aAAIzB,GAAaV,IAAO,KAAD,EAEV,OAFUgC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEJE,aAAKZ,EAASL,EAAOC,SAAS,KAAD,EACpD,OADMU,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EACRC,aAAI,CACRnC,KAAMyB,EACNL,QAASU,EAASQ,KAClBC,KAAOT,IACN,KAAD,EAAAE,EAAAE,KAAA,iBAEF,OAFEF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAE,KAAA,GAEIC,aAAI,CACRnC,KAAM0B,EACNN,QAAOY,EAAAQ,GACPC,OAAO,IACN,KAAD,GAEJ,OAFIT,EAAAE,KAAA,GAEEC,aAAItB,GAAcb,IAAO,KAAD,oBAAAgC,EAAAU,OAAA,GAAAb,EAAA,iBAElC,C,iBCCec,G,QA9BAC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAU,CACN,QAAY,qEACZ,8BAAgC,IAChC,+BAA+B,uCCUxBC,GAAS,WAAH,OAASL,GAAOM,KAAK,mBAAoB,E,sBC8CzCC,IAvDbC,GAAe,oBACfC,GAAkB,uBAExBC,GAAuDhC,GACnD,iBACDiC,GAAAC,YAAAF,GAAA,GAFIG,GAAQF,GAAA,GAAEG,GAAgBH,GAAA,GAAEI,GAAgBJ,GAAA,GAInDK,GAA8CtC,GAC1C,cACDuC,GAAAL,YAAAI,GAAA,GAFIE,GAAKD,GAAA,GAAEE,GAAaF,GAAA,GAAEG,GAAaH,GAAA,GAI1CI,GAAiD3C,GAC7C,eACD4C,GAAAV,YAAAS,GAAA,GAFIE,GAAMD,GAAA,GAAEE,GAAcF,GAAA,GAAEG,GAAcH,GAAA,GAI3CI,GAA4EhD,GAC1E,wBACDiD,GAAAf,YAAAc,GAAA,GAFME,GAAeD,GAAA,GAAEE,GAAuBF,GAAA,GAAEG,GAAuBH,GAAA,GAI7DI,GAAc/D,YACvBwC,IACA,SAAAnE,GAAmB,MAAQ,CACzB2F,KADK3F,EAAJ2F,KAEDC,IAFU5F,EAAH4F,IAGPC,MAHiB7F,EAAL6F,MAIb,IAGUC,GAAiBnE,YAAayC,IAAiB,SAAAuB,GAAI,OAAIA,CAAI,IAC3DI,GAAWpE,YAAa6C,IAAU,SAAAwB,GAAqB,MAAQ,CAC1EC,SADwDD,EAARC,SAEhDC,SAFkEF,EAARE,SAG3D,IACYC,GAAQxE,YAAakD,IAAO,SAAAuB,GAAqB,MAAQ,CACpEH,SADkDG,EAARH,SAE1CC,SAF4DE,EAARF,SAGrD,IACYG,GAAS1E,YAAauD,IAAQ,SAAAoB,GAAqB,MAAQ,CACtEL,SADoDK,EAARL,SAE5CC,SAF8DI,EAARJ,SAGvD,IACYK,GAAkB5E,YAAa4D,IAAiB,SAAAiB,GAAsB,MAAQ,CACzFP,SADsEO,EAARP,SAE9DQ,UAFiFD,EAATC,UAGzE,IAMKC,IALqB/E,YAAa4D,IAAiB,SAAAoB,GAAsB,MAAQ,CACrFV,SADkEU,EAARV,SAE1DQ,UAF6EE,EAATF,UAGrE,IAEoBlE,GAAkBiC,IDpDjB,SAAHwB,GAAA,IAAMC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAQ,OAC3CvC,GAAOM,KAAK,qBAAsB,CAAEgC,WAAUC,YAAY,KCoDpDU,GAAYrE,GAAkBsC,IDzDjB,SAAH7E,GAAA,IAAMiG,EAAQjG,EAARiG,SAAUC,EAAQlG,EAARkG,SAAQ,OACxCvC,GAAOM,KAAK,kBAAmB,CAAEgC,WAAUC,YAAY,ICyDjDW,GAAatE,GAAkB2C,IDlDjB,SAAHkB,GAAA,IAAMU,EAAEV,EAAFU,GAAIb,EAAQG,EAARH,SAAUC,EAAQE,EAARF,SAAQ,OAC7CvC,GAAOoD,MAAM,oBAADzE,OAAqBwE,GAAM,CAAEA,KAAIb,WAAUC,YAAY,ICkD7Dc,GAAsBzE,GAAkBgD,IDnCjB,SAAHoB,GAAA,IAAMV,EAAQU,EAARV,SAAUQ,EAASE,EAATF,UAAS,OACnD9C,GAAOoD,MAAM,sBAAuB,CAAEd,WAAUQ,aAAa,ICoCtD,SAAUvC,KAAQ,OAAAvB,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,OADuBF,EAAAE,KAAA,EACjB+D,aAAWzC,GAAUkC,IAAc,KAAD,EACxC,OADwC1D,EAAAE,KAAA,EAClC+D,aAAWpC,GAAO+B,IAAW,KAAD,EAClC,OADkC5D,EAAAE,KAAA,EAC5B+D,aAAW/B,GAAQ2B,IAAY,KAAD,EACpC,OADoC7D,EAAAE,KAAA,EAC9B+D,aAAW1B,GAAiByB,IAAqB,KAAD,mBAAAhE,EAAAU,OAAA,GAAAwD,GAAA,CAExD,I,kBAAMC,GAAe,CACnBpB,SAAU,CACRE,SAAU,GACVC,SAAU,GACVkB,gBAAiB,IAEnBjB,MAAO,CACLF,SAAU,GACVC,SAAU,IAEZG,OAAQ,CACNH,SAAU,GACVkB,gBAAiB,IAEnBC,KAAM,KACNC,UAAW,MA4DAD,GAzDAtF,aAAaC,GAAA,GAAAC,YAAAD,GAErBmC,IAAe,SAACjC,EAAKqF,GAAA,IAAAC,EAAAD,EAAInF,QAAWuD,EAAI6B,EAAJ7B,KAAMC,EAAG4B,EAAH5B,IAAKC,EAAK2B,EAAL3B,MAAK,OACnD4B,aAAQvF,GAAO,SAAAwF,GACbA,EAAM/B,GAAMC,GAAOC,CACrB,GAAE,IAAA5D,YAAAD,GACHoC,IAAkB,SAAClC,EAAKyF,GAAA,IAAAC,EAAajC,EAAIgC,EAAbvF,QAAO,OAAA9C,wBAAA,GAC/B4C,GAAK,IAAA0F,EAAA,GAAA3F,YAAA2F,EACPjC,EAAOwB,GAAaxB,IAAK1D,YAAA2F,EAAC,YAChB,MAAIA,GAAA,IACf3F,YAAAD,GAEDyC,IAAmB,SAACvC,EAAK2F,GAAA,IAAaR,EAAIQ,EAAbzF,QAAO,OAAA9C,wBAAA,GAChC4C,GAAK,IACRoF,UAAW,KACXD,QAAI,IACJpF,YAAAD,GAED0C,IAAmB,SAACxC,EAAK4F,GAAA,IAAarE,EAAKqE,EAAd1F,QAAO,OAAA9C,wBAAA,GAChC4C,GAAK,IACRoF,UAAW7D,GAAK,IAChBxB,YAAAD,GAED8C,IAAgB,SAAC5C,EAAK6F,GAAA,IAAaV,EAAIU,EAAb3F,QAAO,OAAA9C,wBAAA,GAC7B4C,GAAK,IACRoF,UAAW,KACXD,QAAI,IACJpF,YAAAD,GAED+C,IAAgB,SAAC7C,EAAK8F,GAAA,IAAavE,EAAKuE,EAAd5F,QAAO,OAAA9C,wBAAA,GAC7B4C,GAAK,IACRoF,UAAW7D,GAAK,IAChBxB,YAAAD,GAEDmD,IAAiB,SAACjD,GAAK,OAAA5C,wBAAA,GACnB4C,GAAK,IACRoF,UAAW,KACXD,KAAO,MAAI,IACXpF,YAAAD,GAEDoD,IAAiB,SAAClD,EAAK+F,GAAA,IAAaxE,EAAKwE,EAAd7F,QAAO,OAAA9C,wBAAA,GAC9B4C,GAAK,IACRoF,UAAW7D,GAAK,IAChBxB,YAAAD,GACDwD,IAA0B,SAACtD,EAAKgG,GAAA,IAAab,EAAIa,EAAb9F,QAAO,OAAA9C,wBAAA,GACvC4C,GAAK,IACRoF,UAAW,KACXD,QAAI,IACJpF,YAAAD,GACDyD,IAA0B,SAACvD,EAAKiG,GAAA,IAAa1E,EAAK0E,EAAd/F,QAAO,OAAA9C,wBAAA,GACvC4C,GAAK,IACRoF,UAAW7D,GAAK,IAChBzB,IAEJmF,ICnIEiB,GAAgBvJ,IAAOY,IAAGpB,QAAAC,YAAA,2GAGnBR,EAAQC,KAAK,IASpBsK,GAAcxJ,IAAOyJ,MAAK7J,QAAAH,YAAA,gQAGHR,EAAQC,KAAK,GAMXD,EAAQC,KAAK,IAUtCwK,GAAS1J,IAAOY,IAAGf,QAAAJ,YAAA,2JAIZR,EAAQC,KAAK,GAGXD,EAAQC,KAAK,IAItByK,GAAsB3J,YAAOM,EAAPN,CAAcF,QAAAL,YAAA,+BAIpCmK,GAAU,CACZtC,MAAO,qBACPJ,SAAU,4BAMR2C,GAAe7J,IAAOY,IAAGV,QAAAT,YAAA,6FAwDhBqK,GA/CE,SAAH3I,GAAiD,IAA5CgB,EAAIhB,EAAJgB,KAAM2E,EAAI3F,EAAJ2F,KAAMiD,EAAQ5I,EAAR4I,SAAUC,EAAQ7I,EAAR6I,SAAUpF,EAAKzD,EAALyD,MACzCqF,EAAOL,GAAQzH,GACvB,OACEZ,eAACgI,GAAa,CAAAjI,SAAA,CACZd,cAAA,MAAAc,SAAK2I,IACL1I,eAAA,QAAMyI,SAAUA,EAAS1I,SAAA,CACvBd,cAACgJ,GAAW,CACVU,aAAa,WACbC,KAAK,WACLC,YAAY,qBACZL,SAAUA,EACV/C,MAAOF,EAAKM,WAEd5G,cAACgJ,GAAW,CACVU,aAAa,eACbC,KAAK,WACLC,YAAY,2BACZjI,KAAK,WACL4H,SAAUA,EACV/C,MAAOF,EAAKO,WAEJ,aAATlF,GACC3B,cAACgJ,GAAW,CACVU,aAAa,eACbC,KAAK,kBACLC,YAAY,wCACZjI,KAAK,WACL4H,SAAUA,EACV/C,MAAOF,EAAKyB,kBAGf3D,GAASpE,cAACqJ,GAAY,CAAAvI,SAAEsD,IACzBpE,cAACmJ,GAAmB,CAAChK,WAAS,EAAA2B,SACzB2I,OAGPzJ,cAACkJ,GAAM,CAAApI,SACG,UAATa,EACG3B,cAACJ,IAAI,CAACG,GAAG,YAAWe,SAAC,6BAErBd,cAACJ,IAAI,CAACG,GAAG,SAAQe,SAAC,2BAK5B,E,sBC1FU+I,IAAUC,GAAAxG,cAAAC,KASHwG,IA9BXC,GAAgB,qBAEtBhF,GAA8ChC,GAC5C,cACDiC,GAAAC,YAAAF,GAAA,GAFMiF,GAAKhF,GAAA,GAAEiF,GAAajF,GAAA,GAAEkF,GAAalF,GAAA,GAGpCmF,GAAS,cAEFC,GAAc/H,YAAa0H,IAAe,SAAAM,GAAI,OAAIA,CAAI,IACtDC,GAAQjI,YAAa2H,IACrBtF,GAASrC,YAAa8H,IAE7BI,GAAYtH,GAAkB+G,IHJf,WAAH,OAAS3F,GAAOmG,IAAI,kBAAmB,IGMzD,SAASC,KACP,IACEC,aAAaC,WAAW,OAC1B,CAAE,MAAOC,GACPC,QAAQC,IAAI,8BACd,CACF,CAEA,SAAUlB,KAAU,OAAAvG,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhB,OAFgBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEVE,aAAKiH,IAAgB,KAAD,EAC1BL,aAAaC,WAAW,QAASjH,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEjCmH,QAAQC,IAAGpH,EAAAQ,IAAI,wBAAAR,EAAAU,OAAA,GAAAwD,GAAA,cAIZ,SAAUkC,KAAQ,OAAAzG,cAAAI,MAAC,SAADuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OACvB,OADuBoH,EAAApH,KAAA,EACjB+D,aAAWqC,GAAOO,IAAW,KAAD,EAClC,OADkCS,EAAApH,KAAA,EAC5B+D,aAAWuC,GAAeO,IAAkB,KAAD,EACjD,OADiDO,EAAApH,KAAA,EAC3C+D,aAAWwC,GAAQP,IAAY,KAAD,mBAAAoB,EAAA5G,OAAA,GAAAyF,GAAA,CAGtC,I,sDAKepH,gBAAaC,GAAA,GAAAC,YAAAD,GAEvBqH,IAAgB,SAACnH,EAAKlC,GAAA,IAAa2J,EAAI3J,EAAboC,QAAO,OAAA9C,wBAAA,GAC7B4C,GAAK,IACRyH,QAAI,IACJ1H,YAAAD,GACDuH,IAAgB,SAACrH,EAAK8D,GAAA,IAAa2D,EAAI3D,EAAb5D,QAAO,OAAA9C,wBAAA,GAC7B4C,GAAK,IACRyH,OACAY,WAAY,MAAI,IAChBtI,YAAAD,GACDwH,IAAgB,SAACtH,EAAKkE,GAAA,IAAa3C,EAAK2C,EAAdhE,QAAO,OAAA9C,wBAAA,GAC7B4C,GAAK,IACRyH,KAAM,KACNY,WAAY9G,GAAK,IACjBxB,YAAAD,GACDyH,IAAS,SAAAvH,GAAK,OAAA5C,wBAAA,GACV4C,GAAK,IACRyH,KAAM,MAAI,IACV3H,IAxBe,CACnB2H,KAAM,KACNY,WAAY,OC8BGC,gBApEC,SAAHxK,GAAqB,IAAfC,EAAOD,EAAPC,QACjBwK,EAA0BC,mBAAS,MAAKC,EAAApG,YAAAkG,EAAA,GAAjChH,EAAKkH,EAAA,GAAEC,EAAQD,EAAA,GAChBE,EAAWC,cACjBC,EAAwCC,aAAY,SAAAhF,GAAA,IAAGqB,EAAIrB,EAAJqB,KAAMsC,EAAI3D,EAAJ2D,KAAI,MAAQ,CACvEhE,KAAM0B,EAAKlB,MACXkB,KAAMA,EAAKA,KACXC,UAAWD,EAAKC,UAChBqC,KAAMA,EAAKA,KACZ,IALOhE,EAAIoF,EAAJpF,KAAM0B,EAAI0D,EAAJ1D,KAAMC,EAASyD,EAATzD,UAAWqC,EAAIoB,EAAJpB,KAsD/B,OA5BAsB,qBAAU,WACRJ,EAAS/E,GAAe,SAC1B,GAAG,CAAC+E,IAEJI,qBAAU,WACN,GAAI3D,EAIF,OAHA6C,QAAQC,IAAI,6BACZD,QAAQC,IAAI9C,QACZsD,EAAS,mCAGPvD,IACF8C,QAAQC,IAAI,mCACZS,EAASjB,MAEb,GAAG,CAACvC,EAAMC,EAAWuD,IAErBI,qBAAU,WACR,GAAItB,EAAM,CACR1J,EAAQS,KAAK,SACb,IACEsJ,aAAakB,QAAQ,OAAQC,KAAKC,UAAUzB,GAC9C,CAAE,MAAOO,GACPC,QAAQC,IAAI,8BACd,CACF,CACF,GAAG,CAACnK,EAAS0J,IAGbtK,cAACsJ,GAAQ,CACP3H,KAAK,QACL2E,KAAMA,EACNiD,SAnDa,SAAAsB,GACf,IAAAmB,EAAwBnB,EAAEoB,OAAlBzF,EAAKwF,EAALxF,MAAOmD,EAAIqC,EAAJrC,KACf6B,EACEnF,GAAY,CACVC,KAAM,QACNC,IAAKoD,EACLnD,UAGN,EA2CIgD,SAxCa,SAAAqB,GACfA,EAAEqB,iBACF,IAAOtF,EAAsBN,EAAtBM,SAAUC,EAAYP,EAAZO,SACjB2E,EAAS1E,GAAM,CAAEF,WAAUC,aAC7B,EAqCIzC,MAAOA,GAGb,IC7Da+H,GARG,WACd,OACInM,cAAC+B,EAAY,CAAAjB,SACTd,cAACoM,GAAS,KAGtB,ECsFiBjB,gBAzFI,SAAHxK,GAAqB,IAAfC,EAAOD,EAAPC,QACpBwK,EAA0BC,mBAAS,MAAKC,EAAApG,YAAAkG,EAAA,GAAjChH,EAAKkH,EAAA,GAAEC,EAAQD,EAAA,GAChBE,EAAWC,cACjBC,EAAwCC,aAAY,SAAAhF,GAAA,IAAGqB,EAAIrB,EAAJqB,KAAMsC,EAAI3D,EAAJ2D,KAAI,MAAQ,CACvEhE,KAAM0B,EAAKtB,SACXsB,KAAMA,EAAKA,KACXC,UAAWD,EAAKC,UAChBqC,KAAMA,EAAKA,KACZ,IALOhE,EAAIoF,EAAJpF,KAAM0B,EAAI0D,EAAJ1D,KAAMC,EAASyD,EAATzD,UAAWqC,EAAIoB,EAAJpB,KA2E/B,OAnCAsB,qBAAU,WACRJ,EAAS/E,GAAe,YAC1B,GAAG,CAAC+E,IAEJI,qBAAU,WACN,GAAI3D,EAEA,OAAkC,MAA9BA,EAAUxE,SAAS4I,YACrBd,EAAS,oFAIXA,EAAS,yCAGTvD,IACA8C,QAAQC,IAAI,yCACZD,QAAQC,IAAI/C,GACZwD,EAASjB,MAEjB,GAAG,CAACvC,EAAMC,EAAWuD,IAIvBI,qBAAU,WACR,GAAItB,EAAM,CACR1J,EAAQS,KAAK,SACb,IACEsJ,aAAakB,QAAQ,OAAQC,KAAKC,UAAUzB,GAC9C,CAAE,MAAOO,GACPC,QAAQC,IAAI,8BACd,CACF,CACF,GAAG,CAACnK,EAAS0J,IAGTtK,cAACsJ,GAAQ,CACP3H,KAAK,WACL2E,KAAMA,EACNiD,SAxEa,SAAAsB,GACf,IAAAmB,EAAwBnB,EAAEoB,OAAlBzF,EAAKwF,EAALxF,MAAOmD,EAAIqC,EAAJrC,KACf6B,EACEnF,GAAY,CACVC,KAAM,WACNC,IAAKoD,EACLnD,UAGN,EAgEIgD,SA7Da,SAAAqB,GACfA,EAAEqB,iBACF,IAAQtF,EAAwCN,EAAxCM,SAAUC,EAA8BP,EAA9BO,SAAUkB,EAAoBzB,EAApByB,gBAC5B,IAAG,CAACnB,EAAUC,EAAUkB,GAAiBuE,SAAS,IAKhD,OAAIzF,IAAakB,GACjBwD,EAAS,qFACTC,EAASnF,GAAY,CAAEC,KAAM,WAAYC,IAAK,WAAYC,MAAO,WACjEgF,EACEnF,GAAY,CAAEC,KAAM,WAAYC,IAAK,kBAAmBC,MAAO,YAInEgF,EAAS9E,GAAS,CAAEE,WAAUC,cAZ5B0E,EAAS,mEAcb,EA4CInH,MAASA,GAGf,IClFamI,GARM,WACjB,OACIvM,cAAC+B,EAAY,CAAAjB,SACTd,cAACwM,GAAY,KAGzB,E,yBCPMC,GAAkBjN,IAAOY,IAAGpB,QAAAC,YAAA,2VAoBnByN,GANI,SAAH/L,GAA+B,IAAzBG,EAAQH,EAARG,SAAa6L,EAAIC,aAAAjM,EAAAkM,IAGrC,OAAO7M,cAACyM,GAAexM,wBAAA,GAAK0M,GAAI,IAAA7L,SAAGA,IACrC,ECdMgM,GAActN,IAAOY,IAAGpB,QAAAC,YAAA,sIAWxB8N,GAAUvN,YAAOkN,GAAPlN,CAAkBJ,QAAAH,YAAA,oXAmB5B+N,GAASxN,IAAOY,IAAGf,QAAAJ,YAAA,2BAInBgO,GAAWzN,IAAOY,IAAGd,QAAAL,YAAA,sDAIrBiO,GAAY1N,IAAOY,IAAGV,QAAAT,YAAA,wDAKtB6C,GAAStC,YAAOI,IAAPJ,CAAYK,QAAAZ,YAAA,kHASrBkO,GAAK3N,IAAO4N,KAAIC,QAAApO,YAAA,yBACVR,EAAQI,OAAO,IA6BZyO,GA1BA,SAAH3M,GAA4B,IAAtB2J,EAAI3J,EAAJ2J,KAAMiD,EAAQ5M,EAAR4M,SACtB,OACExM,eAAAC,WAAA,CAAAF,SAAA,CACEd,cAAC8M,GAAW,CAAAhM,SACVC,eAACgM,GAAO,CAAAjM,SAAA,CACNC,eAACe,GAAM,CAAC/B,GAAG,QAAQc,UAAU,OAAOmB,MAAO,CAAEE,SAAU,SAASpB,SAAA,CAAC,IAC9Dd,cAACmN,GAAE,CAAArM,SAAC,OAAO,OAEbwJ,EACCvJ,eAAA,OAAKF,UAAU,QAAOC,SAAA,CACpBd,cAACkN,GAAS,CAAApM,SAAEwJ,EAAKkD,QACjBxN,cAACiN,GAAQ,CAAAnM,SAAEwJ,EAAK1D,WAChB5G,cAACF,EAAM,CAACC,GAAI,IAAIqB,QAASmM,EAASzM,SAAC,gCAGrCd,cAAA,OAAKa,UAAU,QAAOC,SACpBd,cAACF,EAAM,CAACC,GAAG,SAAQe,SAAC,8BAK5Bd,cAACgN,GAAM,MAGb,ECrEeS,GAbS,WACtB,IAAQnD,EAASqB,aAAY,SAAAhL,GAAO,MAAQ,CAAE2J,KAAV3J,EAAJ2J,KAAyBA,KAAM,IAAvDA,KACFkB,EAAWC,cAIjB,OACEzL,cAAAgB,WAAA,CAAAF,SACAd,cAACsN,GAAM,CAAChD,KAAMA,EAAMiD,SALL,WACb/B,EAAS7G,KACb,KAMF,ECZM+I,GAAWlO,IAAOY,IAAGpB,QAAAC,YAAA,oFAOrB8N,GAAUvN,YAAOkN,GAAPlN,CAAkBJ,QAAAH,YAAA,oOAO5B+N,GAASxN,IAAOY,IAAGf,QAAAJ,YAAA,6BAInB6C,GAAStC,YAAOI,IAAPJ,CAAYF,QAAAL,YAAA,0JAiCZ0O,GAxBA,WACX,OACI5M,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAAC0N,GAAQ,CAAA5M,SACLC,eAACgM,GAAO,CAAAjM,SAAA,CACJd,cAAC8B,GAAM,CAAC/B,GAAG,WAAWc,UAAU,OAAMC,SAAC,oCAGvCd,cAAC8B,GAAM,CAAC/B,GAAG,YAAYc,UAAU,OAAMC,SAAC,8BAGxCd,cAAC8B,GAAM,CAAC/B,GAAG,YAAYc,UAAU,OAAMC,SAAC,6BAGxCd,cAAC8B,GAAM,CAAC/B,GAAG,UAAUc,UAAU,OAAMC,SAAC,wCAK9Cd,cAACgN,GAAM,MAGf,E,oBChDMY,GAAepO,IAAOY,IAAGpB,QAAAC,YAAA,+kBAC3B,SAAAC,GAAK,OACLA,EAAM2O,cACN9O,YAAGK,QAAAH,YAAA,sCAEF,GACMR,EAAQC,KAAK,GAGXD,EAAQC,KAAK,IAqBXoP,GAdC,SAAHnN,GAA8D,IAAxDiG,EAAQjG,EAARiG,SAAUmH,EAASpN,EAAToN,UAAWC,EAAarN,EAAbqN,cAAeH,EAAYlN,EAAZkN,aACrD,OACE9M,eAAC6M,GAAY,CAACC,aAAcA,EAAa/M,SAAA,CACvCd,cAAA,QAAAc,SACEC,eAAA,KAAAD,SAAA,CACGiN,EACDhN,eAACnB,IAAI,CAACG,GAAE,KAAAkD,OAAO2D,GAAY5E,MAAO,CAACiM,MAAM,GAADhL,OAAKxE,EAAQC,KAAK,IAAMuD,eAAgB,QAAQnB,SAAA,CAAC,IAAE8F,UAG/F5G,cAAA,QAAAc,SAAO,IAAIoN,KAAKF,GAAeG,yBAGrC,ECzBMC,GAAgB5O,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,+BAIlCoP,GAAyB7O,IAAOY,IAAGhB,QAAAH,YAAA,8EAMnCqP,GAAgB9O,IAAOY,IAAGf,QAAAJ,YAAA,wXAQJR,EAAQC,KAAK,GAO1BD,EAAQC,KAAK,IAStB6P,GAAW,SAAH5N,GAAkB,IAAZiE,EAAIjE,EAAJiE,KAClBwG,EAA6BC,mBAAS,IAAGC,EAAApG,YAAAkG,EAAA,GAAlCoD,EAAQlD,EAAA,GACP0C,GADiB1C,EAAA,GACyB1G,EAA1CoJ,eAAe1D,EAA2B1F,EAA3B0F,KAAMmE,EAAqB7J,EAArB6J,MAAOC,EAAc9J,EAAd8J,KAAMC,EAAQ/J,EAAR+J,IAG1C,OACE5N,eAACuN,GAAa,CAAAxN,SAAA,CACZd,cAAA,MAAAc,SACEd,cAACJ,IAAI,CAACG,GAAE,KAAAkD,OAAOqH,EAAK1D,SAAQ,KAAA3D,OAAI0L,GAAO3M,MAAO,CAACiM,MAAO,QAAShM,eAAgB,QAAQnB,SAAE2N,MAE1FzO,cAAC8N,GAAO,CACPlH,SAAW0D,EAAK1D,SAChBmH,UAAWS,EACXR,cAAe,IAAIE,KAAKF,KAC1BhO,cAAA,KAAAc,SAAI4N,MAGV,EA0CeE,GAxCE,SAAHjI,GAAoD,IAA9CkI,EAAKlI,EAALkI,MAAOpM,EAAOkE,EAAPlE,QAAS2B,EAAKuC,EAALvC,MAAO0K,EAAenI,EAAfmI,gBACzCC,EAA0B1D,oBAAS,GAAM2D,EAAA9J,YAAA6J,EAAA,GAAlCxE,EAAKyE,EAAA,GAAEC,EAAQD,EAAA,GAStB,OARApD,qBAAU,WACLiD,GAAyB,GAAhBA,EAAMK,OAChBD,GAAS,GAETA,GAAS,EAEb,GAAG,CAACJ,IAEAzK,EACKpE,cAACoO,GAAa,CAAAtN,SAAC,6DAItBC,eAACqN,GAAa,CAAAtN,SAAA,CACZd,cAACqO,GAAsB,CAAAvN,SACtBgO,GACG9O,cAACF,EAAM,CAACC,GAAG,SAASiC,MAAO,CAACC,eAAgB,OAAQgM,MAAO,SAASnN,SAAC,6CAMxEyJ,GACCvK,cAAA,OAAKgC,MAAO,CAACE,SAAU,SAAUiN,WAAY,OAAQC,QAAQ,QAAQtO,SAAC,wDAGtE2B,GAAWoM,GACX7O,cAAA,OAAAc,SACE+N,EAAMQ,KAAI,SAAAzK,GAAI,OACd5E,cAACuO,GAAQ,CAAC3J,KAAMA,GAAWA,EAAK+J,IAAO,QAOjD,E,sBCpEiBW,IAxBjBtK,GAIIhC,GAAyB,oBAAmBiC,GAAAC,YAAAF,GAAA,GAH9CuK,GAAUtK,GAAA,GACVuK,GAAkBvK,GAAA,GAClBwK,GAAkBxK,GAAA,GAEpBK,GAIItC,GAAyB,oBAAmBuC,GAAAL,YAAAI,GAAA,GAH9CoK,GAAYnK,GAAA,GACZoK,GAAoBpK,GAAA,GACpBqK,GAAoBrK,GAAA,GAGTsK,GAAYvN,YACrBiN,IACA,SAAA5O,GAAiB,MAAQ,CAAEiG,SAAhBjG,EAARiG,SAAkCkJ,KAApBnP,EAAJmP,KAA8B,IAGlCC,GAAczN,YACvBoN,IACA,SAAA/I,GAAwB,MAAQ,CAAEmJ,KAA3BnJ,EAAJmJ,KAAqCE,OAAzBrJ,EAANqJ,OAAuCC,QAAxBtJ,EAAPsJ,QAAwC,IAGvDC,GAAgBhN,GAAkBqM,ICpBf,SAAH5I,GAA4B,IAAtBmJ,EAAInJ,EAAJmJ,KAAMlJ,EAAQD,EAARC,SACxBuJ,EAAcC,KAAGrE,UAAU,CAC7B+D,OACAlJ,aAEJ,OAAOtC,GAAOmG,IAAI,cAADxH,OAAekN,GACpC,IDeME,GAAkBnN,GAAkBwM,ICbf,SAAH3I,GAAmC,IAA7B+I,EAAI/I,EAAJ+I,KAAME,EAAMjJ,EAANiJ,OAAQC,EAAOlJ,EAAPkJ,QACpCE,EAAcC,KAAGrE,UAAU,CAC/B+D,OACAE,SACAC,YAEF,OAAO3L,GAAOmG,IAAI,qBAADxH,OAAsBkN,GACzC,IDQO,SAAUb,KAAS,OAAAhM,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxB,OADwBF,EAAAE,KAAA,EAClB+D,aAAW2H,GAAYW,IAAe,KAAD,EAC3C,OAD2CvM,EAAAE,KAAA,EACrC+D,aAAW8H,GAAcW,IAAiB,KAAD,mBAAA1M,EAAAU,OAAA,GAAAwD,GAAA,CAGjD,I,wBA8BegH,GAxBDnM,aAAaC,GAAA,GAAAC,YAAAD,GAEtB6M,IAAqB,SAAC3M,EAAKkE,GAAA,IAAa8H,EAAK9H,EAAdhE,QAAsBU,EAAQsD,EAAd7C,KAAI,OAAAjE,wBAAA,GAC/C4C,GAAK,IACRgM,QACAyB,SAAUC,SAAS9M,EAASiB,QAAQ,aAAc,KAAK,IACvD9B,YAAAD,GACD8M,IAAqB,SAAC5M,EAAKoE,GAAA,IAAa7C,EAAK6C,EAAdlE,QAAO,OAAA9C,wBAAA,GAClC4C,GAAK,IACRuB,SAAK,IACLxB,YAAAD,GACDgN,IAAuB,SAAC9M,EAAKsE,GAAA,IAAa0H,EAAK1H,EAAdpE,QAAsBU,EAAQ0D,EAAdjD,KAAI,OAAAjE,wBAAA,GACjD4C,GAAK,IACRgM,QACAyB,SAAUC,SAAS9M,EAASiB,QAAQ,aAAc,KAAK,IACvD9B,YAAAD,GACDiN,IAAuB,SAAC/M,EAAKyE,GAAA,IAAalD,EAAKkD,EAAdvE,QAAO,OAAA9C,wBAAA,GACpC4C,GAAK,IACRuB,SAAK,IACLzB,IAzBe,CACnBkM,MAAO,KACPzK,MAAO,KACPkM,SAAU,IE7BNvD,GAAUvN,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,sqBAmC5BuR,GAAUhR,YAAOM,EAAPN,CAAcJ,QAAAH,YAAA,ibAUZR,EAAQG,KAAK,GAGTH,EAAQG,KAAK,IAuDpBuM,gBA5Ca,SAAHxK,GAAsB,IAAhB8P,EAAQ9P,EAAR8P,SAC3BrF,EAA0BC,mBAAS,IAAGC,EAAApG,YAAAkG,EAAA,GAA/B5E,EAAK8E,EAAA,GAAEoF,EAAQpF,EAAA,GACtByD,EAA8B1D,mBAAS,SAAQ2D,EAAA9J,YAAA6J,EAAA,GAAxC4B,EAAO3B,EAAA,GAAE4B,EAAU5B,EAAA,GAEpBxD,EAAWC,cAQXjC,EAAW,SAACqB,GACdA,EAAEqB,iBACF,IAAQ4D,EAASM,KAAGS,MAAMJ,EAASK,OAAQ,CACvCC,mBAAmB,IADfjB,KAIRtE,EAASuE,GAAY,CAAED,KAAMA,EAAME,OAAQW,EAASV,QAASzJ,KAC7DkK,EAAS,GACb,EACA,OACI1Q,cAAAgB,WAAA,CAAAF,SACAd,cAAC+M,GAAO,CAAAjM,SACJC,eAAA,QAAMiQ,OAAO,MAAMxH,SAAUA,EAAS1I,SAAA,CACtCC,eAAA,UAAQyF,MAAOmK,EAASpH,SAhBX,SAACsB,GAClB+F,EAAW/F,EAAEoG,cAAczK,MAC/B,EAcuD1F,SAAA,CAC3Cd,cAAA,UAAQwG,MAAM,QAAO1F,SAAC,iBACtBd,cAAA,UAAQwG,MAAM,OAAM1F,SAAC,iBACrBd,cAAA,UAAQwG,MAAM,aAAY1F,SAAC,iCAE/Bd,cAAA,SACI2B,KAAK,OAAOgI,KAAK,aACjBJ,SA1BS,SAACsB,GAClB6F,EAAS7F,EAAEoG,cAAczK,MAC7B,EAyBYA,MAAOA,EACPoD,YAAY,4DAChB5J,cAAA,OAAAc,SACId,cAACwQ,GAAO,CAAC7O,KAAO,SAASP,QAASoI,EAAS1I,SAAC,yBAM5D,ICzEeqK,gBA9BW,SAAHxK,GAAsB,IAAhB8P,EAAQ9P,EAAR8P,SACrBjF,EAAWC,cACjBC,EAAwCC,aACtC,SAAAhF,GAAA,IAAGkI,EAAKlI,EAALkI,MAAOpM,EAAOkE,EAAPlE,QAAS6H,EAAI3D,EAAJ2D,KAAI,MAAQ,CAC7BuE,MAAOA,EAAMA,MACbzK,MAAOyK,EAAMzK,MACb3B,QAASA,EAAQ,oBACjB6H,KAAMA,EAAKA,KACZ,IANKuE,EAAKnD,EAALmD,MAAOzK,EAAKsH,EAALtH,MAAO3B,EAAOiJ,EAAPjJ,QAAS6H,EAAIoB,EAAJpB,KAe/B,OAPAsB,qBAAU,WACR,IAAAsF,EAA2Bd,KAAGS,MAAMJ,EAASK,OAAQ,CACnDC,mBAAmB,IADbnK,EAAQsK,EAARtK,SAAUkJ,EAAIoB,EAAJpB,KAGlBtE,EAASqE,GAAU,CAAEjJ,WAAUkJ,SACjC,GAAG,CAACtE,EAAUiF,EAASK,SAGrB/P,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAAC4O,GAAQ,CACPnM,QAASA,EACT2B,MAAOA,EACPyK,MAAOA,EACPC,gBAAiBxE,IAEnBtK,cAACmR,GAAmB,MAGxB,IC/BMC,GAAkB5R,IAAOY,IAAGpB,QAAAC,YAAA,uGAO5BoS,GAAa7R,IAAOY,IAAGhB,QAAAH,YAAA,QAEvBqS,GAAY,SAAH3Q,GAA4B,IAAtBiG,EAAQjG,EAARiG,SAAUkJ,EAAInP,EAAJmP,KACrByB,EAAQnB,KAAGrE,UAAU,CAAE+D,SAE7B,OAAOlJ,EAAQ,cAAA3D,OAAiB2D,EAAQ,KAAA3D,OAAIsO,GAAK,cAAAtO,OAAmBsO,EACxE,EA8BeC,GA5BI,SAAH7K,GAAsC,IAAhCmJ,EAAInJ,EAAJmJ,KAAMQ,EAAQ3J,EAAR2J,SAAU1J,EAAQD,EAARC,SACpC,OACE5G,cAAAgB,WAAA,CAAAF,SACAC,eAACqQ,GAAe,CAAAtQ,SAAA,CACdd,cAACF,EAAM,CACL2R,SAAmB,IAAT3B,EACV/P,GACW,IAAT+P,OAAa4B,EAAYJ,GAAU,CAAE1K,WAAUkJ,KAAMA,EAAO,IAC7DhP,SACF,iBAGDd,cAACqR,GAAU,CAAAvQ,SAAEgP,IACb9P,cAACF,EAAM,CACL2R,SAAU3B,IAASQ,EACnBvQ,GACE+P,IAASQ,OACLoB,EACAJ,GAAU,CAAE1K,WAAUkJ,KAAMA,EAAO,IACxChP,SACF,qBAMP,EChBeqK,gBAxBa,SAAHxK,GAA6B,IAAvB8P,EAAQ9P,EAAR8P,SAAUkB,EAAKhR,EAALgR,MACvCjG,EAAqCC,aAAY,SAAAhF,GAAA,IAAGkI,EAAKlI,EAALkI,MAAOpM,EAAOkE,EAAPlE,QAAO,MAAQ,CACxE6N,SAAUzB,EAAMyB,SAChBzB,MAAOA,EAAMA,MACbpM,QAASA,EAAQ,oBAClB,IAJO6N,EAAQ5E,EAAR4E,SAAUzB,EAAKnD,EAALmD,MAAOpM,EAAOiJ,EAAPjJ,QAOzB,IAAKoM,GAASpM,EAAS,OAAO,KAC9B,IAAQmE,EAAa+K,EAAMC,OAAnBhL,SAINiL,EAFoBzB,KAAGS,MAAMJ,EAASK,OAAQ,CAC9CC,mBAAmB,IADZjB,YAAI,IAAA+B,EAAG,EAACA,EAIjB,OACE7R,cAACwR,GAAU,CACT5K,SAAUA,EACVkJ,KAAMS,SAAST,EAAM,IACrBQ,SAAUA,GAGhB,I,SCkBepH,I,OA1CA,WACb,OACElJ,cAAA,OAAKa,UAAU,wBAAuBC,SACtCC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACxBC,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAClBC,eAAA,OAAKF,UAAU,mCAAkCC,SAAA,CAC/Cd,cAAA,MAAIgC,MAAO,CAAC8P,UAAW,UAAW3C,WAAW,QAAQrO,SAAC,kBACtDC,eAAA,KAAGF,UAAU,OAAMC,SAAA,CAAC,wFAA8Bd,cAAA,SAAK,0JAEzDe,eAAA,OAAKF,UAAU,2BAA0BC,SAAA,CACvCC,eAAA,MAAIF,UAAU,kBAAiBC,SAAA,CAACd,cAAA,KAAGa,UAAU,oBAAsB,iBACjEE,eAAA,MAAIF,UAAU,UAASC,SAAA,CACrBC,eAAA,MAAAD,SAAA,CAAI,KAAEd,cAACJ,IAAI,CAACG,GAAG,WAAUe,SAAC,uCAC1BC,eAAA,MAAAD,SAAA,CAAI,KAAEd,cAACJ,IAAI,CAACG,GAAG,YAAWe,SAAC,iCAC3BC,eAAA,MAAAD,SAAA,CAAI,KAAEd,cAACJ,IAAI,CAACG,GAAG,YAAWe,SAAC,gCAC3BC,eAAA,MAAAD,SAAA,CAAI,KAAEd,cAACJ,IAAI,CAACG,GAAG,UAASe,SAAC,0CACtBd,cAAA,WAETe,eAAA,OAAKF,UAAU,8BAA6BC,SAAA,CAC1CC,eAAA,MAAIF,UAAU,kBAAiBC,SAAA,CAACd,cAAA,KAAGa,UAAU,wBAA0B,kBACvEb,cAAA,KAAAc,SAAG,qHACHC,eAAA,KAAGF,UAAU,OAAMC,SAAA,CAACd,cAAA,KAAGa,UAAU,qBAAuB,mBACxDE,eAAA,KAAGF,UAAU,OAAMC,SAAA,CAACd,cAAA,KAAGa,UAAU,wBAA0B,8BAG/Db,cAAA,OAAKa,UAAU,WAAUC,SACvBC,eAAA,OAAKF,UAAU,gBAAeC,SAAA,CAC1BC,eAAA,MAAIF,UAAU,4BAA2BC,SAAA,CAAC,SAACd,cAAA,KAAG+R,MAAM,gBAAkB,iBACtEhR,eAAA,KAAGF,UAAU,UAASC,SAAA,CAClBC,eAAA,QAAMF,UAAU,MAAKC,SAAA,CAACd,cAAA,KAAGgS,KAAO,6BAA4BlR,SAACd,cAAA,KAAGa,UAAU,gCAAoC,yBAC9GE,eAAA,QAAMF,UAAU,MAAKC,SAAA,CAACd,cAAA,KAAGgS,KAAO,+BAA8BlR,SAACd,cAAA,KAAGa,UAAU,gCAAoC,yBAChHE,eAAA,QAAMF,UAAU,MAAKC,SAAA,CAACd,cAAA,KAAGgS,KAAO,+BAA8BlR,SAACd,cAAA,KAAGa,UAAU,gCAAoC,4BAEtHb,cAAA,QACAe,eAAA,KAAAD,SAAA,CAAG,kCAA4Bd,cAAA,SAAK,IAACA,cAAA,KAAGgS,KAAK,gDAAgDhQ,MAAO,CAACiM,MAAM,WAAWnN,SAAC,sCAMjI,GCrCemR,GAJS,WACtB,OAAOjS,cAACkJ,GAAM,GAChB,ECmBexI,GAfM,WACnB,OACEK,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACkS,KAAM,CAAApR,SACLd,cAAA,SAAAc,SAAO,yBAEPd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAACoS,GAAiB,IAClBpS,cAACqS,GAAmB,IACpBrS,cAACiS,GAAe,MAGtB,E,qBCfMK,I,OAAc9S,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,0IAKhCsT,GAAa/S,IAAOyJ,MAAK7J,QAAAH,YAAA,oKAKFR,EAAQC,KAAK,IAIpC8T,GAAehT,IAAOY,IAAGf,QAAAJ,YAAA,2PAkEdwT,GArDF,SAAH9R,GAAwC,IAAlC8N,EAAK9N,EAAL8N,MAAOC,EAAI/N,EAAJ+N,KAAMgE,EAAa/R,EAAb+R,cACrBC,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAE7BhH,qBAAU,WACRiH,EAAcC,QAAU,IAAIC,KAAMJ,EAAaG,QAAS,CACtDE,MAAO,SACPpJ,YAAa,uDACbqJ,QAAS,CAGPC,QAAS,CACP,CAAC,CAAEC,OAAQ,KAAO,CAAEA,OAAQ,MAC5B,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,aAAc,aAAc,OAAQ,aAK3C,IAAMC,EAAQR,EAAcC,QAC5BO,EAAMC,GAAG,eAAe,SAACC,EAAOC,EAAUC,GACxB,SAAXA,GACCf,EAAc,CAACnM,IAAK,OAAQC,MAAO6M,EAAMK,KAAKC,WAEtD,GACF,GAAG,CAACjB,IAEJ,IAAMkB,EAAUhB,kBAAO,GACvBhH,qBAAU,WACHgI,EAAQd,UACXc,EAAQd,SAAU,EAClBD,EAAcC,QAAQY,KAAKC,UAAYjF,EAC3C,GAAG,CAACA,IAMJ,OACE3N,eAACuR,GAAW,CAAAxR,SAAA,CACVd,cAACuS,GAAU,CACT3I,YAAY,oDACZL,SARgB,SAAAsB,GAClB6H,EAAc,CAACnM,IAAK,QAASC,MAAOqE,EAAEoB,OAAOzF,OACjD,EAOMA,MAAOiI,IAETzO,cAACwS,GAAY,CAAA1R,SACXd,cAAA,OAAK6T,IAAKlB,QAIlB,E,sBCxCemB,IAtCXC,GAAa,mBACbjP,GAAe,qBACfkP,GAAoB,0BAC1BhP,GAIIhC,GAAyB,oBAAmBiC,GAAAC,YAAAF,GAAA,GAH9CiP,GAAUhP,GAAA,GACViP,GAAkBjP,GAAA,GAClBkP,GAAkBlP,GAAA,GAGpBK,GAIItC,GAAyB,qBAAoBuC,GAAAL,YAAAI,GAAA,GAH/C8O,GAAW7O,GAAA,GACX8O,GAAmB9O,GAAA,GACnB+O,GAAmB/O,GAAA,GAGRgP,GAAajS,YAAayR,IAC1B1N,GAAc/D,YAAawC,IAAc,SAAAnE,GAAa,MAAQ,CACzE4F,IAD0D5F,EAAH4F,IAEvDC,MAFiE7F,EAAL6F,MAG7D,IACYgO,GAAYlS,YAAa2R,IAAY,SAAAtN,GAAc,MAAQ,CACtE8H,MADwD9H,EAAL8H,MAEnDC,KAF8D/H,EAAJ+H,KAG3D,IACY+F,GAAkBnS,YAAa0R,IAAmB,SAAApP,GAAI,OAAIA,CAAI,IAC9D8P,GAAapS,YACxB8R,IACA,SAAArN,GAAkB,MAAQ,CACxBU,GADGV,EAAFU,GAEDgH,MAFU1H,EAAL0H,MAGLC,KAHgB3H,EAAJ2H,KAIb,IAIGiG,GAAgBzR,GAAkB+Q,ITvCf,SAAHtT,GAAA,IAAM8N,EAAK9N,EAAL8N,MAAOC,EAAI/N,EAAJ+N,KAAI,OACnCpK,GAAOM,KAAK,aAAc,CAAE6J,QAAOC,QAAQ,ISuCzCkG,GAAiB1R,GAAkBkR,ITlBf,SAAHnN,GAAA,IAAMQ,EAAER,EAAFQ,GAAIgH,EAAKxH,EAALwH,MAAOC,EAAIzH,EAAJyH,KAAMmG,EAAI5N,EAAJ4N,KAAI,OAChDvQ,GAAOoD,MAAM,cAADzE,OAAewE,GAAM,CAC/BgH,QACAC,OACAmG,QACC,ISeE,SAAUf,KAAS,OAAAxQ,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxB,OADwBF,EAAAE,KAAA,EAClB+D,aAAWqM,GAAYU,IAAe,KAAD,EAC3C,OAD2ChR,EAAAE,KAAA,EACrC+D,aAAWwM,GAAaQ,IAAgB,KAAD,mBAAAjR,EAAAU,OAAA,GAAAwD,GAAA,CAG/C,I,uCAAMC,GAAe,CACnB2G,MAAO,GACPC,KAAM,GACN9J,KAAM,KACNkQ,UAAW,MA4CEC,GAzCDrS,aAAaC,GAAA,GAAAC,YAAAD,GAEtBoR,IAAa,SAAAlR,GAAK,OAAIiF,EAAY,IAAAlF,YAAAD,GAClCmC,IAAe,SAACjC,EAAKoE,GAAA,IAAA+N,EAAA/N,EAAIlE,QAAWwD,EAAGyO,EAAHzO,IAAKC,EAAKwO,EAALxO,MAAK,OAAAvG,wBAAA,GAC1C4C,GAAK,GAAAD,YAAA,GACP2D,EAAMC,GAAK,IACZ5D,YAAAD,GACDsR,IAAa,SAAApR,GAAK,OAAA5C,wBAAA,GACd4C,GAAK,IAER+B,KAAM,KACNkQ,UAAW,MAAI,IACflS,YAAAD,GAEDuR,IAAqB,SAACrR,EAAKsE,GAAA,IAAavC,EAAIuC,EAAbpE,QAAO,OAAA9C,wBAAA,GAClC4C,GAAK,IACR+B,QAAI,IACJhC,YAAAD,GAEDwR,IAAqB,SAACtR,EAAKyE,GAAA,IAAawN,EAASxN,EAAlBvE,QAAO,OAAA9C,wBAAA,GAClC4C,GAAK,IACRiS,aAAS,IACTlS,YAAAD,GACDqR,IAAoB,SAACnR,EAAKqF,GAAA,IAAYtD,EAAIsD,EAAbnF,QAAO,OAAA9C,wBAAA,GAC/B4C,GAAK,IACR4L,MAAO7J,EAAK6J,MACZC,KAAM9J,EAAK8J,KACXuG,eAAgBrQ,EAAK+J,KAAG,IACzB/L,YAAAD,GACD0R,IAAsB,SAACxR,EAAKyF,GAAA,IAAa1D,EAAI0D,EAAbvF,QAAO,OAAA9C,wBAAA,GACnC4C,GAAK,IACR+B,QAAI,IACJhC,YAAAD,GACD2R,IAAsB,SAACzR,EAAK2F,GAAA,IAAasM,EAAStM,EAAlBzF,QAAO,OAAA9C,wBAAA,GACnC4C,GAAK,IACRiS,aAAS,IACTnS,IAEJmF,ICxEaoN,GAlBS,WACtB,IAAM1J,EAAWC,cACjBC,EAAwBC,aAAY,SAAAhL,GAAA,IAAGoU,EAAKpU,EAALoU,MAAK,MAAQ,CAClDtG,MAAOsG,EAAMtG,MACbC,KAAMqG,EAAMrG,KACb,IAHOD,EAAK/C,EAAL+C,MAAOC,EAAIhD,EAAJgD,KAITgE,EAAgByC,uBAAY,SAAApS,GAAO,OAAIyI,EAASnF,GAAYtD,GAAS,GAAE,CAC3EyI,IAQF,OALAI,qBAAU,WACR,OAAO,WACLJ,EAAS+I,KACX,CACF,GAAG,CAAC/I,IACGxL,cAACyS,GAAM,CAACC,cAAeA,EAAejE,MAAOA,EAAOC,KAAMA,GACnE,EChBM0G,GAA0B5V,IAAOY,IAAGpB,QAAAC,YAAA,8KAEhBR,EAAQC,KAAK,IAUjCa,GAAeC,YAAOM,EAAPN,CAAcJ,QAAAH,YAAA,yEAkBpBoW,GAXY,SAAH1U,GAAyC,IAAnC2U,EAAQ3U,EAAR2U,SAAUC,EAAS5U,EAAT4U,UAAWC,EAAM7U,EAAN6U,OACjD,OACEzU,eAACqU,GAAuB,CAAAtU,SAAA,CACtBC,eAACxB,GAAY,CAACX,MAAI,EAACwC,QAASmU,EAAUzU,SAAA,CAAC,sBAChC0U,EAAS,eAAO,kBAEvBxV,cAACT,GAAY,CAAC6B,QAASkU,EAASxU,SAAC,mBAGvC,ECeeqK,gBA1CqB,SAAHxK,GAAqB,IAAfC,EAAOD,EAAPC,QAC/B4K,EAAWC,cACjBC,EAAyDC,aAAY,SAAAhF,GAAA,IAAGoO,EAAKpO,EAALoO,MAAK,MAAQ,CACnFtG,MAAOsG,EAAMtG,MACbC,KAAMqG,EAAMrG,KACZ9J,KAAMmQ,EAAMnQ,KACZkQ,UAAWC,EAAMD,UACjBG,eAAgBF,EAAME,eACvB,IANOxG,EAAK/C,EAAL+C,MAAOC,EAAIhD,EAAJgD,KAAM9J,EAAI8G,EAAJ9G,KAAMkQ,EAASpJ,EAAToJ,UAAWG,EAAcvJ,EAAduJ,eAqCtC,OATArJ,qBAAU,WACR,GAAIhH,EAAM,CACR,IAAQ+J,EAAc/J,EAAd+J,IAAKrE,EAAS1F,EAAT0F,KACb1J,EAAQS,KAAK,KAAD4B,OAAMqH,EAAK1D,SAAQ,KAAA3D,OAAI0L,GACrC,CACImG,GACFhK,QAAQC,IAAI+J,EAEhB,GAAG,CAAClU,EAASgE,EAAMkQ,IACZ9U,cAACqV,GAAkB,CAACE,UA5BT,WAEd/J,EADCyJ,EACQP,GAAW,CAAEjN,GAAIwN,EAAgBxG,QAAOC,SAIjD8F,GAAU,CACR/F,QACAC,SAGN,EAiBiD4G,SAdhC,WACf1U,EAAQ6U,QACV,EAYqED,SAAUP,GACjF,IChCeS,GATG,WACd,OACI3U,eAAC2L,GAAU,CAAA5L,SAAA,CACPd,cAACkV,GAAe,IAChBlV,cAAC2V,GAA2B,MAGxC,E,gDCZe,OAA0B,uCCA1B,OAA0B,uCCA1B,OAA0B,uCCA1B,OAA0B,uC,qBCanCC,I,qBAAOpW,IAAOY,IAAGpB,QAAAC,YAAA,oCAIjB4W,GAAOrW,IAAOY,IAAGhB,QAAAH,YAAA,iQAYjB6W,GAAItW,IAAOY,IAAGf,QAAAJ,YAAA,uKAUd6C,GAAStC,YAAOI,IAAPJ,CAAYF,QAAAL,YAAA,yGAQrB8W,GAAS,SAAAC,GAAAC,aAAAF,EAAAC,GAAA,IAAAE,EAAAC,aAAAJ,GAAA,SAAAA,IAAA,OAAAK,aAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAiDd,OAjDcC,aAAAR,EAAA,EAAAxP,IAAA,SAAAC,MACX,WAcA,OACIxG,cAAAgB,WAAA,CAAAF,SACAd,cAAA,OAAAc,SACId,cAACiB,IAAI,CAACuV,SAAO,EAAA1V,SACbC,eAAC0V,KAAMxW,wBAAA,GAjBM,CACbyW,MAAM,EACNC,QAAO,EACPC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,MAAK,EACLC,cAAe,QACfC,UAAU,EACVC,cAAe,KACfC,QAAS,IAMW,IAAAtW,SAAA,CACpBC,eAAC6U,GAAI,CAAA9U,SAAA,CACDd,cAAA,OAAKyB,IAAO4V,GAAWC,MAAM,OAAOC,OAAO,UAC3CvX,cAAC6V,GAAI,CAAA/U,SACDd,cAAC8V,GAAC,CAAAhV,SAACd,cAAC8B,GAAM,CAAC/B,GAAG,WAAUe,SAAC,sBAGjCC,eAAC6U,GAAI,CAAA9U,SAAA,CACDd,cAAA,OAAKyB,IAAO+V,GAAWF,MAAM,OAAOC,OAAO,UAC3CvX,cAAC6V,GAAI,CAAA/U,SACDd,cAAC8V,GAAC,CAAAhV,SAACd,cAAC8B,GAAM,CAAC/B,GAAG,WAAUe,SAAC,sBAGjCC,eAAC6U,GAAI,CAAA9U,SAAA,CACDd,cAAA,OAAKyB,IAAOgW,GAAWH,MAAM,OAAOC,OAAO,UAC3CvX,cAAC6V,GAAI,CAAA/U,SACDd,cAAC8V,GAAC,CAAAhV,SAACd,cAAC8B,GAAM,CAAC/B,GAAG,WAAUe,SAAC,sBAGjCC,eAAC6U,GAAI,CAAA9U,SAAA,CACDd,cAAA,OAAKyB,IAAOiW,GAAWJ,MAAM,OAAOC,OAAO,UAC3CvX,cAAC6V,GAAI,CAAA/U,SACDd,cAAC8V,GAAC,CAAAhV,SAACd,cAAC8B,GAAM,CAAC/B,GAAG,WAAUe,SAAC,+BAQ7C,KAACiV,CAAC,CAjDa,CAAS4B,IAAMC,WAoDf7B,M,yFCpFThJ,GAAUvN,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,mVAU5B4Y,GAAQrY,YAAOkN,GAAPlN,CAAkBJ,QAAAH,YAAA,gCAI1B6C,GAAStC,YAAOI,IAAPJ,CAAYH,QAAAJ,YAAA,+DAKrB6Y,GAAYC,aAAW,CAC3BrE,KAAM,CACJsE,SAAU,QACVT,OAAQ,QACRU,OAAQ,OACRC,UAAW,0BACXC,aAAe,QAEjBC,OAAQ,CACNC,QAAS,eACTJ,OAAQ,QACRK,UAAW,cAEb7J,MAAO,CACLvM,SAAU,GACViW,aAAe,QAEjBI,IAAK,CACHJ,aAAc,MAIZK,GAAQhZ,YAAOkN,GAAPlN,CAAkBF,QAAAL,YAAA,yYAMIR,EAAQC,KAAK,IAelC,SAAS+Z,KACtB,IAAMC,EAAUZ,KAChB,OACE/W,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACwY,GAAK,CAAA1X,SACJd,cAAA,MAAAc,SAAI,eAENC,eAACgM,GAAO,CAAAjM,SAAA,CACRd,cAAC6X,GAAK,CAAA/W,SACNC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAAA,CAC5BC,eAAC6X,KAAW,CAAA9X,SAAA,CACVd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,oCAGxCC,eAAC8X,KAAU,CAACE,QAAQ,QAAQC,UAAU,IAAGlY,SAAA,CACvCd,cAAA,SAAK,2HACoBA,cAAA,SAAK,2JAIlCA,cAACiZ,KAAW,CAAAnY,SACVd,cAAC8B,GAAM,CAAC/B,GAAG,WAAUe,SACrBd,cAACF,KAAM,CAACoZ,KAAK,QAAQC,UAAWnZ,cAACoZ,KAAgB,IAAKpX,MAAO,CAACmN,WAAW,QAAQrO,SAAC,mDAKlFd,cAAC6X,GAAK,CAAA/W,SACRC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAAA,CAC9BC,eAAC6X,KAAW,CAAA9X,SAAA,CACVd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,8BAGxCC,eAAC8X,KAAU,CAACE,QAAQ,QAAQC,UAAU,IAAGlY,SAAA,CACvCd,cAAA,SAAK,gIACoBA,cAAA,SAAK,8HACFA,cAAA,eAGhCA,cAACiZ,KAAW,CAAAnY,SACVd,cAAC8B,GAAM,CAAC/B,GAAG,YAAWe,SACtBd,cAACF,KAAM,CAACoZ,KAAK,QAAQC,UAAWnZ,cAACoZ,KAAgB,IAAMpX,MAAO,CAACmN,WAAW,QAAQrO,SAAC,sDAMvFC,eAACgM,GAAO,CAAAjM,SAAA,CACRd,cAAC6X,GAAK,CAAA/W,SACNC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAAA,CAC5BC,eAAC6X,KAAW,CAAA9X,SAAA,CACVd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,6BAGxCC,eAAC8X,KAAU,CAACE,QAAQ,QAAQC,UAAU,IAAGlY,SAAA,CACvCd,cAAA,SAAK,wGACgBA,cAAA,SAAK,oLAI9BA,cAACiZ,KAAW,CAAAnY,SACVd,cAAC8B,GAAM,CAAC/B,GAAG,YAAWe,SACtBd,cAACF,KAAM,CAACoZ,KAAK,QAAQC,UAAWnZ,cAACoZ,KAAgB,IAAMpX,MAAO,CAACmN,WAAW,QAAQrO,SAAC,oDAKvFd,cAAC6X,GAAK,CAAA/W,SACJC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAAA,CAC9BC,eAAC6X,KAAW,CAAA9X,SAAA,CACVd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,mCAGxCC,eAAC8X,KAAU,CAACE,QAAQ,QAAQC,UAAU,IAAGlY,SAAA,CACvCd,cAAA,SAAK,8GACiBA,cAAA,SAAK,uHACDA,cAAA,eAG9BA,cAACiZ,KAAW,CAAAnY,SACVd,cAAC8B,GAAM,CAAC/B,GAAG,UAASe,SACpBd,cAACF,KAAM,CAACe,UAAW6X,EAAQjZ,OAAQ0Z,UAAWnZ,cAACoZ,KAAgB,IAAMF,KAAK,QAAQlX,MAAO,CAACmN,WAAW,QAAQrO,SAAC,wDAQtH,CC5KA,I,MAAM0X,GAAQhZ,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,yYAMIR,EAAQC,KAAK,IAc3C2a,GAAY7Z,IAAOY,IAAGhB,QAAAH,YAAA,kCAItB+N,GAASxN,IAAOY,IAAGf,QAAAJ,YAAA,4BAwBRqa,GApBC,WACd,OACEvY,eAAAC,WAAA,CAAAF,SAAA,CACEC,eAACyX,GAAK,CAAC3X,UAAY,QAAOC,SAAA,CACtBd,cAAA,MAAAc,SAAI,UACJC,eAACsY,GAAS,CAAAvY,SAAA,CACRC,eAAA,KAAAD,SAAA,CAAGd,cAAA,QAAAc,SAAM,SAAW,oDACpBd,cAAA,KAAAc,SAAG,+MACHd,cAAA,KAAAc,SAAG,qFAELC,eAACsY,GAAS,CAAAvY,SAAA,CACRd,cAAA,KAAAc,SAAG,0NACHd,cAAA,cAGNA,cAACgN,GAAM,MAGb,EC5CIuM,GAAU/Z,IAAOY,IAAGpB,QAAAC,YAAA,6BAIpBua,GAAWha,YAAOkN,GAAPlN,CAAkBJ,QAAAH,YAAA,iLA8BlBwa,GAnBJ,WACT,OACE1Y,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACuZ,GAAO,IACRvZ,cAAC+V,GAAS,IAEV/V,cAACwZ,GAAQ,CAAA1Y,SACTC,eAACE,IAAI,CAACC,QAAM,EAAAJ,SAAA,CACVd,cAACsZ,GAAS,IACVtZ,cAACyY,GAAQ,SAIXzY,cAACuZ,GAAO,MAIZ,ECvBaG,I,0FAAAA,GAVf,WACE,OACE3Y,eAAAC,WAAA,CAAAF,SAAA,CACEd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAACyZ,GAAI,IACLzZ,cAACiS,GAAe,MAGtB,E,mDCTM0H,I,OAAana,IAAOY,IAAGpB,QAAAC,YAAA,yGAWvB8N,IAJSvN,IAAOY,IAAGhB,QAAAH,YAAA,6BAITO,IAAOY,IAAGf,QAAAJ,YAAA,6DAwRX2a,GAnRF,SAAHjZ,GAAmF,IACrFL,EAAgBuZ,EAAOC,EAAMC,EAI7BC,EAAOC,EALAC,EAAOvZ,EAAPuZ,QAASC,EAAUxZ,EAAVwZ,WAAYC,EAAUzZ,EAAVyZ,WAAYC,EAAa1Z,EAAb0Z,cACFxX,GADwBlC,EAAP2Z,QAAgB3Z,EAAP4Z,QAAc5Z,EAAL6Z,MAC3B,WAC9CC,EAAQ,EAAGC,EAAS,EAAGC,EAAS,EAAGC,EAAQ,EAAGC,EAAO,EAAGC,EAAK,EAC7DC,EAAU,EAAGC,EAAW,EAAGC,EAAW,EAAGC,EAAU,EAAGC,EAAS,EAC/DC,EAAY,sBAEVC,EAAuB,GAAlBC,OAAOC,WACZC,EAAwB,GAAnBF,OAAOG,YAEdC,EAAW,CACX,CACIC,OAAQ,qBACRC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExD,CACIF,OAAQ,+CACRC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExD,CACIF,OAAQ,qDACRC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExD,CACIF,OAAQ,iCACRC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExD,CACIF,OAAQ,4BACRC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAG5DjQ,qBAAU,WACNkQ,GACJ,GAAG,IAEH,IAgDMA,EAA2C,WAC1C5B,GACCA,EAAQwB,EAEhB,EAEMK,EAAW,SAACC,EAAOJ,EAAGC,GACxB,GAAGG,EAAM9M,OAAS,EAAE,CAClB4K,EAAOkC,EAAM,GAAGlC,KAChBC,EAAWiC,EAAM,GAAGjC,SAEpB,IAAI,IAAIkC,EAAG,EAAGA,EAAEnC,EAAKoC,UAAUhN,OAAQ+M,IAC/BnC,EAAKoC,UAAUD,GAAGE,SAASP,EAC3B9B,EAAKoC,UAAUD,GAAGE,SAASN,CAGrC,CACJ,EACMO,EAAc,WAChBtR,QAAQC,IAAI,yBACZsR,GACJ,EACMA,EAAe,SAAfA,IAEF,GADAC,IACGxC,GAAkB,SAATjX,EAAkB,CAE1B,IADA,IAAI0Z,EAAS,GACLN,EAAG,EAAGA,EAAEnC,EAAKoC,UAAUhN,OAAQ+M,IAAI,CACvC,IAAIL,EAAI9B,EAAKoC,UAAUD,GAAGE,SAASP,EAC/BC,EAAI/B,EAAKoC,UAAUD,GAAGE,SAASN,EACnCU,EAAOlb,KAAKua,GACZW,EAAOlb,KAAKwa,EAChB,CACAhC,EAAM2C,SAASD,EAAQE,EAC3B,MACIC,WAAWL,EAAc,IAEjC,EACMC,EAAa,WAEf,GADAzZ,EAAQ,UACJiX,EAAM,CACR,IAAI6C,EAAO7C,EAAKoC,UAAU,GAAGU,MACzBC,EAAS/C,EAAKoC,UAAU,IAAIU,MAE9B/Z,EADG8Z,EAAO,IAASE,EAAS,GACpB,QAEA,SAEZ,CACJ,EACMJ,EAAY,SAACK,EAAKC,GAEpB,GAAGD,EACChS,QAAQC,IAAI+R,OADhB,CAIA,GAAGC,GAAYA,EAAQ,GAAGC,WAAa,GAAK,CACxC,IAAIC,EAAKF,EAAQ,GAAGG,MACX,KAAND,EAAc7B,EAAY,sBACf,KAAN6B,EAAY7B,EAAY,qBAClB,KAAN6B,EAAY7B,EAAY,4BAClB,KAAN6B,EAAY7B,EAAY,kCAClB,KAAN6B,EAAY7B,EAAY,iCAClB,KAAN6B,IAAY7B,EAAY,4BAClC,MACMA,EAAY,sBACF,uBAAbA,GACCN,EAAK,EACFD,EAAK,IAAMM,IACVgC,cAAcnD,GACdoD,aAAanD,GACboD,SAASC,eAAe,QAAQ3J,UAAY,2EAIlD4J,EAAWnC,GAEbtQ,QAAQC,IAAIqQ,GACZiB,GAvBF,CAwBJ,EAEMmB,EAAO,SAACC,EAAOC,GAGjB,GAAIA,EAyBA,IAAI,IAAIzB,EAAI,EAAGA,EAAEnC,EAAKoC,UAAUhN,OAAQ+M,IAAI,CACxC,IAAIL,EAAI9B,EAAKoC,UAAUD,GAAGE,SAASP,EAC/BC,EAAI/B,EAAKoC,UAAUD,GAAGE,SAASN,EACnCH,EAAS+B,GAAO7B,EAAEK,IAAML,EACxBF,EAAS+B,GAAO5B,EAAEI,IAAMJ,CAC5B,MA7BA,IAAI,IAAII,EAAI,EAAGA,EAAEnC,EAAKoC,UAAUhN,OAAQ+M,IAAI,CACxC,IAAIL,EAAI9B,EAAKoC,UAAUD,GAAGE,SAASP,EAC/BC,EAAI/B,EAAKoC,UAAUD,GAAGE,SAASN,EACrB,IAAV4B,GACA/B,EAAS+B,GAAO7B,EAAEK,IAAOL,EAAEzB,EAC3BuB,EAAS+B,GAAO5B,EAAEI,IAAOJ,EAAE1B,GAEZ,IAAVsD,GAIU,IAAVA,GAHL/B,EAAS+B,GAAO7B,EAAEK,IAAOL,EAAExB,EAC3BsB,EAAS+B,GAAO5B,EAAEI,IAAOJ,EAAEzB,IAO3BsB,EAAS+B,GAAO7B,EAAEK,IAAOL,EAAEvB,EAC3BqB,EAAS+B,GAAO5B,EAAEI,IAAOJ,EAAExB,GAE/BvP,QAAQC,IAAI0S,GACZ3S,QAAQC,IAAI2Q,EAChB,CAUR,EAEI6B,EAAa,SAACL,GACd,GAAY,sBAATA,IAAmBpC,GAAML,EAAQN,EAChCqD,EAAK,EAAG,GACR/C,GAAS,EACT4C,SAASC,eAAe,QAAQ3J,UAAY,GAAA1Q,OAAGia,GAAS,IAAG,GAAAja,OAAMwX,GAAU,SAC3EK,EAAK,EACFL,GAASN,GAAeY,IACvBsC,SAASC,eAAe,QAAQ3J,UAAY,8EAC5CoH,EAAU,QAGb,GAAY,6BAATmC,IAAqBpC,GAAMJ,EAASN,GAAuB,GAATW,EACtDyC,EAAK,EAAG,GACR9C,GAAU,EACV2C,SAASC,eAAe,QAAQ3J,UAAY,GAAA1Q,OAAGia,GAAS,IAAG,GAAAja,OAAMyX,GAAW,SAC5EI,EAAK,EACFJ,GAAUN,GAAeY,IACxBqC,SAASC,eAAe,QAAQ3J,UAAY,oFAC5CqH,EAAW,QAGd,GAAY,mCAATkC,IAAsBpC,GAAMH,EAASP,GAAcM,GAAUN,GAA0B,GAAZY,EAC/EwC,EAAK,EAAG,GACR7C,GAAU,EACV0C,SAASC,eAAe,QAAQ3J,UAAY,GAAA1Q,OAAGia,GAAU,IAAG,GAAAja,OAAM0X,GAAW,SAC7EG,EAAK,EACFH,GAAUP,GAAea,IACxBoC,SAASC,eAAe,QAAQ3J,UAAY,gEAC5CsH,EAAW,QAGd,GAAY,kCAATiC,IAAqBpC,GAAMF,EAAQP,GAA6B,GAAZY,EACxDuC,EAAK,EAAG,GACR5C,GAAS,EACTyC,SAASC,eAAe,QAAQ3J,UAAY,GAAA1Q,OAAGia,GAAU,IAAG,GAAAja,OAAM2X,GAAU,SAC5EE,EAAK,EACFF,GAASP,GAAkBa,IAC1BmC,SAASC,eAAe,QAAQ3J,UAAY,2DAC5CuH,EAAU,QAGb,GAAY,6BAATgC,IAAqBpC,GAAiB,GAAXI,IAC/BL,GAAQ,EACRC,EAAK,GACDK,GAAO,CACP,IAAIwC,EAAM,GACV3D,EAAQ4D,aAAY,WACN,GAAPD,GAAaH,EAAK,EAAG,GACxBH,SAASC,eAAe,QAAQ3J,UAAY,GAAA1Q,OAAGia,GAAU,IAAG,GAAAja,OAAM0a,KAAU,wCAChF,GAAG,KAEH1D,EAAWyC,YAAW,WAClBS,cAAcnD,GACdmB,EAAS,EACTkC,SAASC,eAAe,QAAQ3J,UAAY,4BAC5CmI,GACJ,GAAG,KACP,CAER,EAED,OACC9b,cAAAgB,WAAA,CAAAF,SACAC,eAACgM,GAAO,CAAAjM,SAAA,CACRd,cAAC6d,YAAQ,CAACC,YAAY,SAAQhd,SAACd,cAAC2Z,GAAU,CAAClS,GAAG,OAAM3G,SAAC,8DACnDd,cAAC+d,KAAM,CAACC,MAtOI,SAACC,EAAKC,GAChBD,EAAGE,aAA+B,GAAlB7C,OAAOC,WAAmC,GAAnBD,OAAOG,aAAiB2C,OAAOF,IACtE5d,EAAQ2d,EAAGI,cAAcJ,EAAGK,QACtBpF,KAAuB,GAAlBoC,OAAOC,WAAmC,GAAnBD,OAAOG,aACzCnb,EAAMie,OACIC,KAAIC,QAAQne,GACdgT,GAAG,OAAOyI,IAOlBlC,EAAQ2E,KAAIE,cANI,CACZnC,OAAQ,GACRoC,QAAS,EACTC,KAAM,iBACNC,OAAO,KAQJC,KALW,CACdC,MAAM,6FACNC,SAAW,kGACXC,QAAS,qGAEU7C,EAC3B,EAkNwB8C,KAhNX,SAACjB,GAIV,GAHAA,EAAGkB,UAAUlB,EAAG3G,MAAO,GACvB2G,EAAGmB,OAAO,EAAG,GACbnB,EAAGoB,MAAM/e,EAAO,EAAG,EAAqB,GAAlBgb,OAAOC,WAAmC,GAAnBD,OAAOG,aACjD3B,EAAK,CACJ,IAAI,IAAImC,EAAE,EAAGA,EAAElC,EAAS7K,OAAQ+M,IAAI,CAChC,IAAIqD,EAAIvF,EAASkC,GAAG,GAChBsD,EAAIxF,EAASkC,GAAG,GACpBgC,EAAGuB,aAAa,GAChBvB,EAAGwB,OAAO,GAAI,IAAK,KACnBxB,EAAGyB,KAAKJ,EAAEnD,SAASP,GAAqB,GAAlBN,OAAOC,WAAeF,GAAKiE,EAAEnD,SAASN,GAAsB,GAAnBP,OAAOG,YAAgBD,GAAK+D,EAAEpD,SAASP,GAAqB,GAAlBN,OAAOC,WAAeF,GAAKkE,EAAEpD,SAASN,GAAsB,GAAnBP,OAAOG,YAAgBD,GAC7K,CACA,IAAI,IAAIS,EAAI,EAAGA,EAAEnC,EAAKoC,UAAUhN,OAAQ+M,IAAI,CACxC,IAAIL,EAAI9B,EAAKoC,UAAUD,GAAGE,SAASP,GAAqB,GAAlBN,OAAOC,WAAeF,GACxDQ,EAAI/B,EAAKoC,UAAUD,GAAGE,SAASN,GAAsB,GAAnBP,OAAOG,YAAgBD,GAC7DyC,EAAG0B,KAAK,GACR1B,EAAGwB,OAAO,KACVxB,EAAG2B,QAAQhE,EAAEC,EAAE,GAAG,GACtB,CACJ,CACJ,EA4LoCgE,cA3Ld,SAAC5B,GACnBA,EAAG6B,aAA+B,GAAlBxE,OAAOC,WAAmC,GAAnBD,OAAOG,aAAiB,EACjE,QA6LN,ECtSMsE,GAAWvgB,IAAOY,IAAGpB,QAAAC,YAAA,iQAcrB+gB,GAAOxgB,IAAOY,IAAGhB,QAAAH,YAAA,6VAejB4W,GAAOrW,IAAO4N,KAAI/N,QAAAJ,YAAA,yDAuBTghB,GAnBI,SAAHtf,GAAkB,IAAZuf,EAAIvf,EAAJuf,KAClB9U,EAA0BC,mBAAS,CAAC,GAAEC,EAAApG,YAAAkG,EAAA,GAA/BpJ,EAAKsJ,EAAA,GAAE6U,EAAQ7U,EAAA,GAStB,OARAoR,YAAW,WACP,IAAM0D,EAAW,CACbC,QAAS,EACT/I,MAAM,GAADrU,OAAKid,EAAI,MAElBC,EAASC,EACb,GAAG,KAGCrf,eAACgf,GAAQ,CAAAjf,SAAA,CACLd,cAAC6V,GAAI,CAAA/U,SAAC,2CACNC,eAACif,GAAI,CAAChe,MAAOA,EAAMlB,SAAA,CAAEof,EAAK,SAGtC,ECpDe,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,qC,oBCUnCI,GAAK9gB,IAAOY,IAAGpB,QAAAC,YAAA,2bAsBfshB,GAAQ/gB,IAAOY,IAAGhB,QAAAH,YAAA,0DAKlBuhB,GAAOhhB,IAAOY,IAAGf,QAAAJ,YAAA,iLAWjBwhB,GAAKjhB,IAAOY,IAAGd,QAAAL,YAAA,sKAYfkO,GAAK3N,IAAO4N,KAAI1N,QAAAT,YAAA,yBACVR,EAAQI,OAAO,IAErB6hB,GAAUlhB,IAAOY,IAAGP,QAAAZ,YAAA,mXAapB0hB,GAAOnhB,IAAOY,IAAGiN,QAAApO,YAAA,odAqBjB2hB,GAAWphB,IAAOY,IAAGygB,QAAA5hB,YAAA,sDAKrB6hB,GAAQthB,IAAOY,IAAG2gB,QAAA9hB,YAAA,+TAelB+hB,GAAQxhB,IAAOY,IAAG6gB,QAAAhiB,YAAA,2MAoITiiB,GA1HQ,SAAHvgB,GAAsB,IASlCwgB,EAASC,EAAUC,EAAUC,EAASC,EATpBC,EAAQ7gB,EAAR6gB,SAElB/G,EAAQ+G,EAAS,GAAG/G,MACpBC,EAAS8G,EAAS,GAAG9G,OACrBC,EAAS6G,EAAS,GAAG7G,OACrBC,EAAQ4G,EAAS,GAAG5G,MACpBC,EAAO2G,EAAS,GAAG3G,KACvB/P,QAAQC,IAAIyW,GAIYL,EAAJ,GAAhB1G,EAAMvL,OAAwBlP,cAAA,MAAAc,SAAI,oCACvB2Z,EAAMpL,KAAI,SAAC7I,GAAK,OAAKxG,cAAA,MAAAc,SAAK0F,GAAW,IAE3B4a,EAAJ,GAAjB1G,EAAOxL,OAAyBlP,cAAA,MAAAc,SAAI,oCACxB4Z,EAAOrL,KAAI,SAAC7I,GAAK,OAAKxG,cAAA,MAAAc,SAAK0F,GAAW,IAE7B6a,EAAJ,GAAjB1G,EAAOzL,OAAyBlP,cAAA,MAAAc,SAAI,oCACxB6Z,EAAOtL,KAAI,SAAC7I,GAAK,OAAKxG,cAAA,MAAAc,SAAK0F,GAAW,IAE9B8a,EAAJ,GAAhB1G,EAAM1L,OAAwBlP,cAAA,MAAAc,SAAI,oCACvB8Z,EAAMvL,KAAI,SAAC7I,GAAK,OAAKxG,cAAA,MAAAc,SAAK0F,GAAW,IAE7B+a,EAAJ,GAAf1G,EAAK3L,OAAuBlP,cAAA,MAAAc,SAAI,oCACtB+Z,EAAKxL,KAAI,SAAC7I,GAAK,OAAKxG,cAAA,MAAAc,SAAK0F,GAAW,IAElD,IAEIib,EAFAC,EAAQjH,EAAMvL,OAASwL,EAAOxL,OAASyL,EAAOzL,OAAS0L,EAAM1L,OAAS2L,EAAK3L,OAIlE,GAATwS,GAAuB,GAATA,EAAYD,EAAQ,KACpB,GAATC,GAAuB,GAATA,EAAYD,EAAQ,KACzB,GAATC,GAAuB,GAATA,EAAYD,EAAO,KACxB,GAATC,GAAuB,GAATA,EAAYD,EAAO,KACxB,GAATC,GAAuB,GAATA,EAAYD,EAAO,KACxB,IAATC,GAAwB,IAATA,EAAaD,EAAO,KAC1B,IAATC,EAAaD,EAAO,KACX,IAATC,EAAaD,EAAO,KACX,IAATC,IAAaD,EAAO,OAE7B,IAAIE,EAAO,GAAGD,EAEd,OAEI3gB,eAACuf,GAAE,CAAAxf,SAAA,CACCd,cAAA,OAAKgC,MAAS,CAAE4f,WAAY,OAAQC,cAAe,OAAQC,gBAAiB,WAAWhhB,SACvFC,eAACyf,GAAI,CAAA1f,SAAA,CAAC,IAACd,cAACmN,GAAE,CAAArM,SAAC,OAAO,SAElBd,cAAA,MAAAc,SAAI,iDACJC,eAAC6f,GAAQ,CAAA9f,SAAA,CACLd,cAACghB,GAAK,CAAAlgB,SAAE2gB,IACZzhB,cAAC8gB,GAAK,CAAAhgB,SACFC,eAAA,MAAAD,SAAA,CAAK6gB,EAAK,cAGd5gB,eAAC2f,GAAO,CAAA5f,SAAA,CACRC,eAAC4f,GAAI,CAAA7f,SAAA,CACDd,cAAA,OAAKyB,IAAOsgB,KACZ/hB,cAAA,MAAAc,SAAI,uBACJd,cAACgiB,KAAqB,IACtBhiB,cAACugB,GAAK,CAAAzf,SACNd,cAACygB,GAAE,CAAA3f,SACCd,cAAA,MAAAc,SACCqgB,WAMTpgB,eAAC4f,GAAI,CAAA7f,SAAA,CACDd,cAAA,OAAKyB,IAAOwgB,KACZjiB,cAAA,MAAAc,SAAI,iBACJd,cAACgiB,KAAqB,IACtBjhB,eAACwf,GAAK,CAAAzf,SAAA,CACFd,cAAA,MAAAc,SAAI,iBACJd,cAACygB,GAAE,CAAA3f,SACCd,cAAA,MAAAc,SACCsgB,SAITrgB,eAACwf,GAAK,CAAAzf,SAAA,CACFd,cAAA,MAAAc,SAAI,uBACJd,cAACygB,GAAE,CAAA3f,SACCd,cAAA,MAAAc,SACCugB,YAMbtgB,eAAC4f,GAAI,CAAA7f,SAAA,CACDd,cAAA,OAAKyB,IAAOygB,KACZliB,cAAA,MAAAc,SAAI,mCACJd,cAACgiB,KAAqB,IACtBhiB,cAACugB,GAAK,CAAAzf,SACNd,cAACygB,GAAE,CAAA3f,SACCd,cAAA,MAAAc,SACCwgB,WAMTvgB,eAAC4f,GAAI,CAAA7f,SAAA,CACDd,cAAA,OAAKyB,IAAO0gB,GAAUngB,MAAQ,CAACsV,MAAQ,QAASC,OAAQ,UACxDvX,cAAA,MAAAc,SAAI,6BACJd,cAACgiB,KAAqB,IACtBhiB,cAACugB,GAAK,CAAAzf,SACNd,cAACygB,GAAE,CAAA3f,SACCd,cAAA,MAAAc,SACHygB,gBASjB,EC/OMa,GAAW5iB,IAAOY,IAAGpB,QAAAC,YAAA,uDAKrBojB,GAAW7iB,IAAOY,IAAGhB,QAAAH,YAAA,wEAMrBqjB,GAAU9iB,YAAOkN,GAAPlN,CAAkBH,QAAAJ,YAAA,4EAO5B+N,GAASxN,IAAOY,IAAGd,QAAAL,YAAA,6BA4NVsjB,GAxND,SAAH5hB,GAAoB,IAAf+a,EAAQ/a,EAAR+a,SACZtQ,EAAsCC,oBAAS,GAAMC,EAAApG,YAAAkG,EAAA,GAA9CoX,EAAWlX,EAAA,GAAEmX,EAAcnX,EAAA,GAClCyD,EAAmC1D,mBAAS,IAAG2D,EAAA9J,YAAA6J,EAAA,GAAxC2T,EAAY1T,EAAA,GAAE2T,EAAU3T,EAAA,GAC/B4T,EAA4BvX,mBAAS,IAAGwX,EAAA3d,YAAA0d,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAA8B3X,oBAAS,GAAM4X,EAAA/d,YAAA8d,EAAA,GAAtCvgB,EAAOwgB,EAAA,GAAEC,EAAUD,EAAA,GAClB3Y,EAASqB,aAAY,SAAAhF,GAAO,MAAQ,CACxC2D,KADgC3D,EAAJ2D,KACjBA,KACZ,IAFKA,KAGJkX,EAAW,CACb,CACE/G,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,KAAM,KAGNsI,EAAY,CACd,CACExH,OAAQ,qBACRyH,MAAO,IAET,CACEzH,OAAQ,+CACRyH,MAAO,IAET,CACEzH,OAAQ,qDACRyH,MAAO,IAET,CACEzH,OAAQ,kCACRyH,MAAO,IAET,CACEzH,OAAQ,4BACRyH,MAAO,KA6CLC,GA1CQ9S,SAASjG,EAAKgZ,EAAE,GAAG,IACjB/S,SAASjG,EAAKgZ,EAAE,KAAQ,IACxB/S,SAASjG,EAAKgZ,EAAE,IAwCT,WAGrB,IAAIC,EAAM,EACNC,EAAM,GACNC,EAAU,GAAIC,EAAW,GAAIC,EAAW,GAAIC,EAAU,GAAIC,EAAS,GAEvE/Y,QAAQC,IAAIoY,EAAU,GAAGC,MAAM,KAE/BG,EAAMO,WAAWpB,EAAa,GAAG,IAAQS,EAAU,GAAGC,MAAM,IACnD,IACPI,EAAM,kEACNC,EAAQpiB,KAAKmiB,IAEPD,GAAO,KACbC,EAAM,kEACNC,EAAQpiB,KAAKmiB,KAGfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,IACPI,EAAM,kEACNC,EAAQpiB,KAAKmiB,IAEPD,GAAO,KACbC,EAAM,wEACNC,EAAQpiB,KAAKmiB,KAGfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,KACtC,KACRI,EAAM,+EACNE,EAASriB,KAAKmiB,MAEhBD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,IAAMG,GAAO,MACpBC,EAAM,+EACNE,EAASriB,KAAKmiB,MAIhBD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,IAAMG,GAAO,MACpBC,EAAM,yEACNG,EAAStiB,KAAKmiB,IAEhBD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,GAChDtY,QAAQC,IAAIoY,EAAU,GAAGC,MAAM,IAC5BG,GAAO,KACRC,EAAM,qFACNG,EAAStiB,KAAKmiB,KAIhBD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,KACPI,EAAM,kEACNI,EAAQviB,KAAKmiB,KAEfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,KACPI,EAAM,4DACNI,EAAQviB,KAAKmiB,KAEfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,KACPI,EAAM,4DACNI,EAAQviB,KAAKmiB,KAEfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,IACvC,KACPI,EAAM,sDACNI,EAAQviB,KAAKmiB,KAIfD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,KACtC,KACRI,EAAM,wEACNK,EAAOxiB,KAAKmiB,IAEdD,EAAMb,EAAa,GAAG,GAAOS,EAAU,GAAGC,MAAM,GAChDtY,QAAQC,IAAI2X,EAAa,GAAG,IACzBa,GAAO,KACRC,EAAM,qFACNK,EAAOxiB,KAAKmiB,IAEdhC,EAAS,GAAG/G,MAAQgJ,EACpBjC,EAAS,GAAG9G,OAASgJ,EACrBlC,EAAS,GAAG7G,OAASgJ,EACrBnC,EAAS,GAAG5G,MAAQgJ,EACpBpC,EAAS,GAAG3G,KAAOgJ,EACnBd,EAAUvB,GACV9E,YAAW,WACT+F,GAAe,EACjB,GAAG,IACL,GAuBF,OArBE7W,qBAAU,WACNd,QAAQC,IAAI2Q,GACZqI,MAAM,kFACLC,MAAK,SAAAjH,GAAO,OAAIA,EAAQkH,MAAM,IAC9BD,MAAK,SAAAC,GACHtB,EAAWsB,GACXf,GAAW,EACd,GAEJ,GAAG,IAEHtX,qBAAU,WACLnJ,GACDiZ,EAASrM,KAAI,SAAA6U,IArJH,SAACA,GACb,IAAIC,EAAM,EACQ,gDAAfD,EAAKvI,OACNwI,EAAM,EAEe,sDAAfD,EAAKvI,OACXwI,EAAM,EAEe,kCAAfD,EAAKvI,OACXwI,EAAM,EAEe,6BAAfD,EAAKvI,SACXwI,EAAM,GAER,IAAMC,EAASF,EAAKtI,EAAGyI,EAASH,EAAKrI,EAErCsH,EAAUgB,GAAKf,MAAM/hB,MAAMijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,MAAQE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,IAAKD,EAAO,GAAKA,EAAO,QAAU,IAAME,KAAKG,KAExLtB,EAAUgB,GAAKf,MAAM/hB,KAAK,KAAOijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,MAAQE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,IAAKD,EAAO,GAAKA,EAAO,QAAU,IAAME,KAAKG,KAE9LtB,EAAUgB,GAAKf,MAAM/hB,MAAMijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,GAAID,EAAO,IAAMA,EAAO,KAAOE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,GAAID,EAAO,GAAKA,EAAO,OAAS,IAAME,KAAKG,KAEpLtB,EAAUgB,GAAKf,MAAM/hB,KAAK,KAAOijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,GAAID,EAAO,GAAKA,EAAO,KAAOE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,GAAID,EAAO,IAAMA,EAAO,OAAS,IAAME,KAAKG,KAE1LtB,EAAUgB,GAAKf,MAAM/hB,MAAMijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,GAAID,EAAO,GAAKA,EAAO,KAAOE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,GAAID,EAAO,GAAKA,EAAO,OAAS,IAAME,KAAKG,KAElLtB,EAAUgB,GAAKf,MAAM/hB,KAAK,KAAOijB,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,GAAID,EAAO,IAAMA,EAAO,KAAOE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,GAAKA,EAAO,GAAID,EAAO,GAAKA,EAAO,OAAS,IAAME,KAAKG,KAE1LtB,EAAUgB,GAAKf,MAAM/hB,KAAMijB,KAAKC,IAAKD,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,KAAQE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,QAAW,IAAME,KAAKG,KAE5LtB,EAAUgB,GAAKf,MAAM/hB,KAAK,IAAOijB,KAAKC,IAAKD,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,KAAQE,KAAKC,IAAID,KAAKE,MAAMH,EAAO,IAAMA,EAAO,IAAKD,EAAO,IAAMA,EAAO,QAAW,IAAME,KAAKG,KAClM3Z,QAAQC,IAAIoY,EAAUgB,IAEZ,GAAPA,GACDd,GAEJ,CAkHMD,CAAMc,EACR,GAGJ,GAAG,CAACzhB,IAIJ1B,eAAAC,WAAA,CAAAF,SAAA,CACC0hB,GAAezhB,eAACqhB,GAAQ,CAAAthB,SAAA,CACvBd,cAACgN,GAAM,IACPjM,eAAC8c,YAAQ,CAAA/c,SAAA,CAACd,cAACkhB,GAAc,CAACM,SAAasB,IAAU,WAEjDN,GAAcxiB,cAACqiB,GAAQ,CAAAvhB,SACvBd,cAACsiB,GAAO,CAAAxhB,SACLd,cAACigB,GAAU,CAACC,KAAM,YAK3B,ECnPe,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,0CCA1B,OAA0B,iC,6BCQnCnT,GAAUvN,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,oCAI5BylB,GAAWllB,IAAOY,IAAGhB,QAAAH,YAAA,qCAyFZ0lB,GArFG,WAEd,IAsBQjM,EAtBUX,aAAW,CACzBrE,KAAM,CACJsE,SAAU,QACVT,OAAQ,QACRD,MAAQ,QACRY,UAAW,qCACXG,QAAU,gBAGZ5J,MAAO,CACLvM,SAAU,GACViW,aAAe,QAEjByM,MAAO,CACHvM,QAAU,eACVF,aAAe,QACf0M,WAAa,OACbC,YAAc,OACd7W,MAAQ,YAIE6J,GAGd,OACI9X,cAAAgB,WAAA,CAAAF,SACAC,eAACgM,GAAO,CAAAjM,SAAA,CACJC,eAAC2jB,GAAQ,CAAA5jB,SAAA,CACbd,cAAC2Y,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAC1BC,eAAC6X,KAAW,CAAA9X,SAAA,CACRd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,4BAKhDd,cAAC+kB,KAAmB,CAAClkB,UAAW6X,EAAQkM,WAExC7jB,eAAC2jB,GAAQ,CAAA5jB,SAAA,CACTd,cAAC2Y,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAC1BC,eAAC6X,KAAW,CAAA9X,SAAA,CACRd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,sBAKhDd,cAAC+kB,KAAmB,CAAClkB,UAAW6X,EAAQkM,WAExC7jB,eAAC2jB,GAAQ,CAAA5jB,SAAA,CACTd,cAAC2Y,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAC1BC,eAAC6X,KAAW,CAAA9X,SAAA,CACRd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,wCAKhDd,cAAC+kB,KAAmB,CAAClkB,UAAW6X,EAAQkM,WAExC5kB,cAAC2Y,KAAI,CAAC9X,UAAW6X,EAAQhF,KAAK5S,SAC1BC,eAAC6X,KAAW,CAAA9X,SAAA,CACRd,cAAC6Y,KAAU,CAAChY,UAAW6X,EAAQjK,MAAOR,MAAM,gBAAgB6K,cAAY,EAAAhY,SAAC,WAGzEd,cAAC6Y,KAAU,CAACE,QAAQ,KAAKC,UAAU,KAAIlY,SAAC,sCAS5D,E,qBCrFMkkB,GAAQxlB,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,0CAI1BmjB,GAAW5iB,IAAOY,IAAGhB,QAAAH,YAAA,2KAYrBojB,GAAW7iB,IAAOY,IAAGf,QAAAJ,YAAA,+DAOrB+N,GAASxN,IAAOY,IAAGd,QAAAL,YAAA,6BAIjBgmB,GAAkBzlB,YAAOM,EAAPN,CAAcE,QAAAT,YAAA,2TACxBR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,IAazBwmB,GAAmB1lB,YAAOM,EAAPN,CAAcK,QAAAZ,YAAA,yRACzBR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,IAavBymB,GAAQ3lB,IAAOY,IAAGiN,QAAApO,YAAA,2EAuMTmmB,GAlMD,SAAHzkB,GAA0D,IAArD0kB,EAAa1kB,EAAb0kB,cAAeC,EAAa3kB,EAAb2kB,cAAeC,EAAgB5kB,EAAhB4kB,iBACvCna,EAAgCC,oBAAS,GAAMC,EAAApG,YAAAkG,EAAA,GAAxC6O,EAAQ3O,EAAA,GAAEka,EAAWla,EAAA,GAC5ByD,EAAgC1D,oBAAS,GAAK2D,EAAA9J,YAAA6J,EAAA,GAAvC0W,EAAQzW,EAAA,GAAE0W,EAAW1W,EAAA,GAC5B4T,EAAgCvX,oBAAS,GAAKwX,EAAA3d,YAAA0d,EAAA,GAAvC+C,EAAQ9C,EAAA,GAAE+C,EAAW/C,EAAA,GAC5BG,EAAoC3X,oBAAS,GAAM4X,EAAA/d,YAAA8d,EAAA,GAA5C6C,EAAU5C,EAAA,GAAE6C,EAAa7C,EAAA,GAChC8C,EAAwB1a,mBAAS,GAAE2a,EAAA9gB,YAAA6gB,EAAA,GAA5BjM,EAAIkM,EAAA,GAAEC,EAAOD,EAAA,GACdE,EAAe,CACpBhkB,SAAW,SACXikB,UAAY,UAORC,EADO,CAAC,iCAAS,uEAAiB,kHACjB/W,KAAI,SAACgX,GACtB,OAAOrmB,cAAC6d,YAAQ,CACRC,YAAY,SACZwI,iBAAkB,IAClBC,aAAa,UACbC,kBAAmB,IACnBC,UAAWhB,EACXzjB,MAASkkB,EAAaplB,SAAEulB,GACpC,IAEHza,qBAAU,WACP8Q,YAAW,WACPgJ,GAAY,EAChB,GAAG,KACHhJ,YAAW,WACP8I,GAAY,EAChB,GAAG,IACN,GAAG,IAsCJ,OACIzkB,eAAAC,WAAA,CAAAF,SAAA,EACEmZ,GACDlZ,eAACqhB,GAAQ,CAAAthB,SAAA,CACTd,cAACgN,GAAM,IAAEhN,cAACgN,GAAM,IAChBjM,eAACikB,GAAK,CAAAlkB,SAAA,CAAEslB,EACRpmB,cAACgN,GAAM,IACHhN,cAAC6d,YAAQ,CACLC,YAAY,SACZwI,iBAAkB,IAClBC,aAAa,UACbC,kBAAmB,IACnBC,UAAWhB,EAAS3kB,SAEpBd,cAAC2kB,GAAS,YAIhB1K,IAAa4L,GAChB7lB,cAACqiB,GAAQ,CAAAvhB,SACLC,eAAA,OAAK0G,GAAG,QAAO3G,SAAA,CACXd,cAACgN,GAAM,IACPhN,cAAC6d,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAMC,aAAa,UAAUC,kBAAmB,IAAKC,UAAWd,EAAS7kB,SAC1HC,eAAA,OAAKF,UAAU,eAAcC,SAAA,CAC7BC,eAAA,OAAK0G,GAAG,WAAU3G,SAAA,CAAC,+GAAuBd,cAAA,SAAK,2FAAkBA,cAAA,SAAK,0IAClEe,eAAA,SAAO0G,GAAG,aAAY3G,SAAA,CAClBC,eAAA,MAAI0G,GAAG,QAAO3G,SAAA,CACVd,cAAA,MAAAc,SAAI,uBAGJd,cAAA,MAAAc,SACAd,cAAA,SAAOa,UAAU,WAAWc,KAAK,SAAS4H,SAzC/C,SAACsB,GACfwa,EAAcxa,EAAEoB,OAAOzF,MAC3B,EAuCsFoD,YAAY,SAE3E5J,cAAA,OAAKa,UAAU,WAAW4G,GAAG,QAAO3G,SAAC,kPAEzCC,eAAA,MAAI0G,GAAG,QAAO3G,SAAA,CACVd,cAAA,MAAAc,SAAI,iBAGJd,cAAA,MAAAc,SACAd,cAAA,SAAOa,UAAU,WAAWc,KAAK,SAAS4H,SA/C/C,SAACsB,GAChBya,EAAcza,EAAEoB,OAAOzF,MAC1B,EA6CsFoD,YAAY,SAE3E5J,cAAA,OAAKa,UAAU,WAAW4G,GAAG,QAAO3G,SAAC,6QAEzCC,eAAA,MAAI0G,GAAG,QAAO3G,SAAA,CACVd,cAAA,MAAAc,SAAI,mCAGJd,cAAA,MAAAc,SACAd,cAAA,SAAOa,UAAU,WAAWc,KAAK,SAAS4H,SArD9C,SAACsB,GAChB0a,EAAiB1a,EAAEoB,OAAOzF,MAC9B,EAmDuFoD,YAAY,SAE5E5J,cAAA,OAAKa,UAAU,WAAW4G,GAAG,QAAO3G,SAAC,ocAG7Cd,cAAA,OAAKyH,GAAG,WAAWrG,QAtEjB,WACbwkB,GAAY,GACZlJ,YAAW,WACRoJ,GAAc,EACjB,GAAG,IACP,EAiEoDhlB,SAAC,oDAKjD+kB,GACD9kB,eAAC8c,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAIxlB,SAAA,CACjDd,cAACgN,GAAM,IACXjM,eAAA,OAAKF,UAAU,KAAIC,SAAA,CACA,IAATgZ,GAAe/Y,eAAC8c,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAIxlB,SAAA,CACtEd,cAAA,OAAKyH,GAAG,OAAM3G,SAAC,UACfd,cAAA,OAAKyH,GAAG,QAAQhG,IAAKilB,KACrB1mB,cAAA,QAAMyH,GAAG,WAAU3G,SACfC,eAAA,MAAAD,SAAA,CACId,cAAA,MAAAc,SAAI,qLACJd,cAAA,MAAAc,SAAI,wFACJd,cAAA,MAAAc,SAAI,sPACJd,cAAA,MAAAc,SAAI,4PACJd,cAAA,MAAAc,SAAI,0KAID,IAATgZ,GAAe/Y,eAAC8c,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAIxlB,SAAA,CACtEd,cAAA,OAAKyH,GAAG,OAAM3G,SAAC,eACfd,cAAA,OAAKyH,GAAG,QAAQhG,IAAKklB,KACrB3mB,cAAA,QAAMyH,GAAG,WAAU3G,SACfC,eAAA,MAAAD,SAAA,CACId,cAAA,MAAAc,SAAI,mGACJd,cAAA,MAAAc,SAAI,wFACJd,cAAA,MAAAc,SAAI,oIACJd,cAAA,MAAAc,SAAI,maACJd,cAAA,MAAAc,SAAI,oMAID,IAATgZ,GAAe/Y,eAAC8c,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAIxlB,SAAA,CACtEd,cAAA,OAAKyH,GAAG,OAAM3G,SAAC,mBACfd,cAAA,OAAKyH,GAAG,QAAQhG,IAAKmlB,KACrB5mB,cAAA,QAAMyH,GAAG,WAAU3G,SACfC,eAAA,MAAAD,SAAA,CACId,cAAA,MAAAc,SAAI,mGACJd,cAAA,MAAAc,SAAI,mGACJd,cAAA,MAAAc,SAAI,oGACJd,cAAA,MAAAc,SAAI,mQACJd,cAAA,MAAAc,SAAI,8FAID,IAATgZ,GAAe/Y,eAAC8c,YAAQ,CAACC,YAAY,SAASwI,iBAAkB,IAAIxlB,SAAA,CACtEd,cAAA,OAAKyH,GAAG,OAAM3G,SAAC,cACfd,cAAA,OAAKyH,GAAG,QAAQhG,IAAKolB,KACrB7mB,cAAA,QAAMyH,GAAG,WAAU3G,SACfC,eAAA,MAAAD,SAAA,CACId,cAAA,MAAAc,SAAI,mGACJd,cAAA,MAAAc,SAAI,mGACJd,cAAA,MAAAc,SAAI,6HACJd,cAAA,MAAAc,SAAI,uLACJd,cAAA,MAAAc,SAAI,sMAIZC,eAACokB,GAAK,CAAArkB,SAAA,CACD+kB,GAAc9kB,eAACkkB,GAAe,CAAC7jB,QA9I/B,WAET6kB,EADU,IAATnM,EACO,EACM,IAATA,EACG,EACM,IAATA,EACG,EAEA,EACf,EAqIgEhZ,SAAA,CAACd,cAAC8mB,KAAkB,IAAE,+BACtEjB,GAAc9kB,eAACmkB,GAAgB,CAAC9jB,QAzJ/B,WAEV6kB,EADS,IAATnM,EACQ,EACM,IAATA,EACG,EACM,IAATA,EACG,EAEA,EACf,EAgJkEhZ,SAAA,CAAC,4BAAKd,cAACoZ,KAAgB,kBAM9F,E,sBCxPiB2N,IAfXC,GAAkB,2BACxBhiB,GAIIhC,GAAyB,0BAAyBiC,GAAAC,YAAAF,GAAA,GAHlDiiB,GAAchiB,GAAA,GACdiiB,GAAsBjiB,GAAA,GACtBkiB,GAAsBliB,GAAA,GAGbmiB,GAAgB9kB,YAAa2kB,IAAgB,SAAAtmB,GAAkB,MAAQ,CAChF8N,MAD8D9N,EAAL8N,MAEzD7H,SAFwEjG,EAARiG,SAGjE,IAGGygB,IAFwB/kB,YAAa0kB,IAEjB9jB,GAAkB+jB,IpDEpB,SAAH9f,GAAA,IAAKsH,EAAKtH,EAALsH,MAAO7H,EAAQO,EAARP,SAAQ,OACvCtC,GAAOM,KAAK,sBAAuB,CAAC6J,QAAO7H,YAAW,KoDDjD,SAAUmgB,KAAY,OAAAzjB,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzB,OADyBF,EAAAE,KAAA,EACnB+D,aAAWqf,GAAgBI,IAAmB,KAAD,mBAAA1jB,EAAAU,OAAA,GAAAwD,GAAA,CAGvD,I,sDAAMC,GAAe,CACjBwf,SAAU,KACVljB,MAAO,MAwBIkjB,GArBE5kB,aAAaC,GAAA,GAAAC,YAAAD,GAzBX,uBA2BG,SAAAE,GAAK,OAAIiF,EAAY,IAAAlF,YAAAD,GAClCskB,IAAiB,SAAApkB,GAAK,OAAA5C,wBAAA,GAChB4C,GAAK,IACRykB,SAAU,KACVljB,MAAO,MAAI,IACbxB,YAAAD,GACDukB,IAAyB,SAACrkB,EAAK8D,GAAA,IAAa2gB,EAAQ3gB,EAAjB5D,QAAO,OAAA9C,wBAAA,GACpC4C,GAAK,IACRykB,YAAQ,IACV1kB,YAAAD,GACDwkB,IAAyB,SAACtkB,EAAKkE,GAAA,IAAa3C,EAAK2C,EAAdhE,QAAO,OAAA9C,wBAAA,GACpC4C,GAAK,IACRuB,SAAK,IACPxB,YAAAD,GACDqkB,IAAkB,kBAAMlf,EAAY,IAAAnF,IAEzCmF,ICrCEiF,I,OAAUvN,IAAOY,IAAGpB,QAAAC,YAAA,kCAMpBsoB,GAAgB/nB,IAAOY,IAAGhB,QAAAH,YAAA,qJAU1BuoB,GAAgBhoB,YAAOM,EAAPN,CAAcH,QAAAJ,YAAA,qEACpBR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,IAGzBa,GAAeC,YAAOM,EAAPN,CAAcF,QAAAL,YAAA,0JACnBR,EAAQC,KAAK,GAEXD,EAAQC,KAAK,IAMzBsO,GAASxN,IAAOY,IAAGV,QAAAT,YAAA,+BAUnBwoB,IANOjoB,IAAOY,IAAGP,QAAAZ,YAAA,oEAMZO,IAAOY,IAAGiN,QAAApO,YAAA,mCAKjByc,GAAW,GACTxB,GAAU,SAACjW,GACfyX,GAAWzX,EACX6G,QAAQC,IAAI2Q,GACd,EACIvB,GAAa,GACbC,GAAa,GACbC,GAAgB,GACdgL,GAAgB,SAAC5K,GAEnBN,GADY,KAAVM,GAAoC,IAApBlK,SAASkK,GACd,GACNA,EAAQ,EACFlK,UAAUkK,GAEVlK,SAASkK,EAC1B,EACM6K,GAAgB,SAACoC,GAEnBtN,GADY,KAAVsN,GAAoC,IAApBnX,SAASmX,GACd,GACNA,EAAQ,EACFnX,UAAUmX,GAEVnX,SAASmX,EAC1B,EACMnC,GAAmB,SAACoC,GAEtBtN,GADe,KAAbsN,GAA0C,IAAvBpX,SAASoX,GACd,GACTA,EAAW,EACFpX,UAAUoX,GAEVpX,SAASoX,EAC7B,EA8IeC,GA5IW,WACxB,IAYIC,EAEAC,EAdEtc,EAAWC,cACjBC,EAAwCC,aAAY,SAAAhL,GAAA,IAAGqH,EAAIrH,EAAJqH,KAAMsC,EAAI3J,EAAJ2J,KAAI,MAAQ,CACvEhE,KAAM0B,EAAKhB,OACXgB,KAAMA,EACNC,UAAWD,EAAKC,UAChBqC,KAAMA,EAAKA,KACZ,IAL8BA,GAAnBoB,EAAJpF,KAAUoF,EAAJ1D,KAAe0D,EAATzD,UAAeyD,EAAJpB,MAM/Bc,EAAsCC,oBAAS,GAAMC,EAAApG,YAAAkG,EAAA,GAA9CoX,EAAWlX,EAAA,GAAEmX,EAAcnX,EAAA,GAClCyD,EAA0B1D,oBAAS,GAAK2D,EAAA9J,YAAA6J,EAAA,GAAjCgZ,EAAK/Y,EAAA,GAAEgZ,EAAQhZ,EAAA,GAClBiZ,EAAQ,EACR3N,EAAU,EACVC,EAAU,EAEV2N,EAAO,EAuCLC,EAAU,WACd1F,GAAe,GACfuF,GAAS,EACX,EAuDA,OAjDApc,qBAAU,WAkBR,OAjBI4W,GACF9F,YAAW,WACTW,SAASC,eAAe,cAAc3J,UAAY,EAChD0J,SAASC,eAAe,aAAa3J,UAAY,EACjD0J,SAASC,eAAe,cAAc3J,UAAY,EAClD0J,SAASC,eAAe,aAAa3J,UAAY,EACnDkU,EAAOjK,aAAY,WACjBqK,IACA1N,EAAUhK,SAAS0X,EAAM,IACzB5K,SAASC,eAAe,cAAc3J,UAAYpD,SAASgK,EAAQ,IACnE8C,SAASC,eAAe,aAAa3J,UAAY4G,EAAQ,GACzDD,EAAU/J,SAAS0X,EAAM,IACzB5K,SAASC,eAAe,cAAc3J,UAAYpD,SAAS+J,EAAQ,IACnE+C,SAASC,eAAe,aAAa3J,UAAY2G,EAAQ,EAC3D,GAAG,IACL,GAAG,KAEE,kBAAM6C,cAAc0K,EAAM,CACnC,IAEAjc,qBAAU,WAWR,OAVI4W,GACF9F,YAAW,WACToL,EAAQlK,aAAY,WAEL,OADbsK,IAEEA,EAAO,GACT7K,SAASC,eAAe,QAAQ3J,UAAYuU,CAC9C,GAAG,IACL,GAAG,KAEE,kBAAM/K,cAAc2K,EAAO,CACpC,IAEAlc,qBAAU,YACY,IAAhB4W,IACF9F,YAAW,WACTW,SAASC,eAAe,SAAS3J,UAAY,QAC/C,GAAG,MACH+I,YAAW,WACTW,SAASC,eAAe,SAAS3J,UAAY,QAC/C,GAAG,MACH+I,YAAW,WACTW,SAASC,eAAe,SAAStb,MAAMomB,WAAW,QACpD,GAAG,KAEP,IAGEpoB,cAAAgB,WAAA,CAAAF,SACAC,eAAC0mB,GAAE,CAAA3mB,SAAA,CACFinB,GAAShnB,eAAA,OAAAD,SAAA,CAAKd,cAAColB,GAAK,CAACC,cAAeA,GAAeC,cAAeA,GAAeC,iBAAkBA,KAAmBvlB,cAACgN,GAAM,IAAEhN,cAACT,GAAY,CAAC6B,QAAS+mB,EAAQrnB,SAAC,oBAC7J0hB,GACDzhB,eAACgM,GAAO,CAAAjM,SAAA,CACNd,cAACgN,GAAM,IACPjM,eAAA,OAAK0G,GAAG,QAAO3G,SAAA,CACbd,cAAA,OAAKyH,GAAG,WACRzH,cAAA,OAAKyH,GAAG,cACR1G,eAAA,OAAK0G,GAAG,aAAY3G,SAAA,CACpBd,cAAA,OAAKyH,GAAG,eAAmBzH,cAAA,OAAKyH,GAAG,cACnCzH,cAAA,OAAKyH,GAAG,eAAmBzH,cAAA,OAAKyH,GAAG,cACnCzH,cAAA,OAAKyH,GAAG,SACRzH,cAAA,OAAKyH,GAAG,aAERzH,cAAA,OAAKyH,GAAG,oBAEVzH,cAAC4Z,GAAI,CAACM,QAAWA,GAASC,WAAYA,GAAYC,WAAYA,GAAYC,cAAeA,KAAgBra,cAACgN,GAAM,IAAEhN,cAACT,GAAY,CAAC6B,QA9GrH,WACb,IAAoB,IAAhBohB,EAAsB,CACxB,IAEM6F,EAFQhL,SAASiL,cAAc,SACXC,UACCC,YAC3BH,EAAO,GAAGhkB,OACVgkB,EAAOI,SAAQ,SAAAC,GAAK,OAAIA,EAAMrkB,MAAM,GACtC,CACAoe,GAAe,GACfnY,EAAKgZ,EAAI2E,EACTA,GAAc,GACd3d,EAAKqe,EAAIC,OAAOX,EAAMY,QAAQ,IAC9B,IAAMjiB,EAAW0D,EAAK1D,SAChBkiB,EAAYF,QAAQte,EAAKqe,EAAIre,EAAKlD,WAAWyhB,QAAQ,IAE3Drd,EAAS4b,GAAc,CAAC3Y,MAAOnE,EAAKqe,EAAG/hB,SAAWA,KAiBlD4E,EAAStE,GAAgB,CAAEN,SAAWA,EAAUQ,UAAW0hB,EAAWtb,MAflEsb,EAAY,IACH,eACJA,GAAa,KAAOA,EAAY,IAC5B,eACJA,GAAa,KAAOA,EAAY,KAC5B,eACJA,GAAa,MAAQA,EAAY,KAC7B,eACJA,GAAa,MAAQA,EAAY,KAC7B,eACJA,GAAa,MAAQA,EAAY,KAC7B,eAEA,iBAGjB,EA6EwJhoB,SAAC,qBAElJinB,IAAUvF,GACbzhB,eAAA,OAAAD,SAAA,CACEd,cAACuiB,GAAK,CAAC7G,SAAUA,GAAU1Z,MAAQ,CAACuV,OAAS,UAC7CxW,eAACwmB,GAAa,CAAAzmB,SAAA,CAACd,cAACwnB,GAAa,CAACpmB,QAAS+mB,EAAQrnB,SAAC,6BAAoB,IAACd,cAACwnB,GAAa,CAACpmB,QA7E3E,WACbic,SAAS5M,SAASuB,KAAO,OAC3B,EA2E0GlR,SAAC,iCAK7G,EC/NMioB,GAAavpB,IAAOY,IAAGpB,QAAAC,YAAA,0EAoBd+pB,GAhBC,WACZ,OACIjoB,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACkS,KAAM,CAAApR,SACHd,cAAA,SAAAc,SAAO,YAEXC,eAACgoB,GAAU,CAAAjoB,SAAA,CACXd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAAC4nB,GAAiB,CAAC5lB,MAAS,CAACinB,UAAY,YACzCjpB,cAACiS,GAAe,SAIxB,E,kBCpBMiX,GAAQ1pB,IAAOY,IAAGpB,QAAAC,YAAA,8FAMlBkqB,GAAQ3pB,IAAOY,IAAGhB,QAAAH,YAAA,6GAKZR,EAAQC,KAAK,IAqER0qB,GAlEG,WAChB,IACInlB,EAAO,CACTolB,SAAU,CACR,CACEplB,KAAM,CAAC,GAAI,IACX6d,gBAAiB,CACf,oBAGFwH,YAAa,CACX,oBAGFC,YAAa,GACbC,OAAS,MAIXC,EAAM,EAAGC,EAAW,EAAGC,EAAM,EAC3B9B,EAnBOlc,aAAY,SAAAhL,GAAO,MAAQ,CAAE2J,KAAV3J,EAAJ2J,KAAyBA,KAAM,IAmBzCA,KAAKlD,UACvBsiB,EAAW,IAAI7B,EACZA,EAAO,KAAOA,GAAQ,KACvB4B,EAAM,EACNC,EAAW,IAAI7B,GACPA,EAAM,KAAOA,GAAQ,MAC7B4B,EAAM,EACNC,EAAW,KAAK7B,GACRA,EAAO,MAAQA,GAAQ,MAC/B4B,EAAM,EACNC,EAAW,KAAK7B,GACRA,EAAO,MAAQA,GAAQ,MAC/B4B,EAAM,EACNC,EAAW,KAAK7B,GACRA,EAAO,MAAQA,GAAQ,MAC/B4B,EAAM,EACNC,EAAW,KAAK7B,GACRA,EAAO,OACf4B,EAAM,EACNC,EAAW,GAEH,GAAPD,GACDxlB,EAAKolB,SAAS,GAAGplB,KAAK,GAAI4jB,GAAM,IAAM4B,GAAQ,IAC9CxlB,EAAKolB,SAAS,GAAGplB,KAAK,GAAG,IAAM4jB,GAAM,IAAM4B,GAAQ,IACnDE,EAAMrF,KAAKsF,MAAM3lB,EAAKolB,SAAS,GAAGplB,KAAK,KACxB,GAAPwlB,IACRxlB,EAAKolB,SAAS,GAAGplB,KAAK,GAAK,EAC3B0lB,EAAM,OAIR,OACI5oB,eAACmoB,GAAK,CAAApoB,SAAA,CACJd,cAAC6pB,YAAQ,CAAC5lB,KAAMA,IAChBjE,cAAA,SACAe,eAAA,OAAKiB,MAAO,CAAC6f,cAAe,MAAM/gB,SAAA,CAChCC,eAACooB,GAAK,CAAAroB,SAAA,CAPD,mCAQLd,cAACmpB,GAAK,CAACnnB,MAAO,CAACiM,MAAM,WAAWnN,SAAE6oB,IAAY,QAC9C3pB,cAAA,SACC0pB,EAAS,GAAK3oB,eAACooB,GAAK,CAACnnB,MAAO,CAACE,SAAU,SAASpB,SAAA,CAAC,qDAClDC,eAACooB,GAAK,CAACnnB,MAAO,CAACE,SAAU,QAAS+L,MAAO,WAAWnN,SAAA,CAAC,IAAE4oB,KAAiB,kDAIpF,ECYeI,GA5FG,WAEd,IAAIC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAIvGC,EAHOhf,aAAY,SAAAhL,GAAM,MAAO,CAClC2J,KAD2B3J,EAAJ2J,KACZA,KACd,IACsBA,KAAKqgB,UACtBC,EAAO,GACb,GAAGD,EAAU,CAGb,IAFA,IAAME,EAAMF,EAAUzb,OAEd+M,EAAI,EAAIA,EAAG4O,EAAK5O,IAAK,CACzB,IAAM6O,EAAWH,EAAU1O,GAAG2O,KAC9BA,EAAK3O,GAAK6O,EAASC,MAAM,EAAE,EAC/B,CAEA,IAAI,IAAI9O,EAAE,EAAGA,EAAE4O,EAAK5O,IAChB,OAAQ2O,EAAK3O,IACT,IAAK,KACD8N,GAAOY,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACDub,GAAOW,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACDwb,GAAOU,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACDyb,GAAOS,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD0b,GAAOQ,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD2b,GAAOO,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD4b,GAAOM,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD6b,GAAOK,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD8b,GAAOI,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACD+b,GAAOG,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACDgc,GAAOE,EAAU1O,GAAGxN,MACpB,MACJ,IAAK,KACDic,GAAOC,EAAU1O,GAAGxN,MAIpC,CAEI,IAAIxK,EAAO,CACP+mB,OAAQ,CAAC,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,WAAO,WAAO,YAC7E3B,SAAU,CAAC,CACPnM,MAAO,mCACPjZ,KAAM,CAAC8lB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC9DnB,YAAa,EACbD,YAAa,uBACbxH,gBAAiB,yBACjBnC,MAAM,EACNsL,YAAa,MAgBrB,OACMjrB,cAACkrB,QAAI,CACLjnB,KAAQA,EACR0M,QAfQ,CACVwa,qBAAqB,EAErBC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAY,QAahC,E,oBC7EMxe,GAAUvN,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,iZAyB5BusB,GAAWhsB,IAAOY,IAAGhB,QAAAH,YAAA,6BAGrBwsB,GAAWjsB,IAAOY,IAAGf,QAAAJ,YAAA,uFAMrB6Y,GAAYC,aAAW,CAC3B2T,GAAI,CACFC,SAAU,OACV3T,SAAU,OACV4T,UAAW,MACX1T,UAAW,sCAEb2T,OAAQ,CACNF,SAAU,OACVC,UAAW,MACX5T,SAAU,OACV6M,WAAY,KACZ3M,UAAW,wCAGT4T,GAAa/T,aAAW,CAC5B2T,GAAI,CACFC,SAAU,OACVC,UAAW,OACX1T,UAAW,sCAEb2T,OAAQ,CACNF,SAAU,OACVC,UAAW,OACX/G,WAAY,KACZ3M,UAAW,wCAiFA6T,GA9EA,SAAHprB,GAAUA,EAALgR,MAAY,IAC3BvG,EAAsBC,mBAAS,6BAAQC,EAAApG,YAAAkG,EAAA,GAAhCoY,EAAGlY,EAAA,GAAE0gB,EAAM1gB,EAAA,GACVhB,EAASqB,aAAY,SAAAhF,GAAO,MAAQ,CAAE2D,KAAV3D,EAAJ2D,KAAyBA,KAAM,IAAvDA,KACFoO,EAAUZ,KACVmU,EAAcH,KACdI,EAAUC,aAAc,qBACxBC,EAASF,EAAU,SAAW,KAC9BG,EAAQH,EAAU,GAAK,EACvBI,EAAaJ,EAAU,GAAK,GAYlC,OAXAphB,QAAQC,IAAIqhB,GACZxgB,qBAAU,WACR,IAAI2gB,EAAKjiB,EAAKkD,MACL,gBAAN+e,EAAYP,EAAO,mCACR,gBAANO,EAAYP,EAAO,sBACb,gBAANO,EAAaP,EAAO,6BACd,gBAANO,EAAaP,EAAO,mCACd,gBAANO,EAAaP,EAAO,aACd,gBAANO,GAAaP,EAAO,4BAC9B,GAAG,CAAC1hB,IAGFvJ,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACkS,KAAM,CAAApR,SACLd,cAAA,SAAAc,SAAO,cAETd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAAA,SAAKA,cAAA,SAAKA,cAAA,SAEVA,cAAC+M,GAAO,CAAAjM,SACNC,eAACyrB,KAAI,CAACC,WAAS,EAACC,QAAS,EAAE5rB,SAAA,CAC1Bd,cAACwsB,KAAI,CAACG,MAAI,EAACC,GAAMP,EAAMvrB,SACtBC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQ0T,GAASrT,QAAQ,WAAUjY,SAAA,CAClDC,eAAC0qB,GAAQ,CAAA3qB,SAAA,CACPd,cAAA,KAAG+R,MAAM,yBACT/R,cAAA,QAAAc,SAAM,cAERd,cAACopB,GAAW,SAGdppB,cAACwsB,KAAI,CAACG,MAAI,EAACC,GAAMP,EAAMvrB,SACvBC,eAAC4X,KAAI,CAAC9X,UAAW6X,EAAQ0T,GAASrT,QAAQ,WAAUjY,SAAA,CAClDC,eAAC0qB,GAAQ,CAAA3qB,SAAA,CACPd,cAAA,KAAG+R,MAAM,sBACT/R,cAAA,QAAAc,SAAM,aAERd,cAAA,SAAKA,cAAA,SACLe,eAAA,MAAAD,SAAA,CACEC,eAAA,MAAAD,SAAA,CAAI,sBAAId,cAAA,MAAAc,SAAKwJ,EAAK1D,cAClB7F,eAAA,MAAAD,SAAA,CAAI,gBAAGC,eAAA,MAAAD,SAAA,CAAKwJ,EAAKkD,MAAM,IAAEgW,QACzBziB,eAAA,MAAAD,SAAA,CAAI,oCAAQC,eAAA,MAAAD,SAAA,CAAKwJ,EAAKlD,UAAU,mBAElCpH,cAAA,OAAKgC,MAAO,CAAC6qB,MAAO,QAASzd,QAAS,MAAMtO,SAC5Cd,cAACJ,IAAI,CAACG,GAAE,WAAAkD,OAAaqH,EAAKqE,KAAO3M,MAAO,CAACiM,MAAO,QAAShM,eAAgB,QAAQnB,SAC7Ed,cAACF,EAAM,CAAAgB,SAAC,oDAKdd,cAACwsB,KAAI,CAACG,MAAI,EAACC,GAAMN,EAAWxrB,SAC5BC,eAAC4X,KAAI,CAAC9X,UAAaorB,EAAYG,GAASrT,QAAQ,WAAUjY,SAAA,CACxDC,eAAC0qB,GAAQ,CAAA3qB,SAAA,CACPd,cAAA,KAAG+R,MAAM,4BACT/R,cAAA,QAAAc,SAAM,2BAERd,cAACwrB,GAAQ,CAAA1qB,SACPd,cAAC8pB,GAAS,gBAOlB9pB,cAACiS,GAAe,MAGpB,ECnJMlJ,GAAgBvJ,IAAOY,IAAGpB,QAAAC,YAAA,mIAGnBR,EAAQC,KAAK,IASpBsK,GAAcxJ,IAAOyJ,MAAK7J,QAAAH,YAAA,gQAGHR,EAAQC,KAAK,GAMXD,EAAQC,KAAK,IAStCyK,GAAsB3J,YAAOM,EAAPN,CAAcH,QAAAJ,YAAA,+BAGpCoK,GAAe7J,IAAOY,IAAGd,QAAAL,YAAA,6FA6ChB6tB,GAtCQ,SAAHnsB,GAA4C,IAAvC2F,EAAI3F,EAAJ2F,KAAMiD,EAAQ5I,EAAR4I,SAAUC,EAAQ7I,EAAR6I,SAAUpF,EAAKzD,EAALyD,MACzCqF,EAAO,wCACLa,EAASqB,aAAY,SAAAhF,GAAO,MAAQ,CAAE2D,KAAV3D,EAAJ2D,KAAyBA,KAAM,IAAvDA,KACV,OACEvJ,eAACgI,GAAa,CAAAjI,SAAA,CACZd,cAAA,MAAAc,SAAK2I,IACL1I,eAAA,QAAMyI,SAAUA,EAAS1I,SAAA,CACvBd,cAACgJ,GAAW,CACVU,aAAa,WACbC,KAAK,WACLC,YAAY,qBACZL,SAAUA,EACV/C,MAAQ8D,EAAOA,EAAK1D,SAAW,MAEjC5G,cAACgJ,GAAW,CACVU,aAAa,eACbC,KAAK,WACLC,YAAY,2BACZjI,KAAK,WACL4H,SAAUA,EACV/C,MAAOF,EAAKO,WAEZ7G,cAACgJ,GAAW,CACVU,aAAa,eACbC,KAAK,kBACLC,YAAY,wCACZjI,KAAK,WACL4H,SAAUA,EACV/C,MAAOF,EAAKyB,kBAEf3D,GAASpE,cAACqJ,GAAY,CAAAvI,SAAEsD,IACzBpE,cAACmJ,GAAmB,CAAChK,WAAS,EAAA2B,SACzB2I,SAKb,ECGiB0B,gBAjFE,SAAHxK,GAAmB,IAAdC,EAAOD,EAAPC,QACjBwK,EAA0BC,mBAAS,MAAKC,EAAApG,YAAAkG,EAAA,GAAjChH,EAAKkH,EAAA,GAAEC,EAAQD,EAAA,GAChBE,EAAWC,cACjBC,EAAuBC,aAAY,SAAAhF,GAAA,IAAGqB,EAAIrB,EAAJqB,KAAMsC,EAAI3D,EAAJ2D,KAAI,MAAQ,CACtDhE,KAAM0B,EAAKhB,OACXsD,KAAMA,EAAKA,KACZ,IAHOhE,EAAIoF,EAAJpF,KAAMgE,EAAIoB,EAAJpB,KAmEd,OA5BAsB,qBAAU,WACRJ,EAAS/E,GAAe,UAC1B,GAAG,CAAC+E,IAEJI,qBAAU,WACHtB,IACHQ,QAAQC,IAAI,6BACZgiB,MAAM,uIACNnsB,EAAQS,KAAK,KAkBf,GAAG,CAACT,EAAS0J,IAGbtK,cAAC8sB,GAAc,CACbnrB,KAAK,SACL2E,KAAMA,EACNiD,SAlEa,SAAAsB,GACf,IAAAmB,EAAwBnB,EAAEoB,OAAlBzF,EAAKwF,EAALxF,MAAOmD,EAAIqC,EAAJrC,KACf6B,EACEnF,GAAY,CACVC,KAAM,SACNC,IAAKoD,EACLnD,UAGN,EA0DIgD,SAvDa,SAAAqB,GACfA,EAAEqB,iBACF,IAAOrF,EAA6BP,EAA7BO,SAAUkB,EAAmBzB,EAAnByB,gBACXnB,EAAW0D,EAAK1D,SACtB,GAAG,CAACC,EAAUkB,GAAiBuE,SAAS,IACtCf,EAAS,wEADX,CAKE,GAAI1E,IAAakB,EAMjB,OALAwD,EAAS,qFACTC,EAASnF,GAAY,CAAEC,KAAM,SAAUC,IAAK,WAAYC,MAAO,WAC/DgF,EACEnF,GAAY,CAAEC,KAAM,SAAUC,IAAK,kBAAmBC,MAAO,MAIjEgF,EAASxE,GAAO,CAAEJ,WAAUC,cAC5B2E,EAAS7G,KAXT,CAYF,EAqCIP,MAAOA,GAGb,IC1Ea4oB,GARA,WACX,OACIhtB,cAAC+B,EAAY,CAAAjB,SACTd,cAACitB,GAAU,KAGvB,E,gCCqBiBC,IAxBjBloB,GAIIhC,GAAyB,kBAAiBiC,GAAAC,YAAAF,GAAA,GAH5CmoB,GAASloB,GAAA,GACTmoB,GAAiBnoB,GAAA,GACjBooB,GAAiBpoB,GAAA,GAGnBK,GAIItC,GAAyB,yBAAwBuC,GAAAL,YAAAI,GAAA,GAHnDgoB,GAAa/nB,GAAA,GACbgoB,GAAqBhoB,GAAA,GACrBioB,GAAqBjoB,GAAA,GAGjBkoB,GAAc,mBAEPC,GAAWprB,YAAa6qB,IAAW,SAAA1lB,GAAE,OAAIA,CAAE,IAC3CkmB,GAAarrB,YAAamrB,IAC1BG,GAAetrB,YAAagrB,IAAe,SAAA3sB,GAAqB,MAAQ,CACnF8I,KAD6D9I,EAAJ8I,KAEzD7C,SAFuEjG,EAARiG,SAG/Da,GAH2E9G,EAAF8G,GAI1E,IACKomB,GAAe3qB,GAAkBiqB,I9CtBf,SAAA1lB,GAAE,OAAInD,GAAOmG,IAAI,cAADxH,OAAewE,GAAM,I8CuBvDqmB,GAAmB5qB,GAAkBoqB,I9CIpB,SAAHnmB,GAAA,IAAKsC,EAAItC,EAAJsC,KAAM7C,EAAQO,EAARP,SAAUa,EAAEN,EAAFM,GAAE,OACzCnD,GAAOM,KAAK,sBAAuB,CAAC6E,OAAM7C,WAAUa,MAAK,I8CHpD,SAAUylB,KAAQ,OAAA5pB,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,OADuBF,EAAAE,KAAA,EACjB+D,aAAWulB,GAAWU,IAAc,KAAD,EACzC,OADyClqB,EAAAE,KAAA,EACnC+D,aAAW0lB,GAAeQ,IAAkB,KAAD,mBAAAnqB,EAAAU,OAAA,GAAAwD,GAAA,CAGnD,I,2BAAMC,GAAe,CACnBlD,KAAM,KACNR,MAAO,MAgCMQ,GA7BFlC,aAAaC,GAAA,GAAAC,YAAAD,GAErByqB,IAAoB,SAACvqB,EAAK8D,GAAA,IAAa/B,EAAI+B,EAAb5D,QAAO,OAAA9C,wBAAA,GACjC4C,GAAK,IACR+B,QAAI,IACJhC,YAAAD,GACD0qB,IAAoB,SAACxqB,EAAKkE,GAAA,IAAa3C,EAAK2C,EAAdhE,QAAO,OAAA9C,wBAAA,GACjC4C,GAAK,IACRuB,SAAK,IACLxB,YAAAD,GACD2qB,IAAgB,SAAAzqB,GAAK,OAAA5C,wBAAA,GACjB4C,GAAK,IACRuB,MAAO,MAAI,IACXxB,YAAAD,GAED4qB,IAAwB,SAAC1qB,EAAKoE,GAAA,IAAarC,EAAIqC,EAAblE,QAAO,OAAA9C,wBAAA,GACrC4C,GAAK,IACR+B,QAAI,IACJhC,YAAAD,GAED6qB,IAAwB,SAAC3qB,EAAKsE,GAAA,IAAa/C,EAAK+C,EAAdpE,QAAO,OAAA9C,wBAAA,GACrC4C,GAAK,IACRuB,SAAK,IACLxB,YAAAD,GACD8qB,IAAc,kBAAM3lB,EAAY,IAAAnF,IAEnCmF,IC7DIimB,GAAkBvuB,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,+BAGpC+uB,GAAWxuB,IAAOY,IAAGhB,QAAAH,YAAA,2LACER,EAAQC,KAAK,IAWpCuvB,GAAczuB,IAAOY,IAAGf,QAAAJ,YAAA,iDAEnBR,EAAQC,KAAK,IAoCTwvB,GAjCI,SAAHvtB,GAAyD,IAAnDiE,EAAIjE,EAAJiE,KAAMR,EAAKzD,EAALyD,MAAO+pB,EAAMxtB,EAANwtB,OAAQ1rB,EAAO9B,EAAP8B,QAAS2rB,EAAaztB,EAAbytB,cAElD,GAAGhqB,EACG,OAAGA,EAAMX,UAAsC,MAA1BW,EAAMX,SAAS4I,OACzBrM,cAAC+tB,GAAe,CAAAjtB,SAAC,gFAErBd,cAAC+tB,GAAe,CAAAjtB,SAAC,+BAG5B,GAAI2B,IAAYmC,EACZ,OAAO,KAEX,IAAQ6J,EAAqC7J,EAArC6J,MAAOC,EAA8B9J,EAA9B8J,KAAMpE,EAAwB1F,EAAxB0F,KAAM0D,EAAkBpJ,EAAlBoJ,cAC7B,OAAImgB,EAIFptB,eAACgtB,GAAe,CAAAjtB,SAAA,CACdC,eAACitB,GAAQ,CAAAltB,SAAA,CACPd,cAAA,MAAAc,SAAK2N,IACLzO,cAAC8N,GAAO,CACJlH,SAAY0D,EAAK1D,SACjBmH,UAAaogB,EAAO3gB,MACpBQ,cAAiBA,EACjBH,cAAY,OAGjBugB,EACDpuB,cAACiuB,GAAW,CAACI,wBAAyB,CAAEC,OAAQ5f,QAd3C,IAiBX,ECrDM6f,GAAa/uB,IAAOY,IAAGpB,QAAAC,YAAA,gNAYvBuvB,GAAgBhvB,IAAOY,IAAGhB,QAAAH,YAAA,qTAmB1BM,GAAeC,YAAOM,EAAPN,CAAcH,QAAAJ,YAAA,sEAiCpBwvB,GA1BE,SAAH9tB,GAQP,IAPL+tB,EAAO/tB,EAAP+tB,QACAjgB,EAAK9N,EAAL8N,MACAkgB,EAAWhuB,EAAXguB,YAAWC,EAAAjuB,EACXkuB,mBAAW,IAAAD,EAAG,eAAIA,EAAAE,EAAAnuB,EAClBouB,kBAAU,IAAAD,EAAG,eAAIA,EACjBE,EAASruB,EAATquB,UACA1Z,EAAQ3U,EAAR2U,SAEA,OAAKoZ,EAEH1uB,cAACuuB,GAAU,CAAAztB,SACTC,eAACytB,GAAa,CAAA1tB,SAAA,CACZd,cAAA,MAAAc,SAAK2N,IACLzO,cAAA,KAAAc,SAAI6tB,IACJ5tB,eAAA,OAAKF,UAAU,UAASC,SAAA,CACtBd,cAACT,GAAY,CAAC6B,QAASkU,EAASxU,SAAEiuB,IAClC/uB,cAACT,GAAY,CAACZ,MAAI,EAACyC,QAAS4tB,EAAUluB,SACnC+tB,YATU,IAevB,EClDeI,GAbQ,SAAHtuB,GAA0C,IAApC+tB,EAAO/tB,EAAP+tB,QAASM,EAASruB,EAATquB,UAAW1Z,EAAQ3U,EAAR2U,SAC5C,OACEtV,cAACyuB,GAAQ,CACPC,QAASA,EACTjgB,MAAM,kCACNkgB,YAAY,0FACZE,YAAY,eACZG,UAAWA,EACX1Z,SAAUA,GAGhB,ECTM4Z,GAAyB1vB,IAAOY,IAAGpB,QAAAC,YAAA,0GAOnCkwB,GAAe3vB,IAAOC,OAAML,QAAAH,YAAA,oRAGvBR,EAAQC,KAAK,GAOND,EAAQC,KAAK,GAClBD,EAAQG,KAAK,IAgCXwwB,GAzBW,SAAHzuB,GAA8B,IAAxB0uB,EAAM1uB,EAAN0uB,OAAQC,EAAQ3uB,EAAR2uB,SACnClkB,EAA0BC,oBAAS,GAAMC,EAAApG,YAAAkG,EAAA,GAAlCmkB,EAAKjkB,EAAA,GAAEkkB,EAAQlkB,EAAA,GAatB,OACEvK,eAAAC,WAAA,CAAAF,SAAA,CACEC,eAACmuB,GAAsB,CAAApuB,SAAA,CACrBd,cAACmvB,GAAY,CAAC/tB,QAASiuB,EAAOvuB,SAAC,iBAC/Bd,cAACmvB,GAAY,CAAC/tB,QAfE,WACpBouB,GAAS,EACX,EAa2C1uB,SAAC,oBAExCd,cAACivB,GAAc,CAACP,QAASa,EAAOP,UAXlB,WACdQ,GAAS,GACTF,GACJ,EAQ4Dha,SAd3C,WACfka,GAAS,EACX,MAeF,E,sBC/BiBC,IAdXC,GAAe,qBACrB1qB,GAIIhC,GAAyB,oBAAmBiC,GAAAC,YAAAF,GAAA,GAH5C2qB,GAAU1qB,GAAA,GACV2qB,GAAkB3qB,GAAA,GAClB4qB,GAAkB5qB,GAAA,GAGT6qB,GAAYxtB,YAAaqtB,IAAY,SAAAhvB,GAAW,MAAQ,CACjEiG,SADyDjG,EAARiG,SAEpD,IACYmpB,GAAcztB,YAAaotB,IAElCM,GAAgB9sB,GAAkBysB,IlEAf,SAAH1oB,GAAA,IAAML,EAAQK,EAARL,SAAQ,OAClCtC,GAAOoD,MAAM,kBAAmB,CAAEd,YAAY,IkECzC,SAAU6oB,KAAS,OAAAnsB,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtB,OADsBF,EAAAE,KAAA,EAChB+D,aAAW+nB,GAAYK,IAAe,KAAD,mBAAArsB,EAAAU,OAAA,GAAAwD,GAAA,CAG/C,I,iCAAMC,GAAe,CACjBmoB,UAAW,KACX7rB,MAAO,MAwBIoJ,GArBD9K,aAAaC,GAAA,GAAAC,YAAAD,GAxBR,oBA0BG,SAAAE,GAAK,OAAIiF,EAAY,IAAAlF,YAAAD,GAClCgtB,IAAa,SAAA9sB,GAAK,OAAA5C,wBAAA,GACZ4C,GAAK,IACRotB,UAAW,KACX7rB,MAAO,MAAI,IACbxB,YAAAD,GACDitB,IAAqB,SAAC/sB,EAAK8D,GAAA,IAAaspB,EAAStpB,EAAlB5D,QAAO,OAAA9C,wBAAA,GAChC4C,GAAK,IACRotB,aAAS,IACXrtB,YAAAD,GACDktB,IAAqB,SAAChtB,EAAKkE,GAAA,IAAa3C,EAAK2C,EAAdhE,QAAO,OAAA9C,wBAAA,GAChC4C,GAAK,IACRuB,SAAK,IACPxB,YAAAD,GACD+sB,IAAe,kBAAM5nB,EAAY,IAAAnF,IAEtCmF,ICAWqD,gBAvCa,SAAHxK,GAA4B,IAAtBgR,EAAKhR,EAALgR,MAAO/Q,EAAOD,EAAPC,QAEpCsvB,EAA6Bve,EAAMC,OAA3Bue,EAAMD,EAANC,OAAQvpB,EAAQspB,EAARtpB,SACV4E,EAAWC,cACjBC,EAA+CC,aAAY,SAAAhF,GAAA,IAAG/B,EAAI+B,EAAJ/B,KAAMnC,EAAOkE,EAAPlE,QAAS6H,EAAI3D,EAAJ2D,KAAMkD,EAAK7G,EAAL6G,MAAK,MAAQ,CAC9F5I,KAAMA,EAAKA,KACXR,MAAOQ,EAAKR,MACZ3B,QAASA,EAAQ,kBACjB6H,KAAMA,EAAKA,KACX6jB,OAAQ3gB,EAAMyiB,UACf,IANOrrB,EAAI8G,EAAJ9G,KAAMR,EAAKsH,EAALtH,MAAO3B,EAAOiJ,EAAPjJ,QAAS6H,EAAIoB,EAAJpB,KAAM6jB,EAAMziB,EAANyiB,OAQpCviB,qBAAU,WAIR,OAHAJ,EAASkiB,GAASyC,IAClB3kB,EAASskB,GAAU,CAAClpB,cAEb,WACL4E,EAASmiB,MACTniB,EAASukB,KACX,CACF,GAAG,CAACvkB,EAAU2kB,IAEd,IAKMb,EAAQ,eAAAvoB,EAAAqpB,aAAA9sB,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EpDLO4D,EoDOH0oB,EpDPS7rB,GAAO+rB,OAAO,cAADptB,OAAewE,IoDO7B,KAAD,EACxB7G,EAAQS,KAAK,aAAasC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE1BmH,QAAQC,IAAGpH,EAAAQ,IAAI,wBAAAR,EAAAU,OpDVK,IAAAoD,CoDUL,GAAAjE,EAAA,kBAElB,kBAPa,OAAAuD,EAAAsP,MAAA,KAAAC,UAAA,KAQRga,GAAWhmB,GAAQA,EAAKqE,QAAU/J,GAAQA,EAAK0F,KAAKqE,KAC1D,OAAO3O,cAACkuB,GAAU,CAACtpB,KAAMA,EAAMnC,QAASA,EAAS2B,MAAOA,EAAO+pB,OAAQA,EAAQC,cAAekC,GAAWtwB,cAACovB,GAAiB,CAACC,OAd7G,WACX7jB,EAASiJ,GAAgB7P,IACzBhE,EAAQS,KAAK,SACjB,EAW4IiuB,SAAUA,KACxJ,ICzCM1hB,GAAepO,IAAOY,IAAGpB,QAAAC,YAAA,+kBAC3B,SAAAC,GAAK,OACLA,EAAM2O,cACN9O,YAAGK,QAAAH,YAAA,sCAEF,GACMR,EAAQC,KAAK,GAGXD,EAAQC,KAAK,IAMpB6xB,GAAM/wB,IAAOY,IAAGf,QAAAJ,YAAA,mDAqBLuxB,GAhBD,SAAH7vB,GAAmE,IAA7DiG,EAAQjG,EAARiG,SAAU6C,EAAI9I,EAAJ8I,KAAMuE,EAAarN,EAAbqN,cAAeH,EAAYlN,EAAZkN,aAAsBlN,EAAR6N,SAE5D,OACExO,cAAC4N,GAAY,CAACC,aAAcA,EAAa/M,SACvCC,eAAA,QAAAD,SAAA,CACEC,eAAA,KAAAD,SAAA,CACG8F,EACD7F,eAAA,QAAAD,SAAA,CAAM,IAAE,IAAIoN,KAAKF,GAAeG,2BAElCnO,cAACuwB,GAAG,CAAAzvB,SAAE2I,QAKd,EClCI6E,GAAgB9O,IAAOY,IAAGpB,QAAAC,YAAA,4YASJR,EAAQC,KAAK,GAO1BD,EAAQC,KAAK,IAQtB6P,GAAW,SAAH5N,GAAsB,IAAhB8vB,EAAQ9vB,EAAR8vB,SACRhnB,EAA8BgnB,EAA9BhnB,KAAMa,EAAwBmmB,EAAxBnmB,KAAM0D,EAAkByiB,EAAlBziB,cACpB,OACEhO,cAACsO,GAAa,CAAAxN,SACZd,cAACwwB,GAAO,CACN5pB,SAAW0D,EACXb,KAAMA,EACNuE,cAAe,IAAIE,KAAKF,MAIlC,EAmBe0iB,GAjBM,SAAH/pB,GAAoB,IAAb/B,EAAI+B,EAAJ/B,KACrBwG,EAAsBC,mBAAS,IAAGC,EAAApG,YAAAkG,EAAA,GAA3BulB,EAAGrlB,EAAA,GAAEslB,EAAMtlB,EAAA,GAMlB,OAJAM,qBAAU,WACRglB,EAAOhsB,EAAK6rB,SACd,GAAG,CAAC7rB,IAGF7D,eAAA,OAAAD,SAAA,CACG6vB,GAAMA,EAAIthB,KAAI,SAAAohB,GAAQ,OACrBzwB,cAACuO,GAAQ,CAACkiB,SAAUA,GAAeA,EAAS9hB,IAAO,IAEpDgiB,IAAQA,EAAIzhB,QAAUlP,cAAA,OAAKgC,MAAO,CAACiW,OAAO,QAAShK,MAAM,QAAS/L,SAAS,UAAUpB,SAAC,mDAG/F,EChDM+vB,GAAQrxB,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,6FACJR,EAAQC,KAAK,IAInC8xB,GAAUhxB,IAAOY,IAAGhB,QAAAH,YAAA,0GAQpBuR,GAAUhR,YAAOM,EAAPN,CAAcH,QAAAJ,YAAA,gVAQZR,EAAQG,KAAK,GAGTH,EAAQG,KAAK,IAQ7BkyB,GAAQtxB,IAAOyJ,MAAK3J,QAAAL,YAAA,+KA2DXkM,gBAjDU,SAAHxK,GAAWA,EAALgR,MAAa,IACrCvG,EAAwCC,mBAAS,IAAGC,EAAApG,YAAAkG,EAAA,GAA7C2lB,EAAYzlB,EAAA,GAAE0lB,EAAe1lB,EAAA,GACpCyD,EAA0B1D,mBAAS,CAAC,GAAE2D,EAAA9J,YAAA6J,EAAA,GAA/BkiB,EAAOjiB,EAAA,GAAEkiB,EAAMliB,EAAA,GACtB4T,EAA0BvX,mBAAS,GAAEwX,EAAA3d,YAAA0d,EAAA,GAA9BuO,EAAOtO,EAAA,GAAE+N,EAAM/N,EAAA,GACtBnX,EAAqBC,aAAY,SAAAhF,GAAA,IAAG2D,EAAI3D,EAAJ2D,KAAM1F,EAAI+B,EAAJ/B,KAAI,MAAQ,CAClD0F,KAAMA,EAAKA,KACX1F,KAAMA,EAAKA,KACd,IAHM0F,EAAIoB,EAAJpB,KAAM1F,EAAI8G,EAAJ9G,KAIP4G,EAAWC,cACXjC,EAAW,SAACqB,GACdA,EAAEqB,iBACF,IAAMtF,EAAW0D,EAAK1D,SAChB+H,EAAM/J,EAAK+J,IACjBnD,EAASoiB,GAAa,CAACnkB,KAAMsnB,EAAcnqB,SAAUA,EAAUa,GAAIkH,KACnEqiB,EAAgB,GAEpB,EACAplB,qBAAU,WACHhH,IACCssB,EAAOtsB,GACPgsB,EAAOhsB,EAAK6rB,SAASvhB,QAE7B,GAAG,CAACtK,IAKJ,OACI7D,eAAC8vB,GAAK,CAAA/vB,SAAA,CACFC,eAAA,OAAKiB,MAAO,CAACiW,OAAO,QAAShK,MAAM,QAAS/L,SAAS,UAAUpB,SAAA,CAAC,gBAAIqwB,KACpEpwB,eAAA,OAAAD,SAAA,CACAd,cAACwwB,GAAO,CAAA1vB,SACJC,eAAA,QAAMiB,MAAO,CAAEqW,QAAS,OAAQf,MAAO,OAAQC,OAAQ,SAAW/N,SAAUA,EAAS1I,SAAA,CACrFd,cAAC8wB,GAAK,CACFvnB,SAXK,SAACsB,GAClBmmB,EAAgBnmB,EAAEoG,cAAczK,MACpC,EAUgBA,MAAOuqB,EACPnnB,YAAY,sDAEhB5J,cAAA,cAGJA,cAAA,SACAA,cAACwQ,GAAO,CAACxO,MAAO,CAAC6qB,MAAO,SAAUzrB,QAASoI,EAAS1I,SAAC,iCAErDmwB,GAAWjxB,cAAC0wB,GAAY,CAAC9rB,KAAMqsB,MAI3C,IC7EeG,GAfE,WACb,OACIrwB,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACkS,KAAM,CAAApR,SACHd,cAAA,SAAAc,SAAO,0BAEXd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAACqxB,GAAmB,IACpBrxB,cAACsxB,GAAgB,IACjBtxB,cAACiS,GAAe,MAGxB,E,8BCZMsf,I,OAAQ/xB,YAAOkN,GAAPlN,CAAkBR,QAAAC,YAAA,uDAK1B+N,GAASxN,IAAOY,IAAGhB,QAAAH,YAAA,2BAInBuyB,GAAUhyB,IAAOY,IAAGf,QAAAJ,YAAA,2BA6BXwyB,GAzBE,WACf,IAAQnnB,EAASqB,aAAY,SAAAhL,GAAO,MAAQ,CAC1C2J,KADkC3J,EAAJ2J,KACnBA,KACZ,IAFOA,KAIN,OACIvJ,eAAAC,WAAA,CAAAF,SAAA,CACAd,cAACgN,GAAM,IACPhN,cAACuxB,GAAK,CAAAzwB,SACFd,cAAC0xB,KAAY,CACbC,QAAS,CAAEC,KAAeC,MAC1BC,YAAc,eACdC,OAAUznB,EAAKqgB,UACfqH,cAAgB,EAChBC,cAAgB,UAChBC,cAAgB,QAChBC,aAAe,QACfC,qBAAuB,cAG3BpyB,cAACwxB,GAAO,MAGhB,ECzBiBa,OAbjB,WACI,OACEtxB,eAAAC,WAAA,CAAAF,SAAA,CACEd,cAACkS,KAAM,CAAApR,SACLd,cAAA,SAAAc,SAAO,eAETd,cAACyN,GAAe,IAChBzN,cAACmS,GAAY,IACbnS,cAACsyB,GAAiB,IAClBtyB,cAACiS,GAAe,MAGtB,ECiBasgB,OArBf,WACE,OACExxB,eAAAC,WAAA,CAAAF,SAAA,CACEd,cAACkS,KAAM,CAAApR,SACLd,cAAA,SAAAc,SAAO,8BAETd,cAACwyB,IAAK,CAACxZ,UAAWyZ,EAAUC,KAAM,CAAC,cAAe,KAAMC,OAAK,IAC7D3yB,cAACwyB,IAAK,CAACxZ,UAAW7M,GAAWumB,KAAK,WAClC1yB,cAACwyB,IAAK,CAACxZ,UAAWzM,GAAcmmB,KAAK,cACrC1yB,cAACwyB,IAAK,CAACxZ,UAAWtY,GAAcgyB,KAAM,CAAC,uBAAwB,eAC/D1yB,cAACwyB,IAAK,CAACxZ,UAAWtD,GAAWgd,KAAK,WAClC1yB,cAACwyB,IAAK,CAACxZ,UAAWoY,GAAUsB,KAAK,wBACjC1yB,cAACwyB,IAAK,CAACxZ,UAAW4Z,GAAUF,KAAK,UACjC1yB,cAACwyB,IAAK,CAACxZ,UAAWgQ,GAAS0J,KAAK,aAChC1yB,cAACwyB,IAAK,CAACxZ,UAAW+S,GAAQ2G,KAAK,YAC/B1yB,cAACwyB,IAAK,CAACxZ,UAAW6Z,GAAcH,KAAK,cACrC1yB,cAACwyB,IAAK,CAACxZ,UAAWgU,GAAQ0F,KAAK,kBAGrC,ECtBoBI,QACa,cAA7BxX,OAAO7K,SAASsiB,UAEe,UAA7BzX,OAAO7K,SAASsiB,UAEhBzX,OAAO7K,SAASsiB,SAASphB,MACvB,2D,uDCISqhB,IAAV,SAAUA,KAAQ,OAAA1vB,cAAAI,MAAC,SAADC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB,OADuBF,EAAAE,KAAA,EACjBovB,aAAI,CAACpuB,KAAYkF,KAAY+J,KAAaoZ,KAAY5d,KAAamgB,KAAa1I,OAAiB,KAAD,mBAAApjB,EAAAU,OAAA,GAAAwD,GAAA,CAGzFqrB,OAfKC,2BAAgB,CAClCnrB,QACAvF,WACA6H,QACAyK,SACAnQ,QACAiK,SACArB,SACA8Z,cCPa8L,GATK,WAClB,IAAQC,EAAaC,cAAbD,SAMR,OAJAznB,qBAAU,WACR0P,OAAOiY,SAAS,EAAG,EACrB,GAAG,CAACF,IAEG,IACT,ECMMG,I,cAAiBC,gBACjBC,GAAQC,uBACZT,GACAU,+BAAoBC,2BAAgBL,MAmBtCA,GAAeM,IAAId,IAdnB,WACE,IACE,IAAM1oB,EAAOK,aAAaopB,QAAQ,QAClC,IAAKzpB,EACH,OAEFopB,GAAMloB,SAASnB,GAAYC,IAC3BopB,GAAMloB,SAASjB,KACjB,CAAE,MAAOM,GACPC,QAAQC,IAAI,8BACd,CACF,CAIAipB,GAGAC,IAASC,OACPl0B,cAACm0B,IAAQ,CAACT,MAAOA,GAAM5yB,SACrBC,eAACqzB,IAAa,CAAAtzB,SAAA,CACdd,cAACozB,GAAW,IACVpzB,cAACq0B,KAAc,CAAAvzB,SACbd,cAACuyB,GAAG,WAIVlV,SAASC,eAAe,SH6ElB,kBAAmBgX,WACrBA,UAAUC,cAAcC,MAAMxQ,MAAK,SAAAyQ,GACjCA,EAAaC,YACf,G","file":"static/js/main.348a402d.chunk.js","sourcesContent":["// source: https://yeun.github.io/open-color/\nconst palette = {\n    gray: [\n      '#f8f9fa',\n      '#f1f3f5',\n      '#e9ecef',\n      '#dee2e6',\n      '#ced4da',\n      '#adb5bd',\n      '#868e96',\n      '#495057',\n      '#343a40',\n      '#212529'\n    ],\n    cyan: [\n      '#e3fafc',\n      '#c5f6fa',\n      '#99e9f2',\n      '#66d9e8',\n      '#3bc9db',\n      '#22b8cf',\n      '#15aabf',\n      '#1098ad',\n      '#0c8599',\n      '#0b7285'\n    ],\n    blue: [\n      '#e7f5ff',\n      '#d0ebff',\n      '#a5d8ff',\n      '#74c0fc',\n      '#4dabf7',\n      '#339af0',\n      '#228be6',\n      '#1c7ed6',\n      '#1971c2',\n      '#1864ab'\n    ],\n    indigo: [\n      '#edf2ff',\n      '#dbe4ff',\n      '#bac8ff',\n      '#91a7ff',\n      '#748ffc',\n      '#5c7cfa',\n      '#4c6ef5',\n      '#4263eb',\n      '#3b5bdb',\n      '#364fc7'\n    ]\n  };\n  \n  export default palette;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n    color: white;\n    text-decoration: none;\n  }\n  ${props =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n  ${props =>\n    props.cyan &&\n    css`\n      background: ${palette.cyan[5]};\n      &:hover {\n        background: ${palette.cyan[4]};\n      }\n    `}\n  ${props =>\n    props.blue &&\n    css`\n      background: ${palette.blue[6]};\n      &:hover {\n        background: ${palette.blue[5]};\n      }\n    `}  \n  &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n    }\n`;\n\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = props => {\n  return props.to ? (\n    <StyledLink {...props} blue={props.blue ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/backgroundVideo.aa81cfcc.mp4\";","import React from 'react';\nimport Button from '../components/common/Button';\nimport styled from 'styled-components';\nimport palette from '../lib/style/palette';\nimport './PostListPage.css';\nimport Fade from 'react-reveal';\nimport backgroundVideo from '../video/backgroundVideo.mp4';\n\nimport './HomePage.css'\n\nconst ButtonHome = styled(Button)`\n  font-size : 1.5rem;\n  margin : 1.5rem;\n  display : block;\n  width : 230px;\n  height : 70px;\n  background: ${palette.gray[9]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n  @media (max-height : 800px) {\n    width : 200px;\n    height : 60px;\n  }\n`;\n\nconst VideoDiv = styled.div`\n  padding : 0;\n  width : 100vw;\n  height :100vh;\n  overflow : hidden;\n  position : absolute;\n  text-align : center;\n  background-repeat : 'no-repeat';\n  background-position: center center;\n  background-size: cover;\n`;\nconst Video = styled.video`\n  width:100%;\n  object-fit : cover;\n  @media screen and (max-aspect-ratio: 3840/2160) {\n      width : auto;\n      height : 100vh;\n  }\n`;\n\nconst BgColor = styled.div`\n  width : 100%;\n  height: 100%;\n  position : absolute;\n  z-index :1;\n  background-size : cover;\n  background-color : rgba(0, 0, 0, 0.3);\n`;\n\nconst BtnDiv = styled.div`\n  position absolute;\n  left : 80%;\n  transform:translateX(-80%);\n  bottom : 10%;\n  z-index : 2; \n  @media (max-width: 768px) {\n    left : 50%;\n    transform:translateX(-50%);\n  }\n\n`;\n\nconst Title = styled.div`\n  position : absolute;\n  color : white;\n  z-index : 3;\n  text-align : left;\n  left : 20%;\n  transform:translateX(-20%);\n  top : 10%;\n  font-family: 'Anton', sans-serif;\n  \n  h1 {\n    font-size : 7rem;\n    margin-bottom : -10px;\n  }\n  span {\n    font-size : 9rem;\n    text-shadow : 10px 10px black;\n  }\n\n  @media (max-height : 800px) {\n    h1 {\n      font-size : 4rem;\n    }\n    span {\n      font-size : 6rem;\n    }\n  }\n`;\n\nconst PostListPage = ( { history } ) => {\n    return (\n      <div className=\"App\">\n        <>\n        <Title>\n          <h1><span>M</span>y</h1>\n          <h1><span>AI</span></h1>\n          <h1><span>T</span>rainer</h1>\n        </Title>\n        <BtnDiv>\n        <Fade bottom delay = {3000}>\n          <ButtonHome fullWidth onClick ={ () =>\n            {history.push(\"/login\")}}>SignIn</ButtonHome>\n          <ButtonHome fullWidth onClick ={ () =>\n            {history.push(\"/register\")}}>SignUp</ButtonHome>\n           </Fade>\n        </BtnDiv>\n       \n        <BgColor/>\n        <VideoDiv>\n        <Video \n          loop = {true}\n          autoPlay = {true}\n          muted = {true}>\n          <source src={backgroundVideo} type='video/mp4'/>\n        </Video>\n        </VideoDiv>\n      </>\n    </div> \n    );\n};\n\nexport default PostListPage;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport { Link } from 'react-router-dom';\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\nconst AuthTemplateBlock = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: ${palette.gray[2]};\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n/* 흰색 박스 */\nconst WhiteBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\nconst LinkTo = styled(Link)`\n  color: black;\n  &:hover{\n    color: ${palette.gray[6]};\n  }\n`;\n\nconst AuthTemplate = ({ children }) => {\n    return (\n      <AuthTemplateBlock>\n        <WhiteBox>\n          <div className=\"logo-area\">\n            <LinkTo to=\"/\" style={{textDecoration:'none', fontSize : '1.4rem'}} >MAIT</LinkTo>\n          </div>\n          {children}\n        </WhiteBox>\n      </AuthTemplateBlock>\n    );\n  };\n\nexport default AuthTemplate;","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n/*\n 요청을 위한 액션 타입을 payload로 설정합니다 (예: \"sample/GET_POST\")\n*/\n\nexport const startLoading = createAction(\n  START_LOADING,\n  requestType => requestType\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  requestType => requestType\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false\n    })\n  },\n  initialState\n);\n\nexport default loading;","import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta : response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}","import axios from 'axios';\n\nconst client = axios.create({\n  withCredentials: false,\n  headers : {\n      \"baseURL\" : 'https://port-0-aihometraining-web-lhe2blhyzvaeb.sel4.cloudtype.app',\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n  }\n});\n\n// client.defaults.baseURL = 'https://port-0-aihometraining-web-lhe2blhyzvaeb.sel4.cloudtype.app' \n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;","import client from './client';\n// 로그인\nexport const login = ({ username, password }) =>\n  client.post('/api/auth/login', { username, password });\n\n// 회원가입\nexport const register = ({ username, password }) =>\n  client.post('/api/auth/register', { username, password });\n\n// 비밀번호 변경\nexport const modify = ({ id, username, password }) =>\n  client.patch(`/api/auth/modify/${id}`, { id, username, password });\n\n// 로그인 상태 확인\nexport const check = () => client.get('/api/auth/check');\n\n//로그아웃\nexport const logout = () => client.post('/api/auth/logout');\n\n//댓글에 레벨 표시 하려고 레벨 쿼리해오는 api \nexport const findLevel = ({ username }) => \n  client.patch('/api/auth/level', { username }); \n\nexport const exercise = ({title, username}) =>\n  client.post('/api/auth/exercises', {title, username});\n\nexport const updateTotalTime = ({ username, totalTime }) =>\n  client.patch(`/api/auth/exercises`, { username, totalTime });","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n    'auth/REGISTER'\n  );\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n    'auth/LOGIN'\n  );\n\nconst [MODIFY, MODIFY_SUCCESS, MODIFY_FAILURE] = createRequestActionTypes(\n    'auth/MODIFY'\n  );\n\n  const [UPDATETOTALTIME, UPDATETOTALTIME_SUCCESS, UPDATETOTALTIME_FAILURE] = createRequestActionTypes(\n    'auth/UPDATETOTALTIME'\n  );\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({ form, key, value }) => ({\n      form, // register , login\n      key, // username, password, passwordConfirm\n      value, // 실제 바꾸려는값\n    })\n  );\n\n  export const initializeForm = createAction(INITIALIZE_FORM, form => form); // register / login\n  export const register = createAction(REGISTER, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const login = createAction(LOGIN, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const modify = createAction(MODIFY, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const updateTotalTime = createAction(UPDATETOTALTIME, ({ username, totalTime }) => ({\n    username,\n    totalTime\n  }));\n  export const updateLevel = createAction(UPDATETOTALTIME, ({ username, totalTime }) => ({\n    username,\n    totalTime\n  }));\n  \n  const registerSaga = createRequestSaga(REGISTER, authAPI.register);\n  const loginSaga = createRequestSaga(LOGIN, authAPI.login);\n  const modifySaga = createRequestSaga(MODIFY, authAPI.modify);\n  const updateTotalTimeSaga = createRequestSaga(UPDATETOTALTIME, authAPI.updateTotalTime);\n\n  export function* authSaga() {\n    yield takeLatest(REGISTER, registerSaga);\n    yield takeLatest(LOGIN, loginSaga);\n    yield takeLatest(MODIFY, modifySaga);\n    yield takeLatest(UPDATETOTALTIME, updateTotalTimeSaga);  };\n\n  const initialState = {\n    register: {\n      username: '',\n      password: '',\n      passwordConfirm: ''\n    },\n    login: {\n      username: '',\n      password: ''\n    },\n    modify: {\n      password: '',\n      passwordConfirm: ''\n    },\n    auth: null,\n    authError: null\n  };\n\n  const auth = handleActions(\n    {\n      [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n        produce(state, draft => {\n          draft[form][key] = value; // 예: state.register.username을 바꾼다\n        }),\n      [INITIALIZE_FORM]: (state, { payload: form }) => ({\n        ...state,\n        [form]: initialState[form],\n        authError: null // 폼 전환 시 회원 인증 에러 초기화\n      }),\n      // 회원가입 성공\n      [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      // 회원가입 실패\n      [REGISTER_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      // 로그인 성공\n      [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      // 로그인 실패\n      [LOGIN_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      //비밀번호 변경 성공\n      [MODIFY_SUCCESS]: (state) => ({\n        ...state,\n        authError: null,\n        auth : null\n      }),\n      // 비밀번호변경 실패\n      [MODIFY_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      [UPDATETOTALTIME_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      [UPDATETOTALTIME_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      })\n    },\n    initialState\n  );\n\nexport default auth;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\nimport Button from '../common/Button';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n    text-align : center;\n  }\n`;\n\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst textMap = {\n    login: '로그인',\n    register: '회원가입',\n};\n\n/**\n * 에러를 보여줍니다\n */\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\n\n\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\n    const text = textMap[type];\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n        {type === 'register' && (\n          <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.passwordConfirm}\n          />\n        )}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop fullWidth>\n            {text}\n        </ButtonWithMarginTop>\n      </form>\n      <Footer>\n      {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default AuthForm;","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage 에서 user 제거하고\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage 에서 user 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n      form: auth.login,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'login',\n          key: name,\n          value,\n        }),\n      );\n    };\n  \n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const {username, password} = form;\n      dispatch(login({ username, password }));\n    };\n  \n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('login'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n        if (authError) {\n          console.log('오류 발생');\n          console.log(authError);\n          setError('로그인 실패');\n          return;\n        }\n        if (auth) {\n          console.log('로그인 성공');\n          dispatch(check());\n        }\n      }, [auth, authError, dispatch]);\n    \n      useEffect(() => {\n        if (user) {\n          history.push('/main');\n          try {\n            localStorage.setItem('user', JSON.stringify(user));\n          } catch (e) {\n            console.log('localStorage is not working');\n          }\n        }\n      }, [history, user]);\n\n    return (\n      <AuthForm\n        type=\"login\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    );\n  };\n  \n  export default withRouter(LoginForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <AuthTemplate>\n            <LoginForm/>\n        </AuthTemplate>    \n    )\n};\n\nexport default LoginPage;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport {withRouter} from 'react-router-dom';\n\nconst RegisterForm = ({ history }) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n      form: auth.register,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user,\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'register',\n          key: name,\n          value,\n        }),\n      );\n    };\n  \n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const { username, password, passwordConfirm } = form;\n      if([username, password, passwordConfirm].includes('')) {\n        setError('빈 칸을 모두 입력하세요.');\n        return;\n      }\n        // 비밀번호가 일치하지 않는다면\n        if (password !== passwordConfirm) {\n        setError('비밀번호가 일치하지 않습니다.');\n        dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n        dispatch(\n          changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n        );\n        return;\n      }\n      dispatch(register({ username, password }));\n      \n    };\n  \n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('register'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n        if (authError) {\n            // 계정명이 이미 존재할 때\n            if (authError.response.status === 409) {\n              setError('이미 존재하는 계정명입니다.');\n              return;\n            }\n            // 기타 이유\n            setError('회원가입 실패');\n            return;\n          }\n        if (auth) {\n            console.log(\"회원가입 성공\");\n            console.log(auth);\n            dispatch(check());\n        }\n    }, [auth, authError, dispatch]\n    );\n\n    // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/main');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n   \n    return (\n      <AuthForm\n        type=\"register\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error = {error}\n      />\n    );\n  };\n  \n  export default withRouter(RegisterForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n    return (\n        <AuthTemplate>\n            <RegisterForm/>\n        </AuthTemplate>    \n    );\n};\n\nexport default RegisterPage;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 1224px;\n  margin: 0 auto; /* 중앙 정렬 */\n  /* 브라우저 크기에 따라 가로 사이즈 변경 */\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Responsive = ({ children, ...rest }) => {\n  // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\n  // ...rest를 사용하여 ResponsiveBlock에게 전달\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\n};\n\nexport default Responsive;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nimport Button from './Button';\nimport palette from '../../lib/style/palette';\n\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  z-index : 100;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\n */\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/**\n * 헤더가 fixed로 되어 있기 때문에 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\n */\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\nconst LevelInfo = styled.div`\n  font-weight: 800;\n  margin-right: 0.5rem;\n`;\n\nconst LinkTo = styled(Link)`\n  color: black;\n  font-style: oblique;\n  &:hover{\n    color: gray;\n    text-decoration: none;\n  }\n`;\n\nconst Ai = styled.span`\n  color : ${palette.indigo[9]};\n`;\n\nconst Header = ({ user, onLogout }) => {\n  return (\n    <>\n      <HeaderBlock>\n        <Wrapper>\n          <LinkTo to=\"/main\" className=\"logo\" style={{ fontSize: '1.5em'}}>\n            M<Ai>AI</Ai>T\n          </LinkTo>\n          {user ? (\n            <div className=\"right\">\n              <LevelInfo>{user.level}</LevelInfo>\n              <UserInfo>{user.username}</UserInfo>\n              <Button to ='/' onClick={onLogout}>로그아웃</Button>\n            </div>\n          ) : (\n            <div className=\"right\">\n              <Button to=\"/login\">로그인</Button>\n            </div>\n          )}\n        </Wrapper>\n      </HeaderBlock>\n      <Spacer />\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport { logout } from '../../modules/user';\n\nconst HeaderContainer = () => {\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const dispatch = useDispatch();\n  const onLogout = () => {\n      dispatch(logout());\n  };\n  return (\n    <>\n    <Header user={user} onLogout={onLogout} />\n    </>\n  );\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nconst NavBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  z-index:100;\n  background: black;\n`;\n\nconst Wrapper = styled(Responsive)`\n    height: 3.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n`;\n\nconst Spacer = styled.div`\n  height: 0.3rem;\n`;\n\nconst LinkTo = styled(Link)`\n    font-size: 0.9em;\n    color: white;\n    font-weight: bold;\n    &:hover{\n        text-decoration: none;\n        color: #afafaf;\n    }\n`;\nconst Navbar = () => {\n    return (\n        <>\n        <NavBlock>\n            <Wrapper>\n                <LinkTo to=\"/todaytr\" className=\"logo\">\n                    오늘의 운동\n                </LinkTo>\n                <LinkTo to=\"/calendar\" className=\"logo\">\n                    운동 일지\n                </LinkTo>\n                <LinkTo to=\"/postlist\" className=\"logo\">\n                    커뮤니티\n                </LinkTo>\n                <LinkTo to=\"/mypage\" className=\"logo\">\n                    마이페이지\n                </LinkTo>\n            </Wrapper>\n        </NavBlock>\n        <Spacer />\n        </>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\n\nconst SubInfoBlock = styled.div`\n  ${props =>\n    props.hasMarginTop &&\n    css`\n      margin-top: 1rem;\n    `}\n  color: ${palette.gray[6]};\n  /* span 사이에 가운뎃점 문자 보여주기*/\n  span + span:before {\n    color: ${palette.gray[4]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7'; /* 가운뎃점 문자 */\n  }\n`;\n\nconst SubInfo = ({ username, userlevel, publishedDate, hasMarginTop }) => {\n  return (\n    <SubInfoBlock hasMarginTop={hasMarginTop}>\n      <span>\n        <b>\n          {userlevel}\n          <Link to={`/@${username}`} style={{color: `${palette.gray[6]}`, textDecoration: 'none'}}> {username}</Link>\n        </b>\n      </span>\n      <span>{new Date(publishedDate).toLocaleDateString()}</span>\n    </SubInfoBlock>\n  );\n};\n\nexport default SubInfo;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\nimport SubInfo from '../common/SubInfo';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 5em;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\n\nconst PostItem = ({ post }) => {\n  const [usrlevel, setLevel] = useState('');\n  const { publishedDate, user, title, body, _id } = post;\n\n\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`} style={{color: 'black', textDecoration: 'none'}}>{title}</Link>\n      </h2>\n      {<SubInfo \n        username ={user.username} \n        userlevel={usrlevel}\n        publishedDate={new Date(publishedDate)}/>}\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  const [check, setCheck] = useState(false);\n  useEffect(() => {\n    if(posts && posts.length == 0){\n      setCheck(true);   //게시글 존재 여부 판단\n    } else {\n      setCheck(false);\n    }\n  }, [posts])\n\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n  \n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n      {showWriteButton && (\n          <Button to=\"/write\" style={{textDecoration: 'none', color: 'white'}}>\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {check && \n        <div style={{fontSize: '1.5rem', fontWeight: 'bold', padding:'4% 0'}}>\n          게시글이 없습니다.</div>}\n\n      {!loading && posts && (\n        <div>\n         {posts.map(post => (\n          <PostItem post={post} key={post._id} />\n        ))}\n        </div>\n      )}\n\n    </PostListBlock>\n  );\n};\n\nexport default PostList;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_POSTS,\n  LIST_POSTS_SUCCESS,\n  LIST_POSTS_FAILURE,\n] = createRequestActionTypes('posts/LIST_POSTS');\nconst [\n  SEARCH_POSTS,\n  SEARCH_POSTS_SUCCESS,\n  SEARCH_POSTS_FAILURE,\n] = createRequestActionTypes('get/SEARCH_POSTS');\n\nexport const listPosts = createAction(\n    LIST_POSTS,\n    ({ username, page }) => ({ username, page }),\n);\n\nexport const searchPosts = createAction(\n    SEARCH_POSTS,\n    ({ page, option, content }) => ({ page, option, content }),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nconst searchPostsSaga = createRequestSaga(SEARCH_POSTS, postsAPI.searchPosts);\n\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n  yield takeLatest(SEARCH_POSTS, searchPostsSaga);\n}\n\nconst initialState = {\n  posts: null,\n  error: null,\n  lastPage: 1,\n};\n\nconst posts = handleActions(\n  {\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10), // 문자열을 숫자로 변환\n    }),\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [SEARCH_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10), // 문자열을 숫자로 변환\n    }),\n    [SEARCH_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default posts;","import client from './client';\nimport qs from 'qs';\n\nexport const writePost = ({ title, body }) =>\n    client.post('/api/posts', { title, body });\n\nexport const readPost = id => client.get(`/api/posts/${id}`);\n\nexport const listPosts = ({ page, username }) => {\n    const queryString = qs.stringify({\n        page,\n        username\n    });\n    return client.get(`/api/posts?${queryString}`);\n};\n\nexport const searchPosts = ({ page, option, content }) => {\n  const queryString = qs.stringify({\n    page,\n    option,\n    content\n  });\n  return client.get(`/api/posts/search?${queryString}`);\n}\n\nexport const updatePost = ({ id, title, body, tags }) =>\n  client.patch(`/api/posts/${id}`, {\n    title,\n    body,\n    tags,\n  });\n\nexport const removePost = id => client.delete(`/api/posts/${id}`);\nexport const comment = ({text, username, id}) =>  \n  client.post(`/api/posts/comments`, {text, username, id});\n","import React, { useState } from 'react';\nimport{ useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\nimport styled from 'styled-components';\nimport Button from '../../components/common/Button';\nimport Responsive from '../../components/common/Responsive';\nimport palette from '../../lib/style/palette';\nimport { searchPosts } from '../../modules/posts';\n\nconst Wrapper = styled(Responsive)`\n    form {\n        display: flex;\n        width : 100%;\n        height : 40px;\n        justify-content: flex-end;\n    }\n    select{\n        width: 100px;\n        height: 100%;\n        border: none;\n        background: white;\n        border: 1px solid #E8E6E6;\n    }\n\n    input{\n        margin : 0 15px;\n        width : 250px;\n        height: 100%;\n        border: 1px solid #E8E6E6;\n        padding-left: .8em;\n        font-size: 1rem;\n        &:focus{\n            outline:none;\n        }\n    }\n    @media (max-width: 768px) {\n        select{\n            width: 60px;\n        }\n        input{\n            width: 200px;\n        }\n    }\n`;\nconst Cbutton = styled(Button)`\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n    width: 65px;\n    height: 40px;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n    cursor: pointer;\n    background: ${palette.blue[7]};\n    color: white;\n    &:hover {\n        background: ${palette.blue[6]};\n        color: white;\n    }\n    & + & {\n        margin-left: 0.25rem;\n    }\n    @media (max-width: 768px) {\n        width: 55px;\n    }\n`;\n\nconst SearchPostContainer = ({ location }) => {\n    const [value, setValue] = useState(\"\"); \n    const [options, setOptions] = useState(\"title\");\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setValue(e.currentTarget.value);\n    };\n    const selectHandle = (e) => {\n        setOptions(e.currentTarget.value);\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const { page } = qs.parse(location.search, {\n            ignoreQueryPrefix: true,\n        });\n        \n        dispatch(searchPosts({ page: page, option: options, content: value }));\n        setValue('');\n    };\n    return (\n        <>\n        <Wrapper>\n            <form method=\"get\" onSubmit={onSubmit}>\n            <select value={options} onChange={selectHandle}>\n                <option value=\"title\">제목</option>\n                <option value=\"body\">내용</option>\n                <option value=\"title_body\">제목+내용</option>\n            </select>\n            <input \n                type=\"text\" name=\"searchText\"\n                onChange={ handleChange }\n                value={value}\n                placeholder=\"검색어를 입력하세요\"/>\n            <div>\n                <Cbutton type = \"submit\" onClick={onSubmit}>검색</Cbutton>\n            </div>\n            </form>\n        </Wrapper>\n        </>\n    )\n};\n\nexport default withRouter(SearchPostContainer);","import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\nimport SearchPostContainer from './SearchPostContainer';\n\nconst PostListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const { posts, error, loading, user } = useSelector(\n    ({ posts, loading, user }) => ({\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user,\n    }),\n  );\n  useEffect(() => {\n    const { username, page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listPosts({ username, page }));\n  }, [dispatch, location.search]);\n\n  return (\n    <>\n    <PostList\n      loading={loading}\n      error={error}\n      posts={posts}\n      showWriteButton={user}\n    />\n    <SearchPostContainer />\n    </>\n  );\n};\n\nexport default withRouter(PostListContainer);","import React from 'react';\nimport styled from 'styled-components';\nimport qs from 'qs';\nimport Button from '../common/Button';\n\nconst PaginationBlock = styled.div`\n  width: 320px;\n  margin: 5em auto;\n  display: flex;\n  justify-content: space-between;\n\n`;\nconst PageNumber = styled.div``;\n\nconst buildLink = ({ username, page }) => {\n    const query = qs.stringify({ page });\n    //return `/?${query}`;\n    return username ? `/postlist/@${username}?${query}` : `/postlist/?${query}`;\n};\n\nconst Pagination = ({ page, lastPage, username }) => {\n  return (\n    <>\n    <PaginationBlock>\n      <Button\n        disabled={page === 1}\n        to={\n          page === 1 ? undefined : buildLink({ username, page: page - 1 })\n        }\n      >\n        이전\n      </Button>\n      <PageNumber>{page}</PageNumber>\n      <Button\n        disabled={page === lastPage}\n        to={\n          page === lastPage\n            ? undefined\n            : buildLink({ username, page: page + 1 })\n        }\n      >\n        다음\n      </Button>\n    </PaginationBlock>\n    </>\n  );\n};\n\nexport default Pagination;","import React from 'react';\nimport Pagination from '../../components/posts/Pagination';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nconst PaginationContainer = ({ location, match }) => {\n  const { lastPage, posts, loading } = useSelector(({ posts, loading }) => ({\n    lastPage: posts.lastPage,\n    posts: posts.posts,\n    loading: loading['posts/LIST_POSTS'],\n  }));\n\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\n  if (!posts || loading) return null;\n  const { username } = match.params;\n  // page가 없으면 1을 기본값으로 사용\n  const {  page = 1 } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  return (\n    <Pagination\n      username={username}\n      page={parseInt(page, 10)}\n      lastPage={lastPage}\n    />\n  );\n};\n\nexport default withRouter(PaginationContainer);","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"mt-5 pt-5 pb-5 footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-5 col-xs-12 about-company\">\n          <h2 style={{fontStyle: 'oblique', fontWeight:'bold'}}>My AI Trainer</h2>\n          <p className=\"pr-3\">당신만의 Personal Trainer가 되어드립니다.<br/>지금 바로 운동을 시작하고 당신의 자세를 분석해보세요.</p>\n        </div>\n        <div className=\"col-lg-3 col-xs-12 links\">\n          <h4 className=\"mt-lg-0 mt-sm-3\"><i className=\"fa fa-link mr-3\"></i>Quick Links</h4>\n            <ul className=\"m-0 p-0\">\n              <li>- <Link to=\"/todaytr\">오늘의 운동</Link></li>\n              <li>- <Link to=\"/calendar\">운동 일지</Link></li>\n              <li>- <Link to=\"/postlist\">커뮤니티</Link></li>\n              <li>- <Link to=\"/mypage\">마이 페이지</Link></li>\n            </ul><p></p>\n        </div>\n        <div className=\"col-lg-4 col-xs-12 location\">\n          <h4 className=\"mt-lg-0 mt-sm-4\"><i className=\"fa fa-user-tie mr-3\"></i> Contact Us!</h4>\n          <p>서울시 용산구 청파로 47길 100 숙명여자대학교</p>\n          <p className=\"mb-0\"><i className=\"fa fa-phone mr-3\"></i>(02) 123-4567</p>\n          <p className=\"mb-0\"><i className=\"fa fa-envelope mr-3\"></i>listener@gmail.com</p>\n        </div>\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col copyright\">\n            <h4 className=\"mt-lg-0 mt-sm-4 developer\">‍<i class=\"fas fa-code\"></i> Developers</h4>\n            <p className=\"m-1 p-1\">\n                <span className=\"dev\"><a href = \"https://github.com/jokj624\"><i className=\"fab fa-github-square mr-3\"></i></a> 채정아</span> \n                <span className=\"dev\"><a href = \"https://github.com/coolkim99\"><i className=\"fab fa-github-square mr-3\"></i></a> 김시원</span>\n                <span className=\"dev\"><a href = \"https://github.com/EunHye146\"><i className=\"fab fa-github-square mr-3\"></i></a> 주은혜</span>\n            </p>\n          <p></p>\n          <p>© 2021. All Rights Reserved.<br/> <a href=\"https://github.com/jokj624/AIhomeTraining_web\" style={{color:'#616161'}}>HomeTraining's Github</a></p>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Footer from '../../components/common/Footer';\n\nconst FooterContainer = () => {\n  return <Footer />;\n};\n\nexport default FooterContainer;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport PostListContainer from '../containers/posts/PostListContainer';\nimport PaginationContainer from '../containers/posts/PaginationContainer';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\n\n\nconst PostListPage = () => {\n  return (\n    <>\n    <Helmet>\n      <title>게시판</title>\n    </Helmet>\n      <HeaderContainer />\n      <NavContainer />\n      <PostListContainer />\n      <PaginationContainer />\n      <FooterContainer />\n    </>\n  );\n};\n\nexport default PostListPage;","import React, {useRef, useEffect} from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\n\nconst EditorBlock = styled(Responsive)`\n    /* 페이지 위 아래 여백 지정 */\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n`;\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({ title, body, onChangeField }) => {\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n    const quillInstance = useRef(null); // Quill 인스턴스를 설정\n  \n    useEffect(() => {\n      quillInstance.current = new Quill(quillElement.current, {\n        theme: 'bubble',\n        placeholder: '내용을 작성하세요...',\n        modules: {\n          // 더 많은 옵션\n          // https://quilljs.com/docs/modules/toolbar/ 참고\n          toolbar: [\n            [{ header: '1' }, { header: '2' }],\n            ['bold', 'italic', 'underline', 'strike'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            ['blockquote', 'code-block', 'link', 'image'],\n          ],\n        },\n      });\n\n      const quill = quillInstance.current;\n      quill.on('text-change', (delta, oldDelta, source) => {\n          if(source === 'user') {\n              onChangeField({key: 'body', value: quill.root.innerHTML});\n          }\n      });\n    }, [onChangeField]);\n\n    const mounted = useRef(false);\n    useEffect(()=> {\n        if(mounted.current) return;\n        mounted.current = true;\n        quillInstance.current.root.innerHTML = body;\n    }, [body]);\n\n    const onChangeTitle = e => {\n        onChangeField({key: 'title', value: e.target.value});\n    }\n\n    return (\n      <EditorBlock>\n        <TitleInput\n          placeholder=\"제목을 입력하세요\"\n          onChange={onChangeTitle}\n          value={title}\n        />\n        <QuillWrapper>\n          <div ref={quillElement} />\n        </QuillWrapper>\n      </EditorBlock>\n    );\n  };\n  \n  export default Editor;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\nconst [\n  WRITE_POST,\n  WRITE_POST_SUCCESS,\n  WRITE_POST_FAILURE,\n] = createRequestActionTypes('write/WRITE_POST'); // 포스트 작성\n\nconst [\n  UPDATE_POST,\n  UPDATE_POST_SUCCESS,\n  UPDATE_POST_FAILURE,\n] = createRequestActionTypes('write/UPDATE_POST');  //포스트 수정\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const writePost = createAction(WRITE_POST, ({ title, body }) => ({\n  title,\n  body\n}));\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\nexport const updatePost = createAction(\n  UPDATE_POST,\n  ({ id, title, body }) => ({\n    id,\n    title,\n    body,\n  }),\n);\n\n// saga 생성\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postsAPI.updatePost);\n\nexport function* writeSaga() {\n  yield takeLatest(WRITE_POST, writePostSaga);\n  yield takeLatest(UPDATE_POST, updatePostSaga);\n}\n\nconst initialState = {\n  title: '',\n  body: '',\n  post: null,\n  postError: null,\n};\n\nconst write = handleActions(\n  {\n    [INITIALIZE]: state => initialState, // initialState를 넣으면 초기상태로 바뀜\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value, // 특정 key 값을 업데이트\n    }),\n    [WRITE_POST]: state => ({\n      ...state,\n      // post와 postError를 초기화\n      post: null,\n      postError: null,\n    }),\n    // 포스트 작성 성공\n    [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    // 포스트 작성 실패\n    [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\n      ...state,\n      postError,\n    }),\n    [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\n       ...state,\n       title: post.title,\n       body: post.body,\n       originalPostId: post._id, \n    }),\n    [UPDATE_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [UPDATE_POST_FAILURE]: (state, { payload: postError }) => ({\n      ...state,\n      postError,\n    }),\n  },\n  initialState,\n);\n\nexport default write;\n","import React, { useEffect, useCallback } from 'react';\nimport Editor from '../../components/write/Editor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize } from '../../modules/write';\n\nconst EditorContainer = () => {\n  const dispatch = useDispatch();\n  const { title, body } = useSelector(({ write }) => ({\n    title: write.title,\n    body: write.body,\n  }));\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\n    dispatch,\n  ]);\n  // 언마운트될 때 초기화\n  useEffect(() => {\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\n};\n\nexport default EditorContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\n\nconst WriteActionButtonsBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n  margin-top: 1rem;\n  margin-bottom: 3rem;\n  button + button {\n    margin-left: 0.5rem;\n  }\n`;\n\n/* TagBox에서 사용하는 버튼과 일치하는 높이로 설정 후 서로 간의 여백 지정 */\nconst StyledButton = styled(Button)`\n  height: 2.125rem;\n  & + & {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst WriteActionButtons = ({ onCancel, onPublish, isEdit }) => {\n  return (\n    <WriteActionButtonsBlock>\n      <StyledButton blue onClick={onPublish}>\n        포스트 {isEdit ? '수정' : '등록'}\n      </StyledButton>\n      <StyledButton onClick={onCancel}>취소</StyledButton>\n    </WriteActionButtonsBlock>\n  );\n};\n\nexport default WriteActionButtons;","import React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writePost, updatePost } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const { title, body, post, postError, originalPostId } = useSelector(({ write }) => ({\n    title: write.title,\n    body: write.body,\n    post: write.post,\n    postError: write.postError,\n    originalPostId: write.originalPostId,\n  }));\n\n  // 포스트 등록\n  const onPublish = () => {\n    if(originalPostId){\n      dispatch(updatePost({ id: originalPostId, title, body }));\n      return;\n    }\n    dispatch(\n      writePost({\n        title,\n        body\n      }),\n    );\n  };\n\n  // 취소\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  // 성공 혹은 실패시 할 작업\n  useEffect(() => {\n    if (post) {\n      const { _id, user } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return <WriteActionButtons onPublish={onPublish} onCancel={onCancel} isEdit={!!originalPostId} />;\n};\n\nexport default withRouter(WriteActionButtonsContainer);","import React from 'react';\nimport Responsive from '../components/common/Responsive';\nimport EditorContainer from '../containers/write/EditorContainer';\nimport WriteActionButtonsContainer from  '../containers/write/WriteActionButtonsContainer';\n\nconst WritePage = () => {\n    return (\n        <Responsive>\n            <EditorContainer />\n            <WriteActionButtonsContainer />\n        </Responsive>\n    );\n};\n\nexport default WritePage;","export default __webpack_public_path__ + \"static/media/exercise19.d8a7517d.jpg\";","export default __webpack_public_path__ + \"static/media/exercise18.42006514.jpg\";","export default __webpack_public_path__ + \"static/media/exercise20.37d58730.jpg\";","export default __webpack_public_path__ + \"static/media/exercise15.024580fc.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport exercise2 from '../../img/exercise19.jpg'\nimport exercise3 from '../../img/exercise18.jpg'\nimport exercise4 from '../../img/exercise20.jpg'\nimport exercise5 from '../../img/exercise15.jpg'\nimport Slider from 'react-slick';\nimport Fade from 'react-reveal';\nimport { Link } from 'react-router-dom';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './MainPhoto.css';\n\nconst Wrap = styled.div`\n    position: relative;\n`;\n\nconst Text = styled.div`\n    position: absolute;\n    left : 50%;\n    transform:translateX(-50%);\n    margin-left : 15px;\n    top: 80%;\n    border 4px solid white;\n    @media (max-width: 768px) {\n        border 3.5px solid white;\n        margin-left : 0px;\n    }\n`;\nconst H = styled.div`\n    font-size: 2em;\n    font-weight: bold;\n    color: white;\n    text-align:center;\n    @media (max-width: 768px) {\n        font-size: 1.5em;\n    }\n\n`\nconst LinkTo = styled(Link)`\n    color: white;\n    &:hover{\n        text-decoration: none;\n        color: white;\n    }\n`;\n\nclass MainPhoto extends React.Component {\n    render() {\n        const settings = {\n            dots: false,\n            arrows:false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            fade:true,\n            centerPadding: '100px',\n            autoplay: true,\n            autoplaySpeed: 3500,\n            useCss : true\n        };\n    return (\n        <>\n        <div> \n            <Fade cascade>\n            <Slider {...settings}>\n            <Wrap>\n                <img src = {exercise2} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise3} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise4} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise5} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            </Slider>\n            </Fade>\n        </div>\n        </>\n    );\n};\n};\n\nexport default MainPhoto;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Responsive from './Responsive';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\nimport './MainAbout.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\nconst Wrapper = styled(Responsive)`\n    display: inline-flex;\n    align-items: center;\n    width: 100%;\n    z-index: 100;\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n    @media only screen and (max-width: 700px) {\n        display: inline-block;\n    }\n`;\nconst InDiv = styled(Responsive)`\n    margin-top: 3px;\n`;\n\nconst LinkTo = styled(Link)`\n    &:hover{\n        text-decoration: none;\n    }\n`;\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '370px', \n    height: '240px',\n    margin: 'auto',\n    boxShadow: '5px 5px 5px 3px #616161',\n    marginBottom : '15px',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 5px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 15,\n    marginBottom : '10px',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst About = styled(Responsive)`\n    h2 {\n      font-family: 'Poppins', sans-serif;\n        padding : 15px;\n        margin-bottom : 70px;\n        font-size : 2.5rem;\n        border-bottom : 2px solid ${palette.gray[5]};\n    }\n    p {\n      margin-bottom : 5px;\n      font-style : italic;\n      font-size : 1.1rem;\n    }\n    span {\n      font-size : 1.1rem;\n      font-weight : bold;\n    }\n    text-align : center; \n`;\n\n\nexport default function MainCard() {\n  const classes = useStyles();\n  return (\n    <>\n    <About>\n      <h2>TUTORIAL</h2>\n    </About>\n    <Wrapper>\n    <InDiv>\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 1\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          오늘의 운동\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          시작 버튼을 누르고 준비된 운동을 완료하세요.<br/>\n          운동 자세를 인식하여 완료 후 운동 자세를 분석해줍니다.           \n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/todaytr\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />} style={{fontWeight:'bold'}}>지금 시작하기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n        </InDiv>\n        <InDiv>\n      <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 2\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          운동 일지\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          캘린더에서 당신만의 운동 일지를 확인해보세요.<br/>\n          언제, 얼마나 열심히 운동했는지 볼 수 있습니다. <br/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/calendar\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />}  style={{fontWeight:'bold'}}>지금 확인하기</Button>\n        </LinkTo>\n      </CardActions>\n    </Card>\n    </InDiv>\n    </Wrapper>\n    <Wrapper>\n    <InDiv>\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 3\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          커뮤니티\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          매일 새로운 글들이 당신을 기다립니다.<br/>\n          유저들의 운동 이야기를 보고, 당신만의 운동 노하우를 나눠보세요.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/postlist\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />}  style={{fontWeight:'bold'}}>새 글 보러가기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n    </InDiv>\n    <InDiv>\n      <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 4\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          마이페이지\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          당신의 운동 레벨과 경험치를 확인하세요.<br/>\n          총 운동 시간에 따라 7개의 레벨로 나눠집니다.<br/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/mypage\">\n        <Button className={classes.button} startIcon={<NavigateNextIcon />}  size=\"large\" style={{fontWeight:'bold'}}>지금 확인하기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n      </InDiv>\n    </Wrapper>\n    </>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from './Responsive';\nimport palette from '../../lib/style/palette';\nimport './MainAbout.css';\n\nconst About = styled(Responsive)`\n    h2 {\n      font-family: 'Poppins', sans-serif;\n        padding : 15px;\n        margin-bottom : 70px;\n        font-size : 2.5rem;\n        border-bottom : 2px solid ${palette.gray[5]};\n    }\n    p {\n      margin-bottom : 5px;\n      font-style : italic;\n      font-size : 1.1rem;\n    }\n    span {\n      font-size : 1.1rem;\n      font-weight : bold;\n    }\n    text-align : center; \n`;\n\nconst Paragraph = styled.div`\n    margin-top : 60px;\n`;\n\nconst Spacer = styled.div`\n  height: 10rem;\n`;\n\nconst MainAbout = () => {\n    return (\n      <>\n        <About className = \"about\">\n            <h2>ABOUT</h2>\n            <Paragraph>\n              <p><span>MAIT</span>는 My AI Trainer의 약자로,</p>\n              <p>딥러닝을 기반으로 하여 운동 자세를 인식하고, 분석을 통해 자세를 교정해주는</p>\n              <p>AI 홈트레이닝 웹페이지입니다.</p>\n            </Paragraph>\n            <Paragraph>\n              <p>나만의 트레이너인 운동 메이트와 함께 운동하며 건강한 운동습관을 만들어보세요.</p>\n              <p></p>\n            </Paragraph>\n        </About>\n        <Spacer />\n      </>\n    );\n  };\n  \n  export default MainAbout;","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from './Responsive';\nimport Fade from 'react-reveal';\nimport './Main.css'\nimport MainPhoto from './MainPhoto';\nimport MainCard from './MainCard';\nimport MainAbout from './MainAbout';\nconst Spacer1 = styled.div`\n  height: 0.3rem;\n`;\n\nconst Tutorial = styled(Responsive)`\n  padding-top: 3%;\n    h1 {\n        font-size : 1.2rem;\n        border-bottom: 2px solid rgba(0, 0, 0, 0.08);\n    }\n    span {\n        font-size : 1rem;\n    }\n`;\n//      <Text><h1 style={{zIndex: '100'}}>Hello world</h1></Text>\nconst Main = () => {\n    return (\n      <>\n      <Spacer1 />\n      <MainPhoto/> \n      \n      <Tutorial>\n      <Fade bottom>\n        <MainAbout />\n        <MainCard />\n      </Fade>\n      </Tutorial> \n      \n      <Spacer1/>\n      \n      </>\n    );\n  };\n  \n  export default Main;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport Main from '../components/common/Main';\nimport FooterContainer from '../containers/common/FooterContainer';\n\n\nfunction main() {\n  return (\n    <>\n      <HeaderContainer />\n      <NavContainer />\n      <Main />\n      <FooterContainer/>\n    </>\n  );\n}\nexport default main;","import React, { useEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport ml5 from \"ml5\";\nimport styled from 'styled-components';\nimport {Animated} from \"react-animated-css\";\nimport './Test.css';\n\nconst LabelBlock = styled.div`\n    font-size : 3em;\n    text-align : center;\n    font-weight: bold;\n    padding: 1rem;\n\n`;\nconst Spacer = styled.div`\n    height: 4rem;\n`;\n\nconst Wrapper = styled.div`\n    position: relative;\n    text-align: center;\n`;  \n\nconst Test = ({getData, squatCount, lungeCount, shoulderCount, seconds, minutes, hours}) => {\n    let video, poseNet, brain, pose, skeleton,state = 'waiting';\n    let squat = 0, lungeL = 0, lungeR = 0, press = 0, tree = 0, ck = 0;  //운동 횟수 변수\n    let squatCk = 0, lungeLCk = 0, lungeRCk = 0, pressCk = 0, treeCk = 0; // 각 운동 종료 여부 확인 변수\n    let poseLabel = '분석 중';\n    let timer, timeover;\n    const ww = window.innerWidth*0.7;\n    const wh = window.innerHeight*0.7;\n\n    let analysis = [\n        {\n            exname: \"스쿼트\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 왼쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 오른쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"숄더프레스\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"나무 자세\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        }\n    ]\n    useEffect(() => {\n        myCustomRedrawAccordingToNewPropsHandler();\n    }, []) //test\n\n    const setup = (p5,  canvasParentRef) => {\n        p5.createCanvas(window.innerWidth*0.7, window.innerHeight*0.7).parent(canvasParentRef);\n        video = p5.createCapture(p5.VIDEO);\n        video.size(window.innerWidth*0.7, window.innerHeight*0.7);\n        video.hide();\n        poseNet = ml5.poseNet(video);   //posenet 시작\n        poseNet.on('pose',gotPoses);\n        const options = {\n            inputs: 34,\n            outputs: 7,\n            task: 'classification',\n            debug: true\n        };\n        brain = ml5.neuralNetwork(options);  //ml5 neuralNetwork 시작\n        const modelInfo = {\n            model:\"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.json\",\n            metadata : \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model_meta.json\",\n            weights: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.weights.bin\"\n          };  //model load\n         brain.load(modelInfo, brainLoaded);\n    };\n\n    const draw = (p5) => {\n        p5.translate(p5.width, 0);\n        p5.scale(-1, 1);\n        p5.image(video, 0, 0, window.innerWidth*0.7, window.innerHeight*0.7);\n        if(pose){\n            for(let i=0; i<skeleton.length; i++){\n                let a = skeleton[i][0];\n                let b = skeleton[i][1];\n                p5.strokeWeight(2);\n                p5.stroke(73, 161, 165);\n                p5.line(a.position.x*(window.innerWidth*0.7/ww), a.position.y*(window.innerHeight*0.7/wh), b.position.x*(window.innerWidth*0.7/ww), b.position.y*(window.innerHeight*0.7/wh));\n            }\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x*(window.innerWidth*0.7/ww);\n                let y = pose.keypoints[i].position.y*(window.innerHeight*0.7/wh);\n                p5.fill(0);\n                p5.stroke(255);\n                p5.ellipse(x,y,10,10); \n            }\n        }\n    };\n    const windowResized = (p5) => {\n        p5.resizeCanvas(window.innerWidth*0.7, window.innerHeight*0.7, true);\n      };\n    \n\n    const myCustomRedrawAccordingToNewPropsHandler = () => {\n        if(getData){\n            getData(analysis);    //Exercise Container 로 전달\n        }\n    };\n\n    const gotPoses = (poses, x, y) => {\n        if(poses.length > 0){\n          pose = poses[0].pose;\n          skeleton = poses[0].skeleton;\n          \n          for(let i =0; i<pose.keypoints.length; i++){\n              x = pose.keypoints[i].position.x;\n              y = pose.keypoints[i].position.y;\n            }\n        \n        }\n    };\n    const brainLoaded = () => {\n        console.log('classification ready!');\n        classifyPose();\n    };\n    const classifyPose = () => {\n        detectPose();   //사람 카메라 안으로 들어왔는지 확인 하는 함수\n        if(pose && (state == 'ready')){\n            let inputs = [];\n            for(let i =0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                inputs.push(x);\n                inputs.push(y);\n            }\n            brain.classify(inputs, gotResult);   \n        } else{\n            setTimeout(classifyPose, 100);  //pose 없으면 대기 후 다시 \n          }\n    };\n    const detectPose = () => {\n        state = 'waiting'\n        if (pose) {\n          let nose = pose.keypoints[0].score;\n          let ankleR = pose.keypoints[14].score;\n          if ((nose > 0.5) && (ankleR > 0.5)) {\n            state = 'ready';\n          } else {\n            state = 'waiting';\n          }\n        }\n    };\n    const gotResult = (err, results) => {\n        //console.log(results);\n        if(err){\n            console.log(err);\n            return;\n        }\n        if(results && (results[0].confidence > 0.5)){\n            let la = results[0].label;\n            if(la == '0')    poseLabel = '분석 중';\n            else if(la == '1')  poseLabel = '스쿼트';\n            else if(la == '2')  poseLabel = '런지 왼쪽';\n            else if(la == '3')  poseLabel = '런지 오른쪽';\n            else if(la == '4')  poseLabel = '숄더프레스';\n            else if(la == '5')  poseLabel = '나무 자세';\n          }\n          else  poseLabel = '분석 중';\n          if(poseLabel == '분석 중'){\n              ck = 0;\n              if(tree>0 && !treeCk){        //나무 자세 시간 종료 전에 멈추면 다시 시작하라고 알림\n                  clearInterval(timer);\n                  clearTimeout(timeover);\n                  document.getElementById(\"test\").innerHTML = \"나무 자세 다시 시작 하세요\";\n              }\n          } \n          else {\n            inputLabel(poseLabel);    //라벨, 횟수 화면에 보여주는\n          }\n          console.log(poseLabel);\n          classifyPose();\n    };\n\n    const save = (index, isTree) => {\n        //현재 자세 좌표 저장하는 함수\n        //isTree == 1 => 나무 자세 좌표 (평균 낼 필요 없음)\n        if(!isTree){    \n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                if (index === 0) {\n                    analysis[index].x[i] += (x/squatCount);\n                    analysis[index].y[i] += (y/squatCount);\n                }\n                else if (index === 1) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else if (index === 2) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else {\n                    analysis[index].x[i] += (x/shoulderCount);\n                    analysis[index].y[i] += (y/shoulderCount);\n                }\n                console.log(index);\n                console.log(analysis);\n            }\n        }    \n        else{\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                analysis[index].x[i] += x;\n                analysis[index].y[i] += y;   \n            }\n        }\n    };\n\n    let inputLabel = (label) => {    // 운동 횟수 세기 + 라벨 작성 함수\n        if(label == '스쿼트' && !ck && squat < squatCount){\n            save(0, 0);  // 현재 좌표 저장\n            squat += 1;\n            document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${squat}` + \"회\";\n            ck = 1;\n            if(squat == squatCount && !squatCk){\n                document.getElementById(\"test\").innerHTML = \"사이드 런지 왼쪽 시작하세요\";\n                squatCk = 1;\n            }\n        }  // 스쿼트 개수 세기 (임의로 3개로 해둠)\n        else if(label == '런지 왼쪽' && !ck && lungeL < lungeCount && squatCk==1){\n            save(1, 0);\n            lungeL += 1;\n            document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${lungeL}` + \"회\";\n            ck = 1;\n            if(lungeL == lungeCount && !lungeLCk){\n                document.getElementById(\"test\").innerHTML = \"사이드 런지 오른쪽 시작하세요\";\n                lungeLCk = 1;\n            }\n        }\n        else if(label == '런지 오른쪽' && !ck && lungeR < lungeCount && lungeL >= lungeCount && lungeLCk == 1){\n            save(2, 0);\n            lungeR += 1;\n            document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${lungeR}` + \"회\";\n            ck = 1;\n            if(lungeR == lungeCount && !lungeRCk){\n                document.getElementById(\"test\").innerHTML = \"숄더프레스 시작하세요\";\n                lungeRCk = 1;\n            }\n        }\n        else if(label == '숄더프레스' && !ck && press < shoulderCount && lungeRCk == 1){\n            save(3, 0);\n            press += 1;\n            document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${press}` + \"회\";\n            ck = 1;\n            if(press == shoulderCount && !pressCk){\n                document.getElementById(\"test\").innerHTML = \"나무 자세 시작하세요\";\n                pressCk = 1; \n            }\n        }\n        else if(label == '나무 자세' && !ck && pressCk == 1){\n            tree += 1;\n            ck = 1;   \n            if(!treeCk){\n                let sec = 15;\n                timer = setInterval(() => {\n                    if(sec == 2)    save(4, 1);     //종료 직전에 좌표 저장\n                    document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${sec--}` + \"초 남았습니다.\";\n                }, 1000);   //1초마다 반복\n\n                timeover = setTimeout(()=>{\n                    clearInterval(timer);\n                    treeCk = 1;\n                    document.getElementById(\"test\").innerHTML = \"운동 종료\";\n                    myCustomRedrawAccordingToNewPropsHandler();   //Exercise Container 로 analysis 배열 전달하는 함수\n                }, 16000);      //1초 더 많이 해야 잘 맞음\n            }\n        }\n    };\n\n   return (\n    <>\n    <Wrapper>\n    <Animated animationIn=\"fadeIn\"><LabelBlock id='test'>스쿼트를 시작하세요</LabelBlock></Animated>\n      <Sketch setup={setup} draw={draw} windowResized={windowResized}/>\n    </Wrapper>\n    </>\n   )\n};\nexport default Test;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Progress = styled.div`\n    backgrond-color: #d8d8d8;\n    border-radius: 20px;\n    position: relative;\n    height: 30px;\n    width: 450px;\n    top : 200px;\n    margin : 0 auto;\n    @media (max-width: 750px) {\n        width: 350px;\n        height : 500px\n    }\n`;\n\nconst Done = styled.div`\n    background: linear-gradient(to left, #8BC4C1, #65A1A0);\n    box-shadow: 0 3px 3px -5px #8BC4C1, 0 2px 5px #8BC4C1;\n    border-radius: 20px;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    hegiht: 100%;\n    width: 0;\n    opacity: 0;\n    transition: 3s ease;\n    margin-top: 5%;\n`;\n\nconst Text = styled.span`\n    font-weight: bold;\n    font-size: 1.5em;\n`;\nconst LoadingBar = ({ done }) => {\n    const [style, setStyle] = useState({});\n    setTimeout(()=> {\n        const newStyle = {\n            opacity: 1,\n            width: `${done}%`\n        }\n        setStyle(newStyle);\n    }, 300);\n//가운데 정렬 되도록 수정해야함\n    return (\n        <Progress>\n            <Text>분석 중입니다.</Text>\n            <Done style={style}>{done}%</Done>\n        </Progress>\n    )\n}\n\n\nexport default LoadingBar;","export default __webpack_public_path__ + \"static/media/squatIcon.81d43f46.png\";","export default __webpack_public_path__ + \"static/media/lungeIcon.b27955d5.png\";","export default __webpack_public_path__ + \"static/media/pressIcon.9eaf96a1.png\";","export default __webpack_public_path__ + \"static/media/treeIcon.b519c571.png\";","import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport palette from '../../lib/style/palette';\nimport squatIcon from '../../img/squatIcon.png';\nimport lungeIcon from '../../img/lungeIcon.png';\nimport pressIcon from '../../img/pressIcon.png';\nimport treeIcon from '../../img/treeIcon.png';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n\nconst Ex = styled.div`\n    position: relative;\n    width: 90%;\n    left: 5%;\n    text-align: center;\n    align-items : center;\n    border-radius: 5px;\n    box-shadow: 5px 5px 5px 5px gray;\n    padding-bottom: 2rem;\n    background-color: #f7f7f7;\n    h2{\n        padding-top: 15px;\n        font-weight: bold;\n        font-size : 1.5em;\n        margin-bottom : 40px;\n    }\n\n    @media (max-width: 768px) {\n        height : 1900px;\n    }\n\n`\nconst MtDiv = styled.div`\n    display : block;\n    margin-top : 20px;\n\n`\nconst Mait = styled.div`\n    font-size: 1.5em;\n    color: black;\n    font-style: oblique;\n    font-weight: bold;\n    &:hover{\n        color: gray;\n        text-decoration: none;\n    }\n`;\n\nconst Mt = styled.div`\n    font-size: 1.5em;\n    color: black;\n    ul {\n        padding : 0;\n        list-style-type:none;\n    }\n    li {\n        font-size : 1rem;\n    }\n`;\n\nconst Ai = styled.span`\n  color : ${palette.indigo[9]};\n`;\nconst ExLabel = styled.div`\n    margin-top : 20px;\n    padding : 30px;\n    width : 90%;\n    display: flex;\n    transform: translateX(5%);\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n    @media (max-width: 768px) {\n        display : block;\n        padding : 30px;\n      }\n\n`\nconst Pose = styled.div`\n    display : inline-block;\n    top : 0;\n    img {\n        width : 90px;\n        margin-bottom : 20px;\n    }\n    h3 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 1rem;\n    }\n    h4 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 0.95rem;\n    }\n    @media screen and (max-width: 768px) {\n        display : block;\n        border-bottom : solid rgba(0, 0, 0, .3);\n        margin-bottom : 15px;\n    }\n`;\nconst ScoreDiv = styled.div`\n    width : 100%;\n   text-align : center;\n`\n\nconst Score = styled.div`\n    width : 200px;\n    height : 200px;\n    border-radius : 50%;\n    display : inline-block;\n    box-shadow: 4px 7px 7px 1px rgba(0, 0, 0, 0.3);\n    h3 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 2.75rem;\n        text-align : center;\n        line-height : 210px;\n    }\n    \n`\n\nconst Grade = styled.div`\n    position : absolute;\n    left : 50%;\n    color : red;\n    font-size : 5rem;\n    font-family: 'Gothic A1', sans-serif;\n    font-style : italic;\n    transform: translate(-120%, -10%);\n`\n\nconst ExerciseResult = ({ mistakes }) => {\n\n    let squat = mistakes[0].squat;\n    let lungeL = mistakes[0].lungeL;\n    let lungeR = mistakes[0].lungeR;\n    let press = mistakes[0].press;\n    let tree = mistakes[0].tree;\n    console.log(mistakes);\n\n    let squatMt, lungeLMt, lungeRMt, pressMt, treeMt;\n\n    if (squat.length == 0)  squatMt = <li>완벽합니다!</li>;\n    else squatMt = squat.map((value) => <li>{value}</li>);\n\n    if (lungeL.length == 0)  lungeLMt = <li>완벽합니다!</li>;\n    else lungeLMt = lungeL.map((value) => <li>{value}</li>);\n\n    if (lungeR.length == 0)  lungeRMt = <li>완벽합니다!</li>;\n    else lungeRMt = lungeR.map((value) => <li>{value}</li>);\n\n    if (press.length == 0)  pressMt = <li>완벽합니다!</li>;\n    else pressMt = press.map((value) => <li>{value}</li>);\n\n    if (tree.length == 0)  treeMt = <li>완벽합니다!</li>;\n    else treeMt = tree.map((value) => <li>{value}</li>);\n\n    let mtNum = squat.length + lungeL.length + lungeR.length + press.length + tree.length;\n\n    let grade\n\n    if (mtNum == 0 || mtNum == 1) grade = 'A+';\n    else if (mtNum == 2 || mtNum == 3) grade = 'A-';\n    else if (mtNum == 4 || mtNum == 5) grade ='B+';\n    else if (mtNum == 6 || mtNum == 7) grade ='B-';\n    else if (mtNum == 8 || mtNum == 9) grade ='C+';\n    else if (mtNum == 10 || mtNum == 11) grade ='C-';\n    else if (mtNum == 12) grade ='D+';\n    else if (mtNum == 13) grade ='D-';\n    else if (mtNum == 14) grade ='F!!';\n\n    let fail = 14-mtNum;\n\n    return(\n        \n        <Ex>\n            <div style = {{ paddingTop: '10px', paddingBottom: '10px', backgroundColor: '#e9e9e9'}} >\n            <Mait>M<Ai>AI</Ai>T</Mait>\n            </div>\n            <h2>오늘의 운동 결과</h2>\n            <ScoreDiv>\n                <Grade>{grade}</Grade>\n            <Score>\n                <h3>{fail}/14</h3>\n            </Score>\n            </ScoreDiv>\n            <ExLabel>\n            <Pose>\n                <img src = {squatIcon}/>\n                <h3>스쿼트</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                    {squatMt}\n                    </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {lungeIcon}/>\n                <h3>런지</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                    <h4>왼쪽</h4>\n                    <Mt>\n                        <ul>\n                        {lungeLMt}\n                        </ul>\n                    </Mt>\n                </MtDiv>\n                <MtDiv>\n                    <h4>오른쪽</h4>\n                    <Mt>\n                        <ul>\n                        {lungeRMt}\n                        </ul>\n                    </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {pressIcon}/>\n                <h3>숄더프레스</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                    {pressMt}\n                    </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {treeIcon} style ={{width : '120px', height :\"90px\"}}/>\n                <h3>나무자세</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                {treeMt}\n                </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n            </ExLabel>\n\n        </Ex>\n    );\n};\n\nexport default ExerciseResult;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {Animated} from \"react-animated-css\";\nimport LoadingBar from '../common/LoadingBar';\nimport Responsive from '../common/Responsive';\nimport ExerciseResult from './ExerciseResult';\n\nconst Wrapper1 = styled.div`\n  position:relative;\n  text-align: center;\n`;\n\nconst Wrapper2 = styled.div`\nheight : 500px;\n  position:relative;\n  text-align: center;\n`;\n\nconst Loading = styled(Responsive)`\n    display: flex;\n    width: 100%;\n    align-items: center;\n\n`;\n\nconst Spacer = styled.div`\n  height: 5rem;\n  `;\n\nconst Check = ({analysis}) => {\n    const [showResults, setShowResults] = useState(false);\n    const [trainerAngle, setTrainer] = useState([]);\n    const [result, setResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { user } = useSelector(({ user }) => ({\n        user: user.user\n      }));\n    let mistakes = [   \n      {\n        squat: [],\n        lungeL: [],\n        lungeR: [],\n        press: [],\n        tree: []\n      }\n    ]\n    let userAngle = [\n      {\n        exname: \"스쿼트\",\n        angle: []\n      },\n      {\n        exname: \"사이드 런지 왼쪽\",\n        angle: []\n      },\n      {\n        exname: \"사이드 런지 오른쪽\",\n        angle: []\n      },\n      {\n        exname: \"숄더 프레스\",\n        angle: []\n      },\n      {\n        exname: \"나무 자세\",\n        angle: []\n      }\n    ];\n    const hours = parseInt(user.s/60/60);\n    const minutes = parseInt(user.s%(60*60)/60);\n    const seconds = parseInt(user.s%60);\n\n    const angle = (exer) => {   //user의 좌표로 8개의 인체 각도 계산\n      let idx = 0;\n      if(exer.exname == \"사이드 런지 왼쪽\"){\n        idx = 1;\n      }\n      else if(exer.exname == \"사이드 런지 오른쪽\"){\n        idx = 2;\n      }\n      else if(exer.exname == \"숄더프레스\"){\n        idx = 3;\n      }\n      else if(exer.exname == \"나무 자세\"){\n        idx = 4;\n      }\n      const inputX = exer.x, inputY = exer.y;\n      //왼쪽 허리 부분 (상체-하체)\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[13] - inputY[11], inputX[13] - inputX[11])) + Math.abs(Math.atan2(inputY[5] - inputY[11], inputX[5] - inputX[11]))) * (180 / Math.PI));\n      //오른쪽 허리 부분 (상체-하체)\n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[14] - inputY[12], inputX[14] - inputX[12])) + Math.abs(Math.atan2(inputY[6] - inputY[12], inputX[6] - inputX[12]))) * (180 / Math.PI));\n      //왼쪽 상체 팔(겨드랑이 부분)\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[11] - inputY[5], inputX[11] - inputX[5])) + Math.abs(Math.atan2(inputY[7] - inputY[5], inputX[7] - inputX[5]))) * (180 / Math.PI));\n      //오른쪽 상체 팔(겨드랑이 부분)\n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[8] - inputY[6], inputX[8] - inputX[6])) + Math.abs(Math.atan2(inputY[12] - inputY[6], inputX[12] - inputX[6]))) * (180 / Math.PI));\n      //왼쪽 팔꿈치\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[9] - inputY[7], inputX[9] - inputX[7])) + Math.abs(Math.atan2(inputY[5] - inputY[7], inputX[5] - inputX[7]))) * (180 / Math.PI));\n      //오른쪽 팔꿈치 \n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[10] - inputY[8], inputX[10] - inputX[8])) + Math.abs(Math.atan2(inputY[6] - inputY[8], inputX[6] - inputX[8]))) * (180 / Math.PI));\n      //왼쪽 무릎\n      userAngle[idx].angle.push((Math.abs((Math.atan2(inputY[15] - inputY[13], inputX[15] - inputX[13])) + Math.abs(Math.atan2(inputY[11] - inputY[13], inputX[11] - inputX[13])))) * (180 / Math.PI));\n      //오른쪽 무릎\n      userAngle[idx].angle.push(360 - (Math.abs((Math.atan2(inputY[16] - inputY[14], inputX[16] - inputX[14])) + Math.abs(Math.atan2(inputY[12] - inputY[14], inputX[12] - inputX[14])))) * (180 / Math.PI));\n      console.log(userAngle[idx]);\n     \n      if(idx == 4){\n        calculateAngle();\n      }\n    };\n\n    const calculateAngle = () => {\n       //자세 분석 결과 저장\n    \n      let cmp = 0.0; //각도 차\n      let str = \"\";\n      let squatms = [], lungeLms = [], lungeRms = [], pressms = [], treems = [];\n\n      console.log(userAngle[0].angle[7]);\n      //스쿼트\n      cmp = parseFloat(trainerAngle[0][\"0\"]) - userAngle[0].angle[0];   //스쿼트 허리 계산\n      if(cmp > 10){\n        str = \"상체를 조금 더 세우세요\";\n        squatms.push(str);\n      } \n      else if(cmp < -10){\n        str = \"상체를 조금 더 굽히세요\";\n        squatms.push(str);\n      }\n      \n      cmp = trainerAngle[0][\"6\"] - userAngle[0].angle[6]; //스쿼트 무릎 계산\n      if(cmp > 10){\n        str = \"엉덩이를 조금 더 드세요\";\n        squatms.push(str);\n      }\n      else if(cmp < -10){\n        str = \"엉덩이를 조금 더 내리세요\";\n        squatms.push(str);\n      }\n      //사이드 런지 왼쪽\n      cmp = trainerAngle[1][\"6\"] - userAngle[1].angle[6];  //런지 왼쪽 무릎\n      if(cmp < -10){\n        str = \"왼쪽 무릎을 조금 더 굽히세요\";\n        lungeLms.push(str);\n      } \n      cmp = trainerAngle[1][\"7\"] - userAngle[1].angle[7];   /// 런지 오른쪽 무릎\n      if(cmp > 10 || cmp < -10){\n        str = \"오른쪽 무릎을 조금 더 피세요\";\n        lungeLms.push(str);\n      }\n\n      //사이드 런지 오른쪽\n      cmp = trainerAngle[2][\"6\"] - userAngle[2].angle[6];  //런지 왼쪽 무릎\n      if(cmp > 10 || cmp < -10){\n        str = \"왼쪽 무릎을 조금 더 피세요\";\n        lungeRms.push(str);\n      }\n      cmp = trainerAngle[2][\"7\"] - userAngle[2].angle[7];   //런지 오른쪽 무릎\n      console.log(userAngle[2].angle[7]);\n      if(cmp < -10){\n        str = \"오른쪽 무릎을 조금 더 굽히세요\";\n        lungeRms.push(str);\n      }\n\n      //숄더 프레스\n      cmp = trainerAngle[3][\"3\"] - userAngle[3].angle[3];  //프레스 오른쪽 겨드랑이\n      if(cmp > 10){\n        str = \"오른쪽 팔을 더 올리세요\";\n        pressms.push(str);\n      }\n      cmp = trainerAngle[3][\"2\"] - userAngle[3].angle[2];  //프레스 왼쪽 겨드랑이\n      if(cmp > 10){\n        str = \"왼쪽 팔을 더 올리세요\";\n        pressms.push(str);\n      }\n      cmp = trainerAngle[3][\"5\"] - userAngle[3].angle[5];   //프레스 오른쪽 팔꿈치\n      if(cmp > 10){\n        str = \"오른쪽 팔을 더 피세요\";\n        pressms.push(str);\n      }\n      cmp = trainerAngle[3][\"4\"] - userAngle[3].angle[4];   //프레스 왼쪽 팔꿈치\n      if(cmp > 10){\n        str = \"왼쪽 팔을 더 피세요\";\n        pressms.push(str);\n      }\n\n      //나무 자세\n      cmp = trainerAngle[4][\"1\"] - userAngle[4].angle[1];   //나무자세 오른쪽 허리\n      if(cmp < -10){\n        str = \"오른쪽 다리를 더 올리세요\";\n        treems.push(str);\n      }\n      cmp = trainerAngle[4][\"7\"] - userAngle[4].angle[7];   //나무자세 오른쪽 무릎\n      console.log(trainerAngle[4][\"7\"]);\n      if(cmp < -10){\n        str = \"오른쪽 무릎을 위로 더 굽히세요\";\n        treems.push(str);\n      }\n      mistakes[0].squat = squatms;\n      mistakes[0].lungeL = lungeLms;\n      mistakes[0].lungeR = lungeRms;\n      mistakes[0].press = pressms;\n      mistakes[0].tree = treems;\n      setResult(mistakes);\n      setTimeout(()=> {\n        setShowResults(true);\n      }, 3000);\n    }\n\n    useEffect(() => {\n        console.log(analysis);\n        fetch(`https://smlistener.s3.ap-northeast-2.amazonaws.com/json/new_trainer_angle.json`)\n        .then(results => results.json())\n        .then(json => {\n           setTrainer(json);\n           setLoading(true);\n        })\n        \n    }, [])   \n    \n    useEffect(() => {\n      if(loading){\n        analysis.map(exer => {\n          angle(exer);\n        });\n        \n      }\n    }, [loading])\n\n    \n  return (\n    <>\n    {showResults && <Wrapper1> \n      <Spacer/>\n      <Animated><ExerciseResult mistakes = { result }/> </Animated>\n    </Wrapper1>}\n    {!showResults &&<Wrapper2>\n      <Loading>\n         <LoadingBar done={100}/>\n      </Loading>\n      </Wrapper2>}  \n      </>\n  )\n};\n\n\nexport default Check;","export default __webpack_public_path__ + \"static/media/squat.97b13885.gif\";","export default __webpack_public_path__ + \"static/media/lunge.52c35eea.gif\";","export default __webpack_public_path__ + \"static/media/shoulderpress.cfc1a829.gif\";","export default __webpack_public_path__ + \"static/media/tree.b945f017.png\";","import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\n\nconst Wrapper = styled(Responsive)`\nvertical-align : middle;\n`;\n\nconst ExerCard = styled.div`\n  display : inline-block;\n`;\n\nconst FirstExer = () => {\n\n    const useStyles = makeStyles({\n        root: {\n          maxWidth: '370px', \n          height: '100px',\n          width : \"170px\",\n          boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n          display : 'inline-block'\n          \n        },\n        title: {\n          fontSize: 15,\n          marginBottom : '10px',\n        },\n        arrow: {\n            display : 'inline-block',\n            marginBottom : \"100px\",\n            marginLeft : \"30px\",\n            marginRight : \"30px\",\n            color : \"#1971c2\"\n        }\n      });\n\n      const classes = useStyles();\n\n\n        return (\n            <>\n            <Wrapper>\n                <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 1\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        스쿼트\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 2\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        런지\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 3\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        숄더프레스\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 4\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        나무자세\n                    </Typography>\n                </CardContent>\n            </Card>\n            </Wrapper>\n            </>\n    );\n\n}\n\nexport default FirstExer;","import React, { useEffect, useState } from 'react';\nimport {Animated} from \"react-animated-css\";\nimport styled from 'styled-components';\nimport image1 from '../../img/squat.gif';\nimport image2 from '../../img/lunge.gif';\nimport image3 from '../../img/shoulderpress.gif';\nimport image4 from '../../img/tree.png';\nimport './First.css';\nimport Button from '../../components/common/Button';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../../components/common/Responsive';\nimport FirstExer from '../../components/exercises/FirstExer';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nconst Hello = styled(Responsive)`\n    text-align : center;\n    \n`;\nconst Wrapper1 = styled.div`\nfont-size : 16px;\nmargin : 0 auto;\nheight: 600px;\n@media (max-width: 768px) {\n    height : 750px;\n};\n@media (max-width: 500px) {\n    height : 850px;\n};\n`;\n\nconst Wrapper2 = styled.div`\nfont-size : 16px;\nmargin : 0 auto;\nheight: 630px;\n`;\n\n\nconst Spacer = styled.div`\n  height: 4rem;\n  `;\n\n  const StyledButtonPre = styled(Button)`\n  background: ${palette.gray[6]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n    font-size : 0.8rem;\n    margin-right: 24rem;\n    display : inline-block;\n    padding-left : 5px;\n    @media (max-width: 1100px) {\n        margin-right: 8rem;\n    };\n    @media (max-width: 500px) {\n        margin-right: 1rem;\n    };\n`;\nconst StyledButtonNext = styled(Button)`\nbackground: ${palette.gray[6]};\n&:hover {\n  background: ${palette.gray[5]};\n}\n  font-size : 0.8rem;\n  margin-left: 24rem;\n  display : inline-block;\n  padding-right : 5px;\n  @media (max-width: 1100px) {\n      margin-left: 8rem;\n  };\n  @media (max-width: 500px) {\n    margin-left: 1rem;\n};\n`;\nconst Order = styled.div`\n@media screen (max-width: 768px) {\n  align-items : center;\n};\n`\nconst First = ({setSquatCount, setLungeCount, setShoulderCount}) => {\n       const [timeover, setTimeover] = useState(false);\n       const [visible1, setVisible1] = useState(true);\n       const [visible2, setVisible2] = useState(true);\n       const [exerciseEx, setExerciseEx] = useState(false);\n       const [pose, setPose] = useState(0);\n       const styleExplain = {\n        fontSize : \"1.3rem\",\n        textAlign : \"center\"\n    };\n    const styleExercise = {\n     textAlign : \"center\"\n    };\n       let time1=0;\n       let menus = [\"안녕하세요\", \"운동을 시작해보겠습니다.\", \"우리가 할 운동은 다음과 같이 4가지 입니다.\"];\n        let menuList = menus.map((menu) => {\n            return <Animated \n                    animationIn=\"fadeIn\" \n                    animationInDelay={1000} \n                    animationOut=\"fadeOut\" \n                    animationOutDelay={1000} \n                    isVisible={visible1}\n                    style = {styleExplain}>{menu}</Animated>\n        });\n    \n     useEffect(() => {\n        setTimeout(function() {\n            setVisible1(false);\n        }, 4000);\n        setTimeout(function() {\n            setTimeover(true);\n        }, 6000);\n     }, []);\n\n     const nextPose = () => {\n        if (pose === 0)\n            setPose(1);\n        else if (pose === 1)\n            setPose(2);\n        else if (pose === 2)\n            setPose(3);\n        else\n            setPose(0);\n     };\n     const prePose = () => {\n         if (pose === 1)\n            setPose(0);\n        else if (pose === 2)\n            setPose(1);\n        else if (pose === 3)\n            setPose(2);\n        else\n            setPose(3);\n     }\n     const showExer = () => {\n         setVisible2(false);\n         setTimeout(function() {\n            setExerciseEx(true);\n         }, 3000);\n     }\n     const setSCount = (e) => {\n         setSquatCount(e.target.value);\n     }\n     const setLCount = (e) => {\n        setLungeCount(e.target.value);\n     }\n     const setShCount = (e) => {\n         setShoulderCount(e.target.value);\n     }\n    \n    return (\n        <>\n        {!timeover &&\n         <Wrapper1>\n         <Spacer/><Spacer/>\n         <Hello>{menuList}\n         <Spacer/>\n             <Animated\n                 animationIn=\"fadeIn\"\n                 animationInDelay={2000}\n                 animationOut=\"fadeOut\"\n                 animationOutDelay={1000}\n                 isVisible={visible1}\n             >\n                 <FirstExer/>\n             </Animated>\n         </Hello>\n     </Wrapper1>}\n        {( timeover && !exerciseEx ) &&\n        <Wrapper2>\n            <div id=\"hello\">\n                <Spacer/>\n                <Animated animationIn=\"fadeIn\" animationInDelay={1000} animationOut=\"fadeOut\" animationOutDelay={500} isVisible={visible2}>\n                <div className=\"inputWrapper\">\n                <div id=\"setCount\">먼저 각 운동별 목표 개수를 입력해주세요.<br/>운동 준비가 되었다면 시작버튼을,<br/>운동 자세를 보시려면 운동자세 보기를 눌러주세요.</div>\n                    <table id=\"inputCount\">\n                        <tr id=\"squat\">\n                            <td>\n                            스쿼트\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setSCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"squEx\">스쿼트는 10~15회씩 3~5set를 기본으로 합니다. 처음이시라면 10회부터 시작하여 천천히 늘려보세요.</div>\n                        </tr>\n                        <tr id=\"lunge\">\n                            <td>\n                            런지\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setLCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"lunEx\">런지는 한 쪽 다리에 10~15회씩 3~5set를 기본으로 합니다. 처음이시라면 10회부터 시작하여 천천히 늘려보세요.</div>\n                        </tr>\n                        <tr id=\"press\">\n                            <td>\n                            숄더프레스\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setShCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"preEx\">숄더프레스는 6~15회씩 4set를 기본으로 합니다. 자신에게 알맞은 무게의 덤벨을 이용하면 더 큰 운동 효과를 볼 수 있습니다. 가벼운 무게부터 시작하여 천천히 중량을 늘려보세요.</div>\n                        </tr>\n                    </table>\n                    <div id=\"showExer\" onClick={showExer}>운동자세 보기</div>\n                    </div>\n                </Animated>\n            </div>\n        </Wrapper2>}\n        {exerciseEx && \n        <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n            <Spacer/>\n        <div className=\"ex\">\n                {(pose === 0) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SQUAT</div>\n                <img id=\"image\" src={image1}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향을 기준으로 오른쪽으로 몸을 돌리고 섭니다.</li>\n                        <li>두 손은 모은 상태를 유지합니다.</li>\n                        <li>양발의 간격은 골반보다 조금 더 넓게 유지하고, 양발 끝은 바깥쪽으로 15도~20도 정도 벌려줍니다.</li>\n                        <li>상체는 그대로 꼿꼿이 유지하면서 천천히 엉덩이를 뒤로 빼며 무릎을 굽혀 앉는 자세를 취합니다.</li>\n                        <li>허벅지가 바닥과 평행이 되면 천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 1) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SIDE LUNGE</div>\n                <img id=\"image\" src={image2}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>두 손은 모은 상태를 유지합니다.</li>\n                        <li>양발의 간격이 어깨의 2배정도 되도록 벌려줍니다.</li>\n                        <li>한쪽 방향으로 몸을 옮겨 체중을 실어주며 옮기는 쪽 다리에 대부분의 힘을 준 상태로 허리는 꼿꼿이 펴고 엉덩이를 뒤로 빼며 체중을 실은 쪽의 무릎을 굽혀줍니다.</li>\n                        <li>굽힌 쪽의 허벅지가 바닥과 평행이 되면 천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 2) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SHOULDER PRESS</div>\n                <img id=\"image\" src={image3}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>양발의 간격은 어깨너비로 벌립니다.</li>\n                        <li>허리는 꼿꼿이 핀 상태를 유지합니다.</li>\n                        <li>어깨 좌우 대칭을 유지하고, 손목과 팔꿈치가 일자를 이루도록 하며 팔을 완전히 위쪽으로 펴줍니다.</li>\n                        <li>천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 3) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">TREE POSE</div>\n                <img id=\"image\" src={image4}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>오른쪽 다리를 구부려 들어올립니다.</li>\n                        <li>구부린 다리를 옆으로 열어 골반을 열어줍니다.</li>\n                        <li>구부린 다리를 손으로 잡아 반대 쪽 다리의 허벅지 옆면에 붙여줍니다.</li>\n                        <li>몸의 균형을 잡고 천천히 양 손을 가슴 앞에 모아주어 자세를 유지합니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                <Order>\n                    {exerciseEx && <StyledButtonPre onClick={prePose}><NavigateBeforeIcon/>이전 운동</StyledButtonPre>}\n                    {exerciseEx && <StyledButtonNext onClick={nextPose}>다음 운동<NavigateNextIcon/></StyledButtonNext>}\n                </Order>              \n        </div>\n        </Animated>}\n        </>\n    );\n};\nexport default First;","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'exercise/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_EXERCISE = 'exercise/UNLOAD_exercise'; //운동 비우기\nconst [\n    WRITE_EXERCISE,\n    WRITE_EXERCISE_SUCCESS,\n    WRITE_EXERCISE_FAILIRE,\n] = createRequestActionTypes('exercise/FIND_EXERCISE'); //운동 찾기\n\nexport const writeExercise = createAction(WRITE_EXERCISE, ({ title, username }) => ({\n    title,\n    username\n  }));\nexport const unloadExercise = createAction(UNLOAD_EXERCISE);\n\nconst writeExerciseSaga = createRequestSaga(WRITE_EXERCISE, authAPI.exercise);\n\nexport function* exerciseSaga(){\n    yield takeLatest(WRITE_EXERCISE, writeExerciseSaga);\n}\n\nconst initialState = {\n    exercise: null,\n    error: null,\n};\n\nconst exercise = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [WRITE_EXERCISE]: state=>({\n            ...state,\n            exercise: null,\n            error: null,\n        }),\n        [WRITE_EXERCISE_SUCCESS]: (state, { payload: exercise}) => ({\n            ...state,\n            exercise,\n        }),\n        [WRITE_EXERCISE_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_EXERCISE]: () => initialState,\n    },\n    initialState,\n);\n\nexport default exercise;","import React, { useState, useEffect } from 'react';\nimport Test from '../../components/exercises/Test';\nimport styled from 'styled-components';\nimport Button from '../../components/common/Button';\nimport palette from '../../lib/style/palette';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Check from '../../components/exercises/Check';\nimport First from './First';\nimport { writeExercise } from '../../modules/exercise';\nimport { updateTotalTime, updateLevel } from '../../modules/auth';\nimport './ExerciseContainer.css';\n\n//import squat from './image/squat';\nconst Wrapper = styled.div`\n  text-align: center;\n`;\n\n\n\nconst ButtonWrapper = styled.div`\n  position:flex;\n  bottom: 0;\n  margin-top : 50px;\n  text-align : center;\n  @media (max-width: 768px) {\n    margin-top : 100px;\n  }\n`;\n\nconst StyledButton2 = styled(Button)`\n  background: ${palette.gray[7]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n`;\nconst StyledButton = styled(Button)`\n  background: ${palette.gray[7]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n  position:absolute;\n  bottom: -3%; left:50%;\n  transform: translate(-50%, -50%);\n`;\nconst Spacer = styled.div`\n  height: 3.5rem;\n  `;\n\nconst Text = styled.div`\n  display: block;\n  width: 100%;\n  text-align: center;\n`;\n\nconst Ec = styled.div`\nposition: relative;\n}\n`;\n\nlet analysis = [];\nconst getData = (data) => {\n  analysis = data;\n  console.log(analysis);\n};   //Test.js 에서 analysis 객체 받아오는 함수\nlet squatCount = 15;\nlet lungeCount = 15;\nlet shoulderCount = 15;\nconst setSquatCount = (squat) => {\n  if (squat === '' || parseInt(squat) === 0)\n    squatCount = 15;\n  else if (squat < 0)\n    squatCount = parseInt(-squat);\n  else\n    squatCount = parseInt(squat);\n}\nconst setLungeCount = (lunge) => {\n  if (lunge === '' || parseInt(lunge) === 0)\n    lungeCount = 15;\n  else if (lunge < 0)\n    lungeCount = parseInt(-lunge);\n  else\n    lungeCount = parseInt(lunge);\n}\nconst setShoulderCount = (shoulder) => {\n  if (shoulder === '' || parseInt(shoulder) === 0)\n    shoulderCount = 15;\n  else if (shoulder < 0)\n    shoulderCount = parseInt(-shoulder);\n  else\n    shoulderCount = parseInt(shoulder);\n}\n\nconst ExerciseContainer = () => {\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.modify,\n    auth: auth,\n    authError: auth.authError,\n    user: user.user\n  }));\n  const [showResults, setShowResults] = useState(false);\n  const [first, setFirst] = useState(true);\n  var total = 0;\n  var seconds = 0;\n  var minutes = 0;\n  var time;\n  var msec = 0;\n  var mtime;\n\n\n\n  const videoOff = () => {\n      if (showResults === true) {\n        const video = document.querySelector('video');\n        const mediaStream = video.srcObject;\n        const tracks = mediaStream.getTracks();\n        tracks[0].stop();\n        tracks.forEach(track => track.stop())\n      }\n      setShowResults(false);\n      user.s = total\n      total = total/60;\n      user.t = Number(total.toFixed(2));\n      const username = user.username;\n      const totaltime = Number((user.t + user.totalTime).toFixed(2));\n      let newlevel = '🌱';\n      dispatch(writeExercise({title: user.t, username : username}));\n\n      if (totaltime < 420) \n        newlevel = '🌱';\n      else if (totaltime >= 420 && totaltime < 840)\n        newlevel = '🐣';\n      else if (totaltime >= 840 && totaltime < 1260)\n        newlevel = '👶';\n      else if (totaltime >= 1260 && totaltime < 1680)\n        newlevel = '🏋';\n      else if (totaltime >= 1680 && totaltime < 2100)\n        newlevel = '💪';\n      else if (totaltime >= 2100 && totaltime < 2520)\n        newlevel = '👿';\n      else\n        newlevel = '🦍';\n\n      dispatch(updateTotalTime({ username : username, totalTime :totaltime, level : newlevel}));\n  };\n  const videoOn = () => {\n    setShowResults(true);\n    setFirst(false);\n  };\n  const linkTo = () => {\n    document.location.href = \"/main\";\n  }\n\n\n  useEffect(() => {\n    if (showResults) {\n      setTimeout(function() {\n        document.getElementById('minutes_10').innerHTML = 0;\n          document.getElementById('minutes_1').innerHTML = 0;\n          document.getElementById('seconds_10').innerHTML = 0;\n          document.getElementById('seconds_1').innerHTML = 0;\n        time = setInterval(() => {\n          total++;\n          minutes = parseInt(total/60);\n          document.getElementById('minutes_10').innerHTML = parseInt(minutes/10);\n          document.getElementById('minutes_1').innerHTML = minutes%10;\n          seconds = parseInt(total%60);\n          document.getElementById('seconds_10').innerHTML = parseInt(seconds/10);\n          document.getElementById('seconds_1').innerHTML = seconds%10;\n        }, 1000);\n      }, 5000);\n    }\n    return () => clearInterval(time); \n  });\n\n  useEffect(() => {\n    if (showResults) {\n      setTimeout(function(){\n        mtime = setInterval(() => {\n          msec++;\n          if (msec === 10)\n            msec = 0;\n          document.getElementById('msec').innerHTML = msec;\n        }, 100);\n      }, 5000);\n    }\n    return () => clearInterval(mtime);\n  });\n\n  useEffect(() => {\n    if (showResults === true) {\n      setTimeout(function() {\n        document.getElementById('ready').innerHTML = 'Ready?';\n      }, 1500);\n      setTimeout(function() {\n        document.getElementById('ready').innerHTML = 'Start!';\n      }, 3500);\n      setTimeout(function() {\n        document.getElementById('ready').style.visibility=\"hidden\";\n      }, 5000);\n    }\n  });\n\n  return (\n    <>\n    <Ec>\n    {first && <div><First setSquatCount={setSquatCount} setLungeCount={setLungeCount} setShoulderCount={setShoulderCount}/><Spacer/><StyledButton onClick={videoOn}>시작</StyledButton></div>}\n      {showResults && \n      <Wrapper>\n        <Spacer/>\n        <div id=\"watch\">\n          <div id=\"button\"></div>\n          <div id=\"strap_top\"></div>\n          <div id=\"watch_body\">\n          <div id=\"minutes_10\"></div><div id=\"minutes_1\"></div>\n          <div id=\"seconds_10\"></div><div id=\"seconds_1\"></div>\n          <div id=\"msec\"></div>\n          <div id=\"ready\"></div>\n          </div>\n          <div id=\"strap_bottom\"></div>\n        </div>\n        <Test getData = {getData} squatCount={squatCount} lungeCount={lungeCount} shoulderCount={shoulderCount}/><Spacer/><StyledButton onClick={videoOff}>종료</StyledButton>\n      </Wrapper>}\n      {(!first && !showResults) &&\n      <div>\n        <Check analysis={analysis} style ={{height : \"auto\"}}/>\n        <ButtonWrapper><StyledButton2 onClick={videoOn}>다시시작</StyledButton2> <StyledButton2 onClick={linkTo}>끝내기</StyledButton2></ButtonWrapper>\n      </div>}\n    </Ec>\n    </>\n  ) \n};\nexport default ExerciseContainer;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport { Helmet } from 'react-helmet-async';\nimport ExerciseContainer from '../containers/exercise/ExerciseContainer';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport styled  from 'styled-components';\n\nconst Background = styled.div`\nbackground: linear-gradient(120deg, #d8e2ed 33%, #f5f5f5 33%);\n`;\n\nconst TodayTr = () => {\n    return (\n        <>\n        <Helmet>\n            <title>Today</title>\n        </Helmet>\n        <Background>\n        <HeaderContainer/>\n        <NavContainer/>\n        <ExerciseContainer style = {{overflowX : \"hidden\"}}/>\n        <FooterContainer />\n        </Background>\n        </>\n    );\n};\n\nexport default TodayTr;","import React, {useState} from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { useSelector } from 'react-redux';\nimport palette from '../../lib/style/palette';\n\nconst MyDiv = styled.div`\n  display: inline-block;\n  width : 100%;\n  height : 100%;\n  text-align: center;\n`;\nconst Level = styled.div`\n  display:inline;\n  text-align:center;\n  font-size:1.5rem;\n  font-weight: bold;\n  color : ${palette.gray[8]};\n`;\n\nconst MyPageChart = () => {\n    const user = useSelector(({ user }) => ({ user: user.user }));\n    let data = {\n      datasets: [\n        {\n          data: [10, 20],\n          backgroundColor: [\n            \"rgb(110,198,221)\",\n            \n          ],\n          borderColor: [\n            \"rgb(110,198,221)\",\n            \n          ],\n          borderWidth: 0.3,\n          weight : 0.3\n        }\n      ]\n  };\n    let val = 1, lefttime = 0, num = 0;\n    const time = user.user.totalTime;\n    lefttime = 420-time;\n    if(time > 420 && time <= 840){   \n      val = 2;\n      lefttime = 840-time;\n    } else if(time> 840 && time <= 1260){\n      val = 3;\n      lefttime = 1260-time;\n    } else if(time > 1260 && time <= 1680){\n      val = 4;\n      lefttime = 1680-time;\n    } else if(time > 1680 && time <= 2100){\n      val = 5;\n      lefttime = 2100-time;\n    } else if(time > 2100 && time <= 2520){\n      val = 6;\n      lefttime = 2520-time;\n    } else if(time > 2520){\n      val = 7;\n      lefttime = 0;\n    }\n    if(val != 7){    \n      data.datasets[0].data[0]=(time/(420 * val)) * 100;\n      data.datasets[0].data[1]=100-((time/(420 * val)) * 100);\n      num = Math.floor(data.datasets[0].data[0]);\n    } else if(val == 7){\n      data.datasets[0].data[1] = 0;\n      num = \"MAX\"\n    }\n    const text = \"현재 경험치 \"; \n    \n    return (\n        <MyDiv>\n          <Doughnut data={data}/>\n          <br/>\n          <div style={{paddingBottom: '5%'}}>  \n            <Level>{text}\n            <Level style={{color:'#6ec6dd'}}>{num}</Level> %</Level>\n            <br/>\n            {lefttime>0 && <Level style={{fontSize: '1.2em'}}>다음 레벨 승급까지   \n            <Level style={{fontSize: '1.2em', color: '#6ec6dd'}}> {lefttime}</Level> 분 남았습니다.</Level>}\n          </div>\n        </MyDiv>\n      );\n};\n  \n  export default MyPageChart;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from 'react-redux';\n\nconst MonthExer = () => {\n\n    let jan = 0, feb = 0, mar = 0, apr = 0, may = 0, jun = 0, jul = 0, aug = 0, sep = 0, oct = 0, nov = 0, dec = 0;\n    const user = useSelector(({user}) => ({\n        user: user.user\n    }));\n    const exercises = user.user.exercises;\n    const date = [];\n    if(exercises){\n    const len = exercises.length;\n    //date배열에 달만 뽑아서 저장\n    for(let i = 0 ; i< len; i++) {\n        const exerDate = exercises[i].date;\n        date[i] = exerDate.slice(5,7);\n    }\n\n    for(let i=0; i<len; i++) {\n        switch (date[i]) {\n            case \"01\" :\n                jan += exercises[i].title;\n                break;\n            case \"02\" :\n                feb += exercises[i].title;\n                break;\n            case \"03\" :\n                mar += exercises[i].title;\n                break;\n            case \"04\" :\n                apr += exercises[i].title;\n                break;\n            case \"05\" :\n                may += exercises[i].title;\n                break;\n            case \"06\" :\n                jun += exercises[i].title;\n                break;\n            case \"07\" :\n                jul += exercises[i].title;\n                break;\n            case \"08\" :\n                aug += exercises[i].title;\n                break;\n            case \"09\" :\n                sep += exercises[i].title;\n                break;\n            case \"10\" :\n                oct += exercises[i].title;\n                break;\n            case \"11\" :\n                nov += exercises[i].title;\n                break;\n            case \"12\" :\n                dec += exercises[i].title;\n                break;\n        }\n    };\n}\n\n    let data = {\n        labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n        datasets: [{\n            label: '총 운동 시간',\n            data: [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec ],\n            borderWidth: 1,\n            borderColor: \"rgba(110,198,221, 1)\",\n            backgroundColor: \"rgba(110,198,221, 0.3)\",\n            fill: true,\n            lineTension: 0.2\n        }]\n    };\n\n    let options = {\n        maintainAspectRatio: true, // default value. false일 경우 포함된 div의 크기에 맞춰서 그려짐.\n\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true\n                }\n            }]\n        }\n    };\n\n    return (\n          <Line \n          data = {data}\n          options = {options}/>\n          \n      );\n\n}\n\nexport default MonthExer;","import React, {useState, useEffect} from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer'; \nimport { useSelector} from 'react-redux';\nimport NavContainer from '../components/common/Navbar';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport MyPageChart from '../components/chart/MyPageChart';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport Responsive from '../components/common/Responsive';\nimport Button from '../components/common/Button';\nimport MonthExer from '../components/chart/MonthExer';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Wrapper = styled(Responsive)`\n    display: flex;\n    align-items: center;\n    padding: 10px 5px;\n    span{\n      font-size: 2em;\n      font-weight: bold;\n    }\n    ul{\n      color: #616161;\n      font-size: 1.2em;\n      margin-top: 1em;\n      h2 {\n        color: black;\n      }\n    }\n    @media (max-width: 768px) {\n      span{\n        font-size: 1.5em;\n        font-weight: bold;\n      }\n    }\n   \n`;\n\nconst ChartDiv = styled.div`\n  margin-top: 5%;\n`;\nconst InterDiv = styled.div`\n  margin-left: 12px;\n  margin-top: 5px;\n  color: #616161;\n  float: left;\n`;\nconst useStyles = makeStyles({\n  pc: {\n    minWidth: '100%',\n    maxWidth: '100%',\n    minHeight: '50%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n  mobile: {\n    minWidth: '100%',\n    minHeight: '50%',\n    maxWidth: '100%',\n    marginLeft: '5%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n});\nconst useStyles2 = makeStyles({\n  pc: {\n    minWidth: '100%',\n    minHeight: '100%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n  mobile: {\n    minWidth: '100%',\n    minHeight: '100%',\n    marginLeft: '5%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\", \n  }\n});\nconst MyPage = ({match}) => {\n  const [str, setStr] = useState('헬스 새싹');\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const classes = useStyles();\n  const charclasses = useStyles2();\n  const matches = useMediaQuery('(max-width:768px)');\n  const imgKey = matches ? 'mobile' : 'pc';\n  const space = matches ? 11 : 6;  \n  const monthspace = matches ? 11 : 12;\n  console.log(imgKey);\n  useEffect(() => {\n    let lv = user.level;   \n    if(lv == '🐣') setStr('헬스 병아리');\n    else if(lv == '👶') setStr('헬린이');\n    else if(lv == '🏋')  setStr('헬스 홀릭');\n    else if(lv == '💪')  setStr('헬스 전문가');\n    else if(lv == '👿')  setStr('PT 쌤');\n    else if(lv == '🦍')  setStr('측정 불가');\n  }, [user]);   \n\n  return(\n    <>\n    <Helmet>\n      <title>My Page</title>  \n    </Helmet>\n    <HeaderContainer />\n    <NavContainer />\n    <br/><br/><br/>\n\n    <Wrapper>\n      <Grid container spacing={3}>\n       <Grid item xs = {space} >\n        <Card className={classes[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-running fa-2x\"></i>\n            <span> level</span> \n          </InterDiv>\n          <MyPageChart/>\n        </Card>\n        </Grid>\n        <Grid item xs = {space}>\n        <Card className={classes[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-user fa-2x\"></i>\n            <span> Info</span> \n          </InterDiv> \n          <br/><br/>\n          <ul>\n            <li>닉네임 <h2>{user.username}</h2></li>\n            <li>레벨 <h2>{user.level} {str}</h2></li>\n            <li>총 운동 시간 <h2>{user.totalTime} 분</h2></li>\n          </ul>\n          <div style={{float: 'right', padding: '5%'}}>       \n          <Link to={`/modify/${user._id}`} style={{color: 'black', textDecoration: 'none'}}>\n              <Button>회원 정보 수정</Button>\n          </Link>\n          </div>\n        </Card>\n        </Grid>\n        <Grid item xs = {monthspace} >\n        <Card className = {charclasses[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-chart-line fa-2x\"></i>\n            <span> Monthly Statistics</span> \n          </InterDiv>\n          <ChartDiv>\n            <MonthExer />\n          </ChartDiv>\n        </Card>\n        </Grid>\n        </Grid>\n    </Wrapper>\n    \n    <FooterContainer />\n    </>\n  );\n};\n\nexport default MyPage;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Button from '../common/Button';\nimport { useSelector } from 'react-redux';\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n    text-align : center;\n    font-style : bold;\n  }\n`;\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst ModifyAuthForm = ({form, onChange, onSubmit, error }) => {\n    const text = '비밀번호 변경';\n    const { user } = useSelector(({ user }) => ({ user: user.user }));\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={ user ? user.username : ' ' }\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n          <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.passwordConfirm}\n          />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop fullWidth>\n            {text}\n        </ButtonWithMarginTop>\n      </form>\n    </AuthFormBlock>\n  );\n};\nexport default ModifyAuthForm;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, modify } from '../../modules/auth';\nimport ModifyAuthForm from '../../components/auth/ModifyAuthForm';\nimport { logout } from '../../modules/user';\n\nconst ModifyForm = ({history}) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, user } = useSelector(({ auth, user }) => ({\n      form: auth.modify,\n      user: user.user\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'modify',\n          key: name,\n          value,\n        }),\n      );\n    };\n\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const {password, passwordConfirm} = form;\n      const username = user.username;\n      if([password, passwordConfirm].includes('')) {\n        setError('빈 칸을 모두 입력하세요.');\n        return;\n      }\n        // 비밀번호가 일치하지 않는다면\n        if (password !== passwordConfirm) {\n        setError('비밀번호가 일치하지 않습니다.');\n        dispatch(changeField({ form: 'modify', key: 'password', value: '' }));\n        dispatch(\n          changeField({ form: 'modify', key: 'passwordConfirm', value: '' }),\n        );\n        return;\n      }\n      dispatch(modify({ username, password }));\n      dispatch(logout());\n    };\n\n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('modify'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n      if (!user) {\n        console.log('변경 성공');\n        alert('비밀번호가 변경되었습니다. 다시 로그인해주세요.');\n        history.push('/');\n      }\n      /*\n        if (authError) {\n          console.log('오류 발생');\n          console.log(authError);\n          setError('변경 실패');\n          return;\n        }\n          console.log('변경 성공');\n          dispatch(logout());\n          history.push('/');\n          try {\n            localStorage.setItem('user', JSON.stringify(user));\n          } catch (e) {\n          console.log('localStorage is not working');\n          }\n         */ \n      }, [history, user]);\n\n    return (\n      <ModifyAuthForm\n        type=\"modify\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    );\n  };\n\n  export default withRouter(ModifyForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport ModifyForm from '../containers/auth/ModifyForm';\n\nconst Modify = () => {\n    return (\n        <AuthTemplate>\n            <ModifyForm/>\n        </AuthTemplate>    \n    );\n};\n\nexport default Modify;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  READ_POST,\n  READ_POST_SUCCESS,\n  READ_POST_FAILURE,\n] = createRequestActionTypes('post/READ_POST');\n\nconst [\n  WRITE_COMMENT,\n  WRITE_COMMENT_SUCCESS,\n  WRITE_COMMENT_FAILURE,\n] = createRequestActionTypes('comment/WRITE_COMMENT');\n\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 비우기\n\nexport const readPost = createAction(READ_POST, id => id);\nexport const unloadPost = createAction(UNLOAD_POST);\nexport const writeComment = createAction(WRITE_COMMENT, ({ text, username, id }) => ({\n  text,\n  username,\n  id,\n}));\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\nconst writeCommentSaga = createRequestSaga(WRITE_COMMENT, postsAPI.comment);\n\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n  yield takeLatest(WRITE_COMMENT, writeCommentSaga);\n}\n\nconst initialState = {\n  post: null,\n  error: null,\n};\n\nconst post = handleActions(\n  {\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [READ_POST_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [WRITE_COMMENT]: state => ({\n      ...state,\n      error: null,\n    }),\n    // 포스트 작성 성공\n    [WRITE_COMMENT_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    // 댓글 작성 실패\n    [WRITE_COMMENT_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),  \n    [UNLOAD_POST]: () => initialState,\n  },\n  initialState,\n);\n\nexport default post;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\nimport SubInfo from '../common/SubInfo';\n\nconst PostViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  margin-top: 5em;\n  h1 {\n    font-size: 2.5rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\n\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({ post, error, levels, loading, actionButtons }) => {\n\n  if(error) {\n        if(error.response && error.response.status === 404){\n            return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\n        }\n        return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n    }\n    // 로딩중이거나, 아직 포스트 데이터가 없을 시\n    if (loading || !post) {\n        return null;\n    }\n    const { title, body, user, publishedDate } = post;\n  if(!levels){\n    return null;\n  }\n  return (\n    <PostViewerBlock>\n      <PostHead>\n        <h1>{title}</h1>\n        <SubInfo \n            username = {user.username}\n            userlevel = {levels.level}\n            publishedDate = {publishedDate}\n            hasMarginTop\n        />\n      </PostHead>\n      {actionButtons}\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\n    </PostViewerBlock>\n  );\n};\n\nexport default PostViewer;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst Fullscreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst AskModalBlock = styled.div`\n  width: 320px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst AskModal = ({\n  visible,\n  title,\n  description,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel,\n}) => {\n  if (!visible) return null;\n  return (\n    <Fullscreen>\n      <AskModalBlock>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <div className=\"buttons\">\n          <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\n          <StyledButton cyan onClick={onConfirm}>\n            {confirmText}\n          </StyledButton>\n        </div>\n      </AskModalBlock>\n    </Fullscreen>\n  );\n};\n\nexport default AskModal;","import React from 'react';\nimport AskModal from '../common/AskModal';\n\nconst AskRemoveModal = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <AskModal\n      visible={visible}\n      title=\"포스트 삭제\"\n      description=\"포스트를 정말 삭제하시겠습니까?\"\n      confirmText=\"삭제\"\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default AskRemoveModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport AskRemoveModal from './AskRemoveModal';\n\nconst PostActionButtonsBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n  margin-top: -1.5rem;\n`;\n\nconst ActionButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  color: ${palette.gray[6]};\n  font-weight: bold;\n  border: none;\n  outline: none;\n  font-size: 0.875rem;\n  cursor: pointer;\n  &:hover {\n    background: ${palette.gray[1]};\n    color: ${palette.blue[7]};\n  }\n  & + & {\n    margin-left: 0.25rem;\n  }\n`;\n\nconst PostActionButtons = ({ onEdit, onRemove }) => {\n  const [modal, setModal] = useState(false);\n\n  const onRemoveClick = () => {\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n  const onConfirm = () => {\n      setModal(false);\n      onRemove();\n  };\n\n  return (\n    <>\n      <PostActionButtonsBlock>\n        <ActionButton onClick={onEdit}>수정</ActionButton>\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\n      </PostActionButtonsBlock>\n      <AskRemoveModal visible={modal} onConfirm = {onConfirm} onCancel = {onCancel} />\n    </>\n  );\n};\n\nexport default PostActionButtons;\n","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'level/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_LEVEL = 'level/UNLOAD_LEVEL'; //레벨 비우기\nconst [\n    FIND_LEVEL,\n    FIND_LEVEL_SUCCESS,\n    FIND_LEVEL_FAILIRE,\n] = createRequestActionTypes('level/FIND_LEVEL'); //레벨 찾기\n\nexport const findLevel = createAction(FIND_LEVEL, ({ username }) => ({\n    username,\n}));\nexport const unloadLevel = createAction(UNLOAD_LEVEL);\n\nconst findLevelSaga = createRequestSaga(FIND_LEVEL, authAPI.findLevel);\n\nexport function* levelSaga(){\n    yield takeLatest(FIND_LEVEL, findLevelSaga);\n}\n\nconst initialState = {\n    levelInfo: null,\n    error: null,\n};\n\nconst level = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [FIND_LEVEL]: state=>({\n            ...state,\n            levelInfo: null,\n            error: null,\n        }),\n        [FIND_LEVEL_SUCCESS]: (state, { payload: levelInfo}) => ({\n            ...state,\n            levelInfo,\n        }),\n        [FIND_LEVEL_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_LEVEL]: () => initialState,\n    },\n    initialState,\n);\n\nexport default level;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\nimport { findLevel, unloadLevel } from '../../modules/level';\n\nconst PostViewerContainer = ({ match, history }) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const { postId, username } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading, user, levels } = useSelector(({ post, loading, user, level }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user,\n    levels: level.levelInfo,\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId)); \n    dispatch(findLevel({username}));\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n      dispatch(unloadLevel());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n      dispatch(setOriginalPost(post));\n      history.push('/write');\n  };\n  \n  const onRemove = async () => {\n    try{\n      await removePost(postId);\n      history.push('/postlist');\n    }catch(e){\n      console.log(e);\n    }\n  };\n  const ownPost = (user && user._id) === (post && post.user._id);\n  return <PostViewer post={post} loading={loading} error={error} levels={levels} actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove} />} />;\n};\n\nexport default withRouter(PostViewerContainer);","\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/style/palette';\n\n\nconst SubInfoBlock = styled.div`\n  ${props =>\n    props.hasMarginTop &&\n    css`\n      margin-top: 1rem;\n    `}\n  color: ${palette.gray[6]};\n  /* span 사이에 가운뎃점 문자 보여주기*/\n  span + span:before {\n    color: ${palette.gray[4]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7'; /* 가운뎃점 문자 */\n  }\n`;\nconst Div = styled.div`\n  padding-top: 1.5rem;\n  color: black;\n`;\n\nconst Comment = ({ username, text, publishedDate, hasMarginTop, usrlevel }) => {\n  \n    return (\n      <SubInfoBlock hasMarginTop={hasMarginTop}>\n        <span>\n          <b>\n            {username} \n            <span> {new Date(publishedDate).toLocaleDateString()}</span>\n          </b>\n          <Div>{text}</Div>\n        </span>\n      \n      </SubInfoBlock>\n    );\n  };\n  \n  export default Comment;\n  ","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Comment from '../common/Comment';\n\n\nconst PostItemBlock = styled.div`\n  margin-top:2rem;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({ comments }) => {\n    const { text, user, publishedDate } = comments;\n    return (\n      <PostItemBlock>\n        <Comment\n          username ={user} \n          text={text}\n          publishedDate={new Date(publishedDate)}\n           />\n      </PostItemBlock>\n    );\n};\n\nconst ShowComments = ( { post } ) => {\n    const [arr, setArr] = useState([]);\n   \n    useEffect(()=> {\n      setArr(post.comments);\n    }, [post]);\n\n    return (\n      <div>\n        {arr&& arr.map(comments => (\n          <PostItem comments={comments} key={comments._id} />\n        ))}\n        {arr && !arr.length && <div style={{margin:'5% 0%', color:'black', fontSize:'1.2rem'}}>댓글이 없습니다.</div> } \n      </div>\n    );\n};\n\nexport default ShowComments;","import React, {useState, useEffect} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { writeComment } from '../../modules/post';\nimport ShowComments from '../../components/comments/ShowComments';\nimport Button from '../../components/common/Button';\nimport styled from 'styled-components';\nimport Responsive from '../../components/common/Responsive';\nimport palette from '../../lib/style/palette';\n\nconst CoDiv = styled(Responsive)`\n    border-top: 1px solid ${palette.gray[2]};\n    margin-top : 5rem;\n    padding-bottom : 5rem;\n`;\nconst Comment = styled.div` \n    display: flex;\n    width : 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\n\nconst Cbutton = styled(Button)`\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n    cursor: pointer;\n    background: ${palette.blue[7]};\n    color: white;\n    &:hover {\n        background: ${palette.blue[6]};\n        color: white;\n    }\n    & + & {\n        margin-left: 0.25rem;\n    }\n\n`;\nconst Input = styled.input`\n    width: 100%;\n    border: 1px solid #E8E6E6;\n    padding-left: .8em;\n    font-size: 1rem;\n    font-weight: bold;\n    &:focus{\n        outline:none;\n    }\n`;\nconst CommentContainer = ({ match }) => {\n    const [CommentValue, setCommentValue] = useState(\"\");\n    const [newPost, setNew] = useState({});\n    const [arrSize, setArr] = useState(0);\n    const {user, post} = useSelector(({ user, post }) => ({\n        user: user.user,\n        post: post.post,\n    }));\n    const dispatch = useDispatch();\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const username = user.username;\n        const _id = post._id;\n        dispatch(writeComment({text: CommentValue, username: username, id: _id}));\n        setCommentValue('');\n        \n    };\n    useEffect(() => {\n        if(post){    \n            setNew(post);\n            setArr(post.comments.length);\n        }\n    }, [post])\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value);\n    };\n\n    return(\n        <CoDiv>\n            <div style={{margin:'3% 0%', color:'black', fontSize:'1.2rem'}}>댓글 {arrSize}</div>\n            <div>\n            <Comment>\n                <form style={{ display: 'flex', width: '100%', height: '100px' }} onSubmit={onSubmit} >\n                <Input\n                    onChange={handleChange}\n                    value={CommentValue}\n                    placeholder=\"댓글을 작성하세요\"\n                />\n                <br />\n                </form>\n            </Comment>\n            <br/>\n            <Cbutton style={{float: 'right' }}onClick={onSubmit}>댓글 작성</Cbutton>\n            </div>\n           {newPost && <ShowComments post={newPost}/> }\n\n        </CoDiv>\n    )\n};  \nexport default withRouter(CommentContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport PostViewerContainer from '../containers/post/PostViewerContainer';\nimport CommentContainer from '../containers/comments/CommentContainer';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\n\nconst PostPage = () => {\n    return(\n        <>\n        <Helmet>\n            <title>글 보기</title>\n        </Helmet>\n        <HeaderContainer />\n        <NavContainer />\n        <PostViewerContainer />\n        <CommentContainer />\n        <FooterContainer />\n        </>    \n    );\n};\n\nexport default PostPage;","import { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interaction from '@fullcalendar/interaction';\n\nimport './calendar.scss';\n\nconst MyCal = styled(Responsive)`\n  position : relative;\n  z-index: bottom;\n`;\n\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst Spacer2 = styled.div`\n  height: 1rem;\n`;\n\nconst Calendar = () => {\n  const { user } = useSelector(({ user }) => ({\n    user: user.user\n  }));\n  //const events = [{ title: \"\", date: new Date()}];\n    return  (\n        <>\n        <Spacer />\n        <MyCal>\n            <FullCalendar\n            plugins={[ dayGridPlugin, interaction ]}\n            initialView = 'dayGridMonth'\n            events = {user.exercises}\n            dayMaxEvents = {true}\n            moreLinkClick = \"popover\"\n            contentHeight = \"800px\"\n            eventDisplay = 'block'\n            eventBackgroundColor = \"#1864ab\"\n            />\n        </MyCal>\n        <Spacer2 />\n        </>\n    );\n};\n\nexport default Calendar;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport CalendarContainer from '../components/exercises/Calendar';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport { Helmet } from 'react-helmet-async';\n\nfunction calender() {\n    return (\n      <>\n        <Helmet>\n          <title>Calendar</title>  \n        </Helmet>\n        <HeaderContainer />\n        <NavContainer />\n        <CalendarContainer />\n        <FooterContainer />\n      </>\n    );\n  }\n  export default calender;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport PostListPage from './pages/PostListPage';\nimport WritePage from './pages/WritePage';\nimport MainPage from './pages/MainPage';\nimport TodayTr from './pages/TodayTr';\nimport './App.css';\nimport MyPage from './pages/MyPage';\nimport Modify from './pages/Modify';\nimport PostPage from './pages/PostPage';\nimport CalendarPage from './pages/CalendarPage';\nimport { Helmet } from 'react-helmet-async';\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <title>MAIT_메이트</title>\n      </Helmet>\n      <Route component={HomePage} path={['/@:username', '/']} exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n      <Route component={PostListPage} path={['/postlist/@:username', '/postlist']}/>\n      <Route component={WritePage} path=\"/write\" />\n      <Route component={PostPage} path=\"/@:username/:postId\" />\n      <Route component={MainPage} path=\"/main\" />\n      <Route component={TodayTr} path=\"/todaytr\" />\n      <Route component={MyPage} path=\"/mypage\" />\n      <Route component={CalendarPage} path=\"/calendar\" />\n      <Route component={Modify} path=\"/modify/:id\" />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\nimport write, { writeSaga } from './write';\nimport post, { postSaga } from './post';\nimport posts, { postsSaga } from './posts';\nimport level, {levelSaga} from './level';\nimport exercise, {exerciseSaga} from './exercise';\n\nconst rootReducer = combineReducers({\n  auth,\n  loading,\n  user,\n  write,\n  post,\n  posts,\n  level,\n  exercise\n});\n\nexport function* rootSaga() {\n  yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga(), levelSaga(), exerciseSaga()]);\n}\n\nexport default rootReducer;","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () =>{\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\nexport default ScrollToTop;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport ScrollToTop from './components/common/ScrollToTop';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer, \n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\n\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) {\n      return; // 로그인 상태가 아니라면 아무것도 안함\n    }\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <ScrollToTop />\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}